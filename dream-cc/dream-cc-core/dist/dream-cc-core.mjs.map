{
  "version": 3,
  "sources": ["../src/utils/Injector.ts", "../src/audios/AudioManagerImpl.ts", "../src/audios/AudioChannelImpl.ts", "../src/res/resources/ResImpl.ts", "../src/res/loaders/CCLoader.ts", "../src/ticker/TickerManagerImpl.ts", "../src/ticker/TickerManager.ts", "../src/pools/PoolImpl.ts", "../src/pools/Pool.ts", "../src/events/Event.ts", "../src/events/EventListener.ts", "../src/events/EventDispatcher.ts", "../src/datas/Dictionary.ts", "../src/timer/TimerImpl.ts", "../src/timer/Timer.ts", "../src/res/resources/ResourceManagerImpl.ts", "../src/res/resources/ResourceManager.ts", "../src/res/resources/Resource.ts", "../src/loggers/LoggerImpl.ts", "../src/loggers/Logger.ts", "../src/res/ResRef.ts", "../src/res/loaders/LoaderQueue.ts", "../src/res/loaders/LoaderManagerImpl.ts", "../src/res/loaders/LoaderManager.ts", "../src/res/ResRequest.ts", "../src/utils/ClassUtils.ts", "../src/res/Res.ts", "../src/audios/AudioManager.ts", "../src/bindings/FunctionHook.ts", "../src/bindings/PropertyBinder.ts", "../src/bindings/Binder.ts", "../src/configs/accessors/ConfigStorage.ts", "../src/configs/accessors/BaseConfigAccessor.ts", "../src/configs/accessors/IDConfigAccessor.ts", "../src/configs/res/LocalConfigLoader.ts", "../src/configs/ConfigManagerImpl.ts", "../src/configs/ConfigManager.ts", "../src/configs/res/RemoteConfigLoader.ts", "../src/datas/List.ts", "../src/datas/ser_des/ChangedData.ts", "../src/datas/ser_des/SerDesMode.ts", "../src/datas/ser_des/values/BaseValue.ts", "../src/datas/ser_des/values/ArrayValue.ts", "../src/datas/ser_des/values/DictionaryValue.ts", "../src/datas/ser_des/propertys/ArrayProperty.ts", "../src/datas/ser_des/propertys/DictionaryProperty.ts", "../src/datas/ser_des/values/NumberValue.ts", "../src/datas/ser_des/propertys/NumberProperty.ts", "../src/datas/ser_des/values/StringValue.ts", "../src/datas/ser_des/propertys/StringProperty.ts", "../src/datas/ser_des/DataFactory.ts", "../src/datas/ser_des/deserializations/JSONDeserialization.ts", "../src/datas/ser_des/serializations/JSONSerialization.ts", "../src/datas/ser_des/SerDes.ts", "../src/func/redPoint/RedPoint.ts", "../src/func/redPoint/RedPointNode.ts", "../src/func/Func.ts", "../src/func/FuncNode.ts", "../src/modules/Module.ts", "../src/modules/ModuleManager.ts", "../src/modules/ModuleLoader.ts", "../src/modules/ModuleProxy.ts", "../src/modules/ModuleQueue.ts", "../src/modules/ModuleRequest.ts", "../src/net/http/Http.ts", "../src/net/socket/SocketManagerImpl.ts", "../src/net/socket/SocketManager.ts", "../src/net/socket/Socket.ts", "../src/tasks/Task.ts", "../src/tasks/TaskQueue.ts", "../src/tasks/TaskSequence.ts", "../src/utils/BitFlag.ts", "../src/utils/Handler.ts", "../src/utils/StringUtils.ts", "../src/utils/I18N.ts", "../src/utils/MathUtils.ts", "../src/utils/ObjectUtils.ts", "../src/Engine.ts"],
  "sourcesContent": ["/**\r\n * \u7B80\u6613\u6CE8\u5165\u5668\r\n */\r\nexport class Injector {\r\n\r\n    /**\u7C7B\u578B\u5B57\u5178*/\r\n    private static __injectedMap: Map<string, any> = new Map<string, any>();\r\n    /**\u5B9E\u4F8B\u5B57\u5178*/\r\n    private static __instanceMap: Map<string, any> = new Map<string, any>();\r\n\r\n    /**\r\n     * \u6CE8\u5165\r\n     * @param key \r\n     * @param clazz   \u7C7B\u578B\u6216\u5B9E\u4F8B\r\n     */\r\n    static inject(customKey: string, clazz: any): void {\r\n        if (clazz instanceof Function) {\r\n            this.__injectedMap.set(customKey, clazz);\r\n        } else {\r\n            this.__instanceMap.set(customKey, clazz);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5DF2\u6CE8\u5165\u7684\u7C7B\u578B\u5B9E\u4F8B\r\n     */\r\n    static getInject(customKey: string): any | null {\r\n        let instance: any = this.__instanceMap.get(customKey);\r\n        if (instance) {\r\n            return instance;\r\n        }\r\n        let clazz: any | undefined = this.__injectedMap.get(customKey);\r\n        if (clazz === undefined) {\r\n            return null;\r\n        }\r\n        instance = new clazz();\r\n        this.__instanceMap.set(customKey, instance);\r\n        return instance;\r\n    }\r\n}", "import { director, find, Node } from \"cc\";\r\nimport { AudioChannelImpl } from \"./AudioChannelImpl\";\r\nimport { IAudioManager } from \"./IAudioManager\";\r\nimport { IAudioChannel } from \"./IAudioChannel\";\r\nimport { TickerManager } from \"../ticker/TickerManager\";\r\nimport { ResURL } from \"../res/ResURL\";\r\nimport { Res } from \"../res/Res\";\r\nimport { AudioManager } from \"./AudioManager\";\r\n\r\n\r\n/**\r\n * \u97F3\u9891\u64AD\u653E\u7BA1\u7406\u5668\r\n */\r\nexport class AudioManagerImpl implements IAudioManager {\r\n\r\n    private __audioRoot: Node;\r\n\r\n    private __musicChannels: Array<IAudioChannel>;\r\n    private __musicChannelIndex: number = 0;\r\n    private __soundChannels: Array<IAudioChannel>;\r\n\r\n    constructor() {\r\n        this.__musicChannels = [];\r\n        this.__soundChannels = [];\r\n\r\n        TickerManager.addTicker(this);\r\n        this.__audioRoot = find(\"AudioManager\");\r\n        if (this.__audioRoot == null) {\r\n            this.__audioRoot = new Node(\"AudioManager\");\r\n            director.getScene().addChild(this.__audioRoot);\r\n        }\r\n\r\n        //\u97F3\u4E50\u7528\u4E24\u4E2A\u8F68\u9053\u6765\u505A\u6DE1\u5165\u548C\u6DE1\u51FA\r\n        let channel: IAudioChannel;\r\n        for (let index = 0; index < 2; index++) {\r\n            channel = new AudioChannelImpl(this.__audioRoot);\r\n            this.__musicChannels.push(channel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u603B\u97F3\u91CF\r\n     */\r\n    get volume(): number {\r\n        return this.__volume;\r\n    }\r\n    private __volume: number = 1;\r\n    set volume(value: number) {\r\n        if (this.__volume == value) {\r\n            return;\r\n        }\r\n        this.__volume = value;\r\n        let channelVolume: number;\r\n        let channel: IAudioChannel;\r\n        for (let index = 0; index < this.__musicChannels.length; index++) {\r\n            channel = this.__musicChannels[index];\r\n            if (channel.isPlaying) {\r\n                channelVolume = channel.volume * this.__musicVolume * this.__volume;\r\n                channel.fade(0.1, channelVolume, channel.curVolume);\r\n            }\r\n        }\r\n        for (let index = 0; index < this.__soundChannels.length; index++) {\r\n            channel = this.__soundChannels[index];\r\n            if (channel.isPlaying) {\r\n                channelVolume = channel.volume * this.__soundVolume * this.__volume;\r\n                channel.fade(0.1, channelVolume, channel.curVolume);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u97F3\u4E50\u603B\u97F3\u91CF\u63A7\u5236\r\n     */\r\n    set musicVolume(value: number) {\r\n        if (this.__musicVolume == value) {\r\n            return;\r\n        }\r\n        this.__musicVolume = value;\r\n        if (this.muteMusic) {\r\n            return;\r\n        }\r\n        let current: IAudioChannel = this.__musicChannels[this.__musicChannelIndex];\r\n        if (current && current.isPlaying) {\r\n            let channelVolume: number = current.volume * this.__musicVolume * this.__volume;\r\n            current.fade(0.1, channelVolume, current.curVolume);\r\n        }\r\n    }\r\n\r\n    private __musicVolume: number = 1;\r\n    get musicVolume(): number {\r\n        return this.__musicVolume;\r\n    }\r\n\r\n    /**\r\n     * \u58F0\u97F3\u603B\u97F3\u91CF\r\n     */\r\n    get soundVolume(): number {\r\n        return this.__soundVolume;\r\n    }\r\n    private __soundVolume: number;\r\n    set soundVolume(value: number) {\r\n        if (this.__soundVolume == value) {\r\n            return;\r\n        }\r\n        this.__soundVolume = value;\r\n        let channel: IAudioChannel;\r\n        for (let index = 0; index < this.__soundChannels.length; index++) {\r\n            channel = this.__soundChannels[index];\r\n            if (channel.isPlaying) {\r\n                let channelVolume: number = channel.volume * this.__soundVolume * this.__volume;\r\n                channel.fade(0.1, channelVolume, channel.curVolume);\r\n            }\r\n        }\r\n    }\r\n\r\n    set mute(value: boolean) {\r\n        if (this.__mute == value) {\r\n            return;\r\n        }\r\n        this.__mute = value;\r\n        this.__changedMutes();\r\n    }\r\n    private __mute: boolean;\r\n    get mute(): boolean {\r\n        return this.__mute;\r\n    }\r\n\r\n    get muteMusic(): boolean {\r\n        return this.__muteMusic;\r\n    }\r\n    private __muteMusic: boolean;\r\n\r\n    set muteMusic(value: boolean) {\r\n        if (this.__muteMusic == value) {\r\n            return;\r\n        }\r\n        this.__muteMusic = value;\r\n        this.__changedMutes();\r\n    }\r\n\r\n    get muteSound(): boolean {\r\n        return this.__muteSound;\r\n    }\r\n    private __muteSound: boolean;\r\n\r\n    set muteSound(value: boolean) {\r\n        if (this.__muteSound == value) {\r\n            return;\r\n        }\r\n        this.__muteSound = value;\r\n        this.__changedMutes();\r\n    }\r\n\r\n    private __changedMutes(): void {\r\n        for (let index = 0; index < this.__musicChannels.length; index++) {\r\n            const element = this.__musicChannels[index];\r\n            element.mute = this.muteMusic || this.mute;\r\n        }\r\n        for (let index = 0; index < this.__soundChannels.length; index++) {\r\n            const element = this.__soundChannels[index];\r\n            element.mute = this.muteSound || this.mute;;\r\n        }\r\n    }\r\n\r\n    playMusic(url: ResURL, volume: number, speed: number): void {\r\n        let playVolume: number;\r\n        if (this.muteMusic || this.mute) {\r\n            playVolume = 0;\r\n        } else {\r\n            //\u97F3\u91CF=\u8F68\u9053\u97F3\u91CF*\u97F3\u4E50\u97F3\u91CF*\u603B\u97F3\u91CF\r\n            playVolume = volume * this.__musicVolume * this.__volume;\r\n        }\r\n        //\u6B63\u5728\u64AD\u653E\u7684\u8F68\u9053\r\n        let current: IAudioChannel = this.__musicChannels[this.__musicChannelIndex];\r\n        if (current && current.isPlaying) {\r\n            if (Res.urlEqual(current.url, url)) {\r\n                //\u64AD\u653E\u76F8\u540C\u7684\u97F3\u4E50\r\n                return;\r\n            }\r\n        }\r\n        this.__musicChannelIndex++;\r\n        this.__musicChannelIndex = this.__musicChannelIndex % 2;\r\n        let last: IAudioChannel;\r\n        if (this.__musicChannelIndex == 0) {\r\n            current = this.__musicChannels[0];\r\n            last = this.__musicChannels[1];\r\n        } else {\r\n            current = this.__musicChannels[1];\r\n            last = this.__musicChannels[0];\r\n        }\r\n        if (last.isPlaying) {\r\n            last.fade(0.5, 0, undefined, null, true);\r\n        }\r\n        current.volume = volume;\r\n        current.play(url, null, playVolume, { time: 0.5, startVolume: 0 }, true, speed);\r\n    }\r\n\r\n    stopMusic(): void {\r\n        let current: IAudioChannel = this.__musicChannels[this.__musicChannelIndex];\r\n        if (current && current.isPlaying) {\r\n            current.stop();\r\n        }\r\n    }\r\n\r\n    pauseMusic(): void {\r\n        let current: IAudioChannel = this.__musicChannels[this.__musicChannelIndex];\r\n        if (current) {\r\n            current.pause();\r\n        }\r\n    }\r\n\r\n    resumeMusic(): void {\r\n        let current: IAudioChannel = this.__musicChannels[this.__musicChannelIndex];\r\n        if (current) {\r\n            current.resume();\r\n        }\r\n    }\r\n\r\n    playSound(url: ResURL, playedCallBack: () => void, volume: number, speed: number, loop: boolean): void {\r\n        let playVolume: number;\r\n        if (this.muteSound || this.mute) {\r\n            playVolume = 0;\r\n        } else {\r\n            playVolume = this.soundVolume * volume * this.__volume;\r\n        }\r\n        let channel: IAudioChannel = this.GetIdleChannel();\r\n        if (channel) {\r\n            channel.volume = volume;\r\n            channel.play(url, playedCallBack, playVolume, null, loop, speed);\r\n        }\r\n    }\r\n\r\n    getPlaying(url: ResURL): IAudioChannel {\r\n        for (let index = 0; index < this.__soundChannels.length; index++) {\r\n            const element = this.__soundChannels[index];\r\n            if (element.isPlaying && Res.urlEqual(element.url, url)) {\r\n                return element;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private GetIdleChannel(): IAudioChannel {\r\n        let index: number;\r\n        let channel: IAudioChannel;\r\n        for (index = 0; index < this.__soundChannels.length; index++) {\r\n            channel = this.__soundChannels[index];\r\n            if (channel.isPlaying == false) {\r\n                return channel;\r\n            }\r\n        }\r\n        if (index < AudioManager.MAX_SOUND_CHANNEL_COUNT) {\r\n            channel = new AudioChannelImpl(this.__audioRoot);\r\n            this.__soundChannels.push(channel);\r\n            return channel;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        for (let index = 0; index < this.__musicChannels.length; index++) {\r\n            const element = this.__musicChannels[index];\r\n            if (element.isPlaying) {\r\n                element.tick(dt);\r\n            }\r\n        }\r\n        for (let index = 0; index < this.__soundChannels.length; index++) {\r\n            const element = this.__soundChannels[index];\r\n            if (element.isPlaying) {\r\n                element.tick(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { AudioSource, Node } from \"cc\";\r\nimport { Res } from \"../res/Res\";\r\nimport { ResURL } from \"../res/ResURL\";\r\nimport { Timer } from \"../timer/Timer\";\r\nimport { IAudioChannel } from \"./IAudioChannel\";\r\nimport { Logger } from \"../loggers/Logger\";\r\nimport { ResRequest } from \"../res/ResRequest\";\r\n\r\n\r\n\r\nexport class AudioChannelImpl implements IAudioChannel {\r\n\r\n    private __node: Node;\r\n    private __source: AudioSource;\r\n    private __isPlaying: boolean;\r\n    private __url: ResURL;\r\n\r\n    private __volume: number;\r\n    private __speed: number;\r\n    private __loop: boolean;\r\n\r\n    private __startTime: number;\r\n    private __time: number;\r\n\r\n    private __fadeData: FadeData;\r\n\r\n    private __paused: boolean;\r\n    private __pauseTime: number;\r\n    private __playedComplete: () => void;\r\n\r\n    private __reqeust: ResRequest | null = null;\r\n\r\n    private __mute: boolean;\r\n\r\n    volume: number;\r\n\r\n    constructor(node: Node, source?: AudioSource) {\r\n        if (source == null) {\r\n            source = node.addComponent(AudioSource);\r\n        }\r\n        this.__node = node;\r\n        this.__source = source;\r\n    }\r\n\r\n    get url(): ResURL {\r\n        return this.__url;\r\n    }\r\n\r\n    get mute(): boolean {\r\n        return this.__mute;\r\n    }\r\n\r\n    set mute(value: boolean) {\r\n        if (this.__mute == value) {\r\n            return;\r\n        }\r\n        this.__mute = value;\r\n        if (this.__mute) {\r\n            //\u8BB0\u5F55\u4E0B\u6765\r\n            this.__volume = this.__source.volume;\r\n            this.__source.volume = 0;\r\n        } else {\r\n            //\u6839\u636E\u8BB0\u5F55\u8BBE\u7F6E\r\n            this.__source.volume = this.__volume;\r\n        }\r\n    }\r\n\r\n    play(url: ResURL, playedComplete: () => void, volume: number, fade?: { time: number, startVolume?: number, complete?: Function, completeStop?: boolean }, loop: boolean = false, speed: number = 1): void {\r\n        this.__reset();\r\n        this.__url = url;\r\n        this.__playedComplete = playedComplete;\r\n        this.__isPlaying = true;\r\n\r\n        this.__speed = speed;\r\n        this.__loop = loop;\r\n        if (fade) {\r\n            if (fade.time <= 0) {\r\n                if (this.mute) {\r\n                    this.__volume = volume;\r\n                } else {\r\n                    this.__source.volume = volume;\r\n                }\r\n            }\r\n            if (this.__fadeData == null) {\r\n                this.__fadeData = new FadeData();\r\n            }\r\n            this.__fadeData.startTime = Timer.currentTime;\r\n            this.__fadeData.startValue = fade.startVolume == undefined ? this.__source.volume : fade.startVolume;\r\n            this.__fadeData.time = fade.time;\r\n            this.__fadeData.endValue = volume;\r\n            this.__fadeData.complete = fade.complete;\r\n            this.__fadeData.completeStop = fade.completeStop;\r\n        } else {\r\n            this.__volume = volume;\r\n        }\r\n        //\u672A\u52A0\u8F7D\u5B8C\u6210\u524D\uFF0C\u97F3\u9891\u7684\u7ED3\u675F\u65F6\u95F4\u4E3A\u65E0\u7A77\u5927\r\n        this.__startTime = Timer.currentTime;\r\n        this.__time = Number.MAX_VALUE;\r\n\r\n        if (this.__reqeust) {\r\n            this.__reqeust.dispose();\r\n            this.__reqeust = null;\r\n        }\r\n        this.__reqeust = Res.create(\r\n            this.url,\r\n            \"AudioChannel\",\r\n            undefined,\r\n            (err?: Error) => {\r\n                if (err) {\r\n                    this.__reqeust.dispose();\r\n                    this.__reqeust = null;\r\n                    Logger.error(err, Logger.TYPE.RES);\r\n                    this.__isPlaying = false;\r\n                    this.__source.stop();\r\n                    return;\r\n                }\r\n                if (this.__isPlaying == false) {\r\n                    return;\r\n                }\r\n                this.__play();\r\n            }\r\n        );\r\n        this.__reqeust.load();\r\n    }\r\n\r\n    stop(): void {\r\n        if (this.__source.playing) {\r\n            this.__source.stop();\r\n        }\r\n        this.__isPlaying = false;\r\n        this.__reset();\r\n    }\r\n\r\n    get isPlaying(): boolean {\r\n        return this.__isPlaying || this.__source.playing;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param time \r\n     * @param endVolume \r\n     * @param startVolume \r\n     * @param complete \r\n     * @param completeStop \r\n     * @returns \r\n     */\r\n    fade(time: number, endVolume: number, startVolume?: number, complete?: Function, completeStop?: boolean): void {\r\n        if (!this.isPlaying) {\r\n            return;\r\n        }\r\n        this.__paused = false;\r\n        //\u7ACB\u523B\r\n        if (time <= 0) {\r\n            if (this.mute) {\r\n                this.__volume = endVolume;\r\n            } else {\r\n                this.__source.volume = endVolume;\r\n            }\r\n            if (completeStop) {\r\n                this.stop();\r\n                if (complete) {\r\n                    complete();\r\n                }\r\n            }\r\n        } else {\r\n            if (this.__fadeData == null) {\r\n                this.__fadeData = new FadeData();\r\n            }\r\n            this.__fadeData.startTime = Timer.currentTime;\r\n            this.__fadeData.startValue = startVolume == undefined ? this.__source.volume : startVolume;\r\n            this.__fadeData.time = time;\r\n            this.__fadeData.endValue = endVolume;\r\n            this.__fadeData.complete = complete;\r\n            this.__fadeData.completeStop = completeStop;\r\n        }\r\n    }\r\n\r\n    private __reset(): void {\r\n        this.__url = null;\r\n        if (this.__reqeust) {\r\n            this.__reqeust.dispose();\r\n            this.__reqeust = null;\r\n        }\r\n        this.__isPlaying = false;\r\n        this.__paused = false;\r\n        this.__fadeData = null;\r\n    }\r\n\r\n    // private __clipLoaded(err: Error | null, result: ResRef): void {\r\n    //     if (err) {\r\n    //         if (Logger.isDebug(\"Core\")) {\r\n    //             console.error(err.message);\r\n    //         }\r\n    //         this.__isPlaying = false;\r\n    //         this.__source.stop();\r\n    //         return;\r\n    //     }\r\n    //     if (this.__isPlaying == false) {\r\n    //         result.dispose();\r\n    //         return;\r\n    //     }\r\n    //     let resKey: string = Res.url2Key(this.url);\r\n    //     if (resKey != result.key) {\r\n    //         result.dispose();\r\n    //         return;\r\n    //     }\r\n    //     this.__ref = result;\r\n    //     this.__play();\r\n    // }\r\n\r\n    private __play(): void {\r\n        this.__source.clip = this.__reqeust.getRef().content;\r\n        this.__source.loop = this.__loop;\r\n        this.__source.play();\r\n\r\n        let currentTime: number = Timer.currentTime;\r\n        if (this.__fadeData) {\r\n            this.__fadeData.startTime = currentTime;\r\n            if (this.mute) {\r\n                this.__volume = this.__fadeData.startValue;\r\n            } else {\r\n                this.__source.volume = this.__fadeData.startValue;\r\n            }\r\n        } else {\r\n            if (!this.mute) {\r\n                this.__source.volume = this.__volume;\r\n            } else {\r\n                this.__source.volume = 0;\r\n            }\r\n        }\r\n        this.__startTime = Timer.currentTime;\r\n        this.__time = this.__source.duration * 1000;\r\n        // let audio = this.__source[\"audio\"];\r\n        // if (audio) {\r\n        //     if (\"_element\" in audio) {\r\n        //         let element = audio[\"_element\"];\r\n        //         if (\"_currentSource\" in element) {\r\n        //             let currentSource = element[\"_currentSource\"];\r\n        //             if (\"playbackRate\" in currentSource) {\r\n        //                 let playbackRate = currentSource[\"playbackRate\"];\r\n        //                 if (\"value\" in playbackRate) {\r\n        //                     playbackRate[\"value\"] = this.__speed;\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        if (this.__paused || this.__isPlaying == false || this.__url == null) {\r\n            return;\r\n        }\r\n        let currentTime: number = Timer.currentTime;\r\n        let passTime: number;\r\n        if (this.__fadeData) {\r\n            passTime = currentTime - this.__fadeData.startTime;\r\n            let value: number = passTime / this.__fadeData.time;\r\n            value = value > 1 ? 1 : value;\r\n            //\u97F3\u91CF\u8BBE\u7F6E\r\n            if (!this.mute) {\r\n                this.__source.volume = this.__fadeData.startValue + (this.__fadeData.endValue - this.__fadeData.startValue) * value;\r\n            } else {\r\n                this.__volume = this.__fadeData.startValue + (this.__fadeData.endValue - this.__fadeData.startValue) * value;\r\n            }\r\n            if (value == 1) {\r\n                let complete: Function = this.__fadeData.complete;\r\n                if (this.__fadeData.completeStop) {\r\n                    this.__source.stop();\r\n                    this.__isPlaying = false;\r\n                    this.__reset();\r\n                }\r\n                if (complete) {\r\n                    complete();\r\n                }\r\n                this.__fadeData = null;\r\n            }\r\n        }\r\n\r\n        //\u5FAA\u73AF\u64AD\u653E\r\n        if (this.__loop) {\r\n            return;\r\n        }\r\n        //\u68C0\u6D4B\u662F\u5426\u7ED3\u675F\r\n        passTime = currentTime - this.__startTime;\r\n        let value: number = passTime / this.__time;\r\n        if (value >= 1) {\r\n            //\u64AD\u653E\u5B8C\u6210\r\n            // Debuger.Log(Debuger.DRONGO, \"\u64AD\u653E\u5B8C\u6210\uFF01\" + this.__url);\r\n            this.__source.stop();\r\n            this.__isPlaying = false;\r\n            if (this.__playedComplete) {\r\n                this.__playedComplete();\r\n            }\r\n            this.__reset();\r\n        }\r\n    }\r\n\r\n    resume(): void {\r\n        if (this.__paused == false) {\r\n            return;\r\n        }\r\n        let pTime: number = Timer.currentTime - this.__pauseTime;\r\n        if (this.__fadeData) {\r\n            this.__fadeData.startTime += pTime;\r\n        }\r\n        this.__startTime += pTime;\r\n        this.__source.play();\r\n        this.__paused = false;\r\n    }\r\n\r\n    pause(): void {\r\n        if (this.__paused) {\r\n            return;\r\n        }\r\n        this.__paused = true;\r\n        this.__pauseTime = Timer.currentTime;\r\n        this.__source.pause();\r\n    }\r\n\r\n    get curVolume(): number {\r\n        return this.__source.volume;\r\n    }\r\n}\r\n\r\nclass FadeData {\r\n    time: number;\r\n    startTime: number;\r\n    startValue: number;\r\n    endValue: number;\r\n    complete: Function;\r\n    completeStop: boolean;\r\n}", "import { Asset, AssetManager, assetManager, SpriteFrame, Texture2D } from \"cc\";\r\nimport { ILoader } from \"../loaders/ILoader\";\r\nimport { IRes } from \"./IRes\";\r\nimport { ResURL } from \"../ResURL\";\r\nimport { CCLoader } from \"../loaders/CCLoader\";\r\nimport { Pool } from \"../../pools/Pool\";\r\nimport { ResRequest } from \"../ResRequest\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\n\r\n/**\r\n * \u8D44\u6E90\u5165\u53E3\u5B9E\u73B0\r\n */\r\nexport class ResImpl implements IRes {\r\n\r\n    private loaderClass: Map<string, new () => ILoader>;\r\n\r\n    /**\r\n     * \u8D44\u6E90\u7C7B\u578B\u6620\u5C04\r\n     */\r\n    private __assetTypes = new Map<string, typeof Asset>();\r\n\r\n    constructor() {\r\n        this.loaderClass = new Map<string, new () => ILoader>();\r\n    }\r\n\r\n    url2Key(url: ResURL): string {\r\n        if (url == null || url == undefined) {\r\n            return \"\";\r\n        }\r\n        if (typeof url == \"string\") {\r\n            return url;\r\n        }\r\n        let ul: string;\r\n        if (url.type == SpriteFrame) {\r\n            ul = url.url + \"/spriteFrame\";\r\n        } else if (url.type == Texture2D) {\r\n            ul = url.url + \"/texture\";\r\n        } else {\r\n            ul = url.url;\r\n        }\r\n        return ul + \"|\" + url.bundle + \"|\" + this.getAndSaveClassName(url.type);\r\n    }\r\n\r\n    key2Url(key: string): ResURL {\r\n        if (key.indexOf(\"|\")) {\r\n            let arr: Array<string> = key.split(\"|\");\r\n            return { url: this.path2Key(arr[0]), bundle: arr[1], type: this.getAssetType(arr[2]) };\r\n        }\r\n        return key;\r\n    }\r\n\r\n    url2Path(url: ResURL): string {\r\n        if (typeof url == \"string\") {\r\n            return url;\r\n        }\r\n        if (url.type == Texture2D) {\r\n            return url.url + \"/texture\";\r\n        }\r\n        if (url.type == SpriteFrame) {\r\n            return url.url + \"/spriteFrame\"\r\n        }\r\n        return url.url;\r\n    }\r\n\r\n    urlEqual(a: ResURL | null, b: ResURL | null): boolean {\r\n        if (a == b) return true;\r\n        if (a == null || b == null) return false;\r\n        if (typeof a == \"string\" && typeof b == \"string\") {\r\n            return a == b;\r\n        }\r\n        if (typeof a == \"string\" || typeof b == \"string\") {\r\n            return false;\r\n        }\r\n        if (a.url == b.url && a.type == b.type && a.bundle == b.bundle) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getAssetType(key: string): typeof Asset {\r\n        if (!this.__assetTypes.has(key)) {\r\n            throw new Error(\"\u672A\u627E\u5230\u5BF9\u5E94\u8D44\u6E90\u7C7B\u578B\uFF1A\" + key);\r\n        }\r\n        return this.__assetTypes.get(key)!;\r\n    }\r\n\r\n    private getAndSaveClassName(clazz: any): string {\r\n        let className: string = ClassUtils.getClassName(clazz);\r\n        if (!this.__assetTypes.has(className)) {\r\n            this.__assetTypes.set(className, clazz);\r\n        }\r\n        return className;\r\n    }\r\n\r\n    path2Key(key: string): string {\r\n        let len: number = key.length;\r\n        let end: number = len - 8;\r\n        //texture\r\n        let t = key.substring(end);\r\n        if (t === \"/texture\") {\r\n            return key.substring(0, end);\r\n        }\r\n        //spriteFrame\r\n        end = len - 12;\r\n        t = key.substring(end);\r\n        if (t === \"/spriteFrame\") {\r\n            return key.substring(0, end);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    setLoader(key: any, loader: new () => ILoader): void {\r\n        let className = ClassUtils.getClassName(key);\r\n        this.loaderClass.set(className, loader);\r\n    }\r\n\r\n    getLoader(key: any): new () => ILoader {\r\n        let className = ClassUtils.getClassName(key);\r\n        if (!this.loaderClass.has(className)) {\r\n            return CCLoader;\r\n        }\r\n        return this.loaderClass.get(className)!;\r\n    }\r\n\r\n    create(url: ResURL | Array<ResURL>, refKey: string, progress?: (progress: number) => void, cb?: (err?: Error) => void): ResRequest {\r\n        let reqeust = Pool.acquire(ResRequest);\r\n        reqeust.init(url, refKey, progress, cb);\r\n        return reqeust;\r\n    }\r\n\r\n\r\n    loadAssetBundles(names: string | Array<string>): Promise<void> {\r\n        let list = [];\r\n        if (typeof names == \"string\") {\r\n            list.push(names);\r\n        } else {\r\n            list.push(...names);\r\n        }\r\n        let abs = [];\r\n        for (let index = 0; index < list.length; index++) {\r\n            const bundle_name = list[index];\r\n            let bundle = assetManager.getBundle(bundle_name);\r\n            if (!bundle && abs.indexOf(bundle_name) == -1) {\r\n                abs.push(bundle_name);\r\n            }\r\n        }\r\n        let loaded = 0;\r\n        let total = abs.length;\r\n        let result = new Promise<void>(\r\n            (resolve, reject) => {\r\n                for (let index = 0; index < abs.length; index++) {\r\n                    const bundle_name = abs[index];\r\n                    assetManager.loadBundle(bundle_name, (err: Error | null, bundle: AssetManager.Bundle) => {\r\n                        if (err) {\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                        loaded++;\r\n                        if (loaded == total) {\r\n                            resolve();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        );\r\n        return result;\r\n    }\r\n}", "import { Asset, AssetManager, assetManager } from \"cc\";\r\nimport { ILoader } from \"../loaders/ILoader\";\r\nimport { ResURL } from \"../ResURL\";\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { ResourceManager } from \"../resources/ResourceManager\";\r\nimport { Resource } from \"../resources/Resource\";\r\nimport { Res } from \"../Res\";\r\n\r\n/**\r\n * cocos \u5185\u7F6E\u7C7B\u578B\u8D44\u6E90\u52A0\u8F7D\u5668\r\n */\r\nexport class CCLoader extends EventDispatcher implements ILoader {\r\n\r\n    private __url?: ResURL;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    reset(): void {\r\n        this.__url = undefined;\r\n        //\u65A9\u65AD\u4E00\u5207\u4E8B\u4EF6\u76D1\u542C\r\n        this.offAllEvent();\r\n    }\r\n\r\n    load(url: ResURL): void {\r\n        this.__url = url;\r\n        if (!this.__url) {\r\n            throw new Error(\"url is null\");\r\n        }\r\n        if (typeof this.__url == \"string\") {\r\n            assetManager.loadRemote(\r\n                this.__url,\r\n                (err: Error | null, asset: Asset) => {\r\n                    if (err) {\r\n                        this.emit(Event.ERROR, this.__url, err);\r\n                        return;\r\n                    }\r\n                    const urlKey = Res.url2Key(url);\r\n                    let res: Resource = new Resource();\r\n                    res.key = urlKey;\r\n                    res.content = asset;\r\n                    ResourceManager.addRes(res);\r\n                    this.emit(Event.COMPLETE, url);\r\n                });\r\n        } else {\r\n            let bundle = assetManager.getBundle(this.__url.bundle);\r\n            if (!bundle) {\r\n                assetManager.loadBundle(\r\n                    this.__url.bundle,\r\n                    (err: Error | null, bundle: AssetManager.Bundle) => {\r\n                        if (err) {\r\n                            this.emit(Event.ERROR, this.__url, err);\r\n                            return;\r\n                        }\r\n                        this.__load(this.__url!, bundle);\r\n                    }\r\n                );\r\n            } else {\r\n                this.__load(this.__url, bundle);\r\n            }\r\n        }\r\n    }\r\n\r\n    private __load(url: ResURL, bundle: AssetManager.Bundle): void {\r\n        if (typeof url == \"string\") {\r\n            throw new Error(\"\u672A\u5B9E\u73B0\uFF01\");\r\n        }\r\n        let urlStr = Res.url2Path(url);\r\n        bundle.load(\r\n            urlStr,\r\n            url.type,\r\n            (finished: number, total: number) => {\r\n                const progress = finished / total;\r\n                this.emit(Event.PROGRESS, this.__url, undefined, progress);\r\n            },\r\n            (err: Error | null, asset: Asset) => {\r\n                if (err) {\r\n                    this.emit(Event.ERROR, url, err);\r\n                    return;\r\n                }\r\n                const urlKey = Res.url2Key(url);\r\n                let res: Resource = new Resource();\r\n                res.key = urlKey;\r\n                res.content = asset;\r\n                ResourceManager.addRes(res);\r\n                this.emit(Event.COMPLETE, url);\r\n            }\r\n        );\r\n    }\r\n}", "\r\n\r\n\r\nimport { ITicker } from \"./ITicker\";\r\nimport { ITickerManager } from \"./ITickerManager\";\r\n\r\n\r\nexport class TickerManagerImpl implements ITickerManager {\r\n\r\n    private __tickerList: Array<ITicker> = []\r\n\r\n    private __nextFrameCallBacks: Array<NextFrameHandler> = [];\r\n\r\n    tick(dt: number): void {\r\n        let handler: NextFrameHandler;\r\n        while (this.__nextFrameCallBacks.length) {\r\n            handler = this.__nextFrameCallBacks.shift()!;\r\n            handler.callBack.apply(handler.caller);\r\n        }\r\n        for (let index = 0; index < this.__tickerList.length; index++) {\r\n            const element = this.__tickerList[index];\r\n            element.tick(dt);\r\n        }\r\n    }\r\n\r\n    addTicker(value: ITicker): void {\r\n        let index: number = this.__tickerList.indexOf(value);\r\n        if (index >= 0) {\r\n            throw new Error(\"Ticker \u91CD\u590D\u6DFB\u52A0\uFF01\");\r\n        }\r\n        this.__tickerList.push(value);\r\n    }\r\n\r\n    removeTicker(value: ITicker): void {\r\n        let index: number = this.__tickerList.indexOf(value);\r\n        if (index < 0) {\r\n            throw new Error(\"\u627E\u4E0D\u5230\u8981\u5220\u9664\u7684Tick!\");\r\n        }\r\n        this.__tickerList.splice(index, 1);\r\n    }\r\n\r\n    callNextFrame(value: Function, caller: any): void {\r\n        for (let index = 0; index < this.__nextFrameCallBacks.length; index++) {\r\n            const element = this.__nextFrameCallBacks[index];\r\n            //\u91CD\u590D\r\n            if (element.equal(value, caller)) {\r\n                return;\r\n            }\r\n        }\r\n        this.__nextFrameCallBacks.push(new NextFrameHandler(value, caller));\r\n    }\r\n\r\n    clearNextFrame(value: Function, caller: any): void {\r\n        for (let index = 0; index < this.__nextFrameCallBacks.length; index++) {\r\n            const element = this.__nextFrameCallBacks[index];\r\n            //\u5220\u9664\r\n            if (element.equal(value, caller)) {\r\n                this.__nextFrameCallBacks.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass NextFrameHandler {\r\n    callBack: Function;\r\n    caller: any;\r\n\r\n    constructor(callBack: Function, caller: any) {\r\n        this.callBack = callBack;\r\n        this.caller = caller;\r\n    }\r\n\r\n    equal(callBack: Function, caller: any): boolean {\r\n        if (this.caller !== caller) {\r\n            return false;\r\n        }\r\n        if (this.callBack !== callBack) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}", "import { Injector } from \"../utils/Injector\";\r\nimport { ITicker } from \"./ITicker\";\r\nimport { ITickerManager } from \"./ITickerManager\";\r\nimport { TickerManagerImpl } from \"./TickerManagerImpl\";\r\n\r\n\r\n\r\n/**\r\n * \u5FC3\u8DF3\u9A71\u52A8\u5668\u5B9E\u73B0\r\n */\r\nexport class TickerManager {\r\n\r\n    static KEY: string = \"TickerManager\";\r\n\r\n    /**\r\n     * \u5FC3\u8DF3\u9A71\u52A8\u63A5\u53E3\r\n     * @param dt \r\n     */\r\n    static tick(dt: number): void {\r\n        this.impl.tick(dt);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u4E00\u4E2A\u5FC3\u8DF3\u9A71\u52A8\r\n     * @param value \r\n     */\r\n    static addTicker(value: ITicker): void {\r\n        this.impl.addTicker(value);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u4E00\u4E2A\u5FC3\u8DF3\u9A71\u52A8\r\n     * @param value \r\n     */\r\n    static removeTicker(value: ITicker): void {\r\n        this.impl.removeTicker(value);\r\n    }\r\n\r\n    /**\r\n     * \u4E0B\u4E00\u5E27\u56DE\u8C03\r\n     * @param value \r\n     * @param caller \r\n     */\r\n    static callNextFrame(value: Function, caller: any): void {\r\n        this.impl.callNextFrame(value, caller);\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u7406\u4E0B\u4E00\u5E27\u56DE\u8C03\u8BF7\u6C42(\u5982\u679C\u5B58\u5728\u7684\u8BDD)\r\n     * @param value\r\n     * @param value \r\n     * @param caller \r\n     */\r\n    static clearNextFrame(value: Function, caller: any): void {\r\n        this.impl.clearNextFrame(value, caller);\r\n    }\r\n\r\n    private static __impl: ITickerManager;\r\n    static get impl(): ITickerManager {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new TickerManagerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { IDestroyable } from \"../interfaces/IDestroyable\";\r\nimport { IPoolable } from \"./IPoolable\";\r\n\r\n\r\n/**\r\n * \u5BF9\u8C61\u6C60\u5B9E\u73B0\r\n */\r\nexport class PoolImpl<T extends IPoolable> implements IDestroyable {\r\n\r\n    /**\u5BF9\u8C61\u7C7B\u578B */\r\n    private __class: new () => T;\r\n    /**\u6B63\u5728\u4F7F\u7528\u7684\u5BF9\u8C61\u5217\u8868 */\r\n    private __using: Set<T>;\r\n    /**\u7A7A\u95F2\u5BF9\u8C61\u5217\u8868 */\r\n    private __free: Set<T>;\r\n    /**\u6700\u5927\u5BF9\u8C61\u6570 */\r\n    private __max: number = 0;\r\n\r\n    constructor(classType: new () => T, max: number = 1000, min: number = 0) {\r\n        this.__class = classType;\r\n        this.__max = max;\r\n        this.__using = new Set<T>();\r\n        this.__free = new Set<T>();\r\n        // \u521D\u59CB\u5316\u5BF9\u8C61\u6C60\u5230\u6700\u5C0F\u5BB9\u91CF\r\n        for (let i = 0; i < min; i++) {\r\n            this.__free.add(new this.__class());\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * \u9500\u6BC1\u5BF9\u8C61\u6C60\u4E2D\u7684\u6240\u6709\u5BF9\u8C61\u5E76\u91CA\u653E\u8D44\u6E90\r\n     *\r\n     * @returns \u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u9500\u6BC1\u64CD\u4F5C\u662F\u5426\u6210\u529F\r\n     */\r\n    destroy(): boolean {\r\n        // \u91CA\u653E\u6240\u6709\u5BF9\u8C61\u5230\u5BF9\u8C61\u6C60\u4E2D\r\n        this.releaseAll();\r\n        for (const element of this.__free) {\r\n            element.destroy();\r\n        }\r\n        this.__free.clear();\r\n        this.__using.clear();\r\n        return true;\r\n    }\r\n\r\n    \r\n    /**\r\n     * \u4ECE\u5BF9\u8C61\u6C60\u4E2D\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u3002\r\n     *\r\n     * @returns \u8FD4\u56DE\u83B7\u53D6\u5230\u7684\u5BF9\u8C61\u3002\r\n     * @throws \u5F53\u5BF9\u8C61\u6C60\u5DF2\u6EE1\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF\u3002\r\n     */\r\n    acquire(): T {\r\n        let item: T;\r\n        if (this.__free.size > 0) {\r\n            // \u4ECE __free \u4E2D\u53D6\u51FA\u4E00\u4E2A\u5BF9\u8C61\r\n            const iterator = this.__free.values();\r\n            item = iterator.next().value!;\r\n            this.__free.delete(item);\r\n        } else {\r\n            if (this.size >= this.__max) {\r\n                throw new Error(\"\u5BF9\u8C61\u6C60\u5DF2\u6EE1\");\r\n            }\r\n            item = new this.__class();\r\n        }\r\n        this.__using.add(item);\r\n        return item;\r\n    }\r\n\r\n    \r\n    /**\r\n     * \u91CA\u653E\u5BF9\u8C61\r\n     *\r\n     * @param item \u8981\u91CA\u653E\u7684\u5BF9\u8C61\r\n     */\r\n    release(item: T): void {\r\n        item.reset(); // \u91CD\u7F6E\u5BF9\u8C61\u72B6\u6001\r\n        this.__using.delete(item);\r\n        this.__free.add(item);\r\n    }\r\n\r\n    \r\n    /**\r\n     * \u91CA\u653E\u6240\u6709\u6B63\u5728\u4F7F\u7528\u7684\u8D44\u6E90\r\n     */\r\n    releaseAll(): void {\r\n        if (this.__using.size === 0) {\r\n            return;\r\n        }\r\n        this.__using.forEach(item => {\r\n            this.release(item);\r\n        });\r\n        this.__using.clear();\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5F53\u524D\u6B63\u5728\u4F7F\u7528\u7684\u6570\u91CF\r\n     */\r\n    get usingCount(): number {\r\n        return this.__using.size;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7A7A\u95F2\u8BA1\u6570\u5668\u7684\u503C\r\n     */\r\n    get freeCount(): number {\r\n        return this.__free.size;\r\n    }\r\n\r\n    /**\r\n     * \u5BF9\u8C61\u6C60\u5F53\u524D\u7684\u5927\u5C0F\uFF08\u5DF2\u521B\u5EFA\u5BF9\u8C61\u7684\u6570\u91CF\uFF09\r\n     */\r\n    get size(): number {\r\n        return this.freeCount + this.usingCount;\r\n    }\r\n}", "import { IPoolable } from \"./IPoolable\";\r\nimport { PoolImpl } from \"./PoolImpl\";\r\n\r\n\r\n\r\n\r\n/**\r\n * \u5BF9\u8C61\u6C60\r\n * @example\r\n * //\u4ECE\u5BF9\u8C61\u6C60\u83B7\u53D6\u4E00\u4E2A\u5B9E\u4F8B\r\n * let item=Pool.acquire(MyClass);\r\n * //\u5C06\u5BF9\u8C61\u8FD8\u56DE\u5BF9\u8C61\u6C60\r\n * Pool.release(MyClass,item);\r\n */\r\nexport class Pool {\r\n\r\n    /**\r\n     * \u5BF9\u8C61\u6C60\u7684\u96C6\u5408\r\n     */\r\n    private static pools = new Map<new () => IPoolable, PoolImpl<IPoolable>>()\r\n\r\n    /**\r\n     * \u4ECE\u5BF9\u8C61\u6C60\u4E2D\u83B7\u53D6\u4E00\u4E2A\u5B9E\u4F8B\r\n     *\r\n     * @param clazz \u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u8BE5\u7C7B\u9700\u8981\u5B9E\u73B0 IPoolable \u63A5\u53E3\r\n     * @returns \u8FD4\u56DE\u4ECE\u5BF9\u8C61\u6C60\u4E2D\u83B7\u53D6\u7684\u5B9E\u4F8B\r\n     */\r\n    static acquire<T extends IPoolable>(clazz: new () => T): T {\r\n        let pool = this.pools.get(clazz);\r\n        if (!pool) {\r\n\r\n            this.pools.set(clazz, new PoolImpl(clazz, 1000, 0))\r\n            return this.acquire(clazz);\r\n        }\r\n        return pool.acquire() as T;\r\n    }\r\n\r\n\r\n    /**\r\n     * \u91CA\u653E\u5BF9\u8C61\u5230\u6307\u5B9A\u7C7B\u578B\u7684\u5BF9\u8C61\u6C60\u4E2D\r\n     *\r\n     * @param clazz \u5BF9\u8C61\u7C7B\u578B\uFF0C\u5FC5\u987B\u5B9E\u73B0 IPoolable \u63A5\u53E3\r\n     * @param item \u8981\u91CA\u653E\u7684\u5BF9\u8C61\r\n     * @throws \u5982\u679C\u5BF9\u8C61\u6C60\u4E0D\u5B58\u5728\uFF0C\u5219\u629B\u51FA\u9519\u8BEF\r\n     */\r\n    static release<T extends IPoolable>(clazz: new () => T, item: T): void {\r\n        let pool = this.pools.get(clazz);\r\n        if (pool) {\r\n            pool.release(item);\r\n        } else {\r\n            throw new Error(\"\u5BF9\u8C61\u6C60\u4E0D\u5B58\u5728\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u91CA\u653E\u6307\u5B9A\u7C7B\u7684\u6240\u6709\u5BF9\u8C61\r\n     *\r\n     * @param clazz \u7C7B\u6784\u9020\u51FD\u6570\uFF0C\u9700\u8981\u5B9E\u73B0 IPoolable \u63A5\u53E3\r\n     * @throws Error \u5982\u679C\u5BF9\u8C61\u6C60\u4E0D\u5B58\u5728\uFF0C\u5219\u629B\u51FA\u9519\u8BEF\r\n     */\r\n    static releaseAll<T extends IPoolable>(clazz: new () => T): void {\r\n        let pool = this.pools.get(clazz);\r\n        if (pool) {\r\n            pool.releaseAll();\r\n        } else {\r\n            throw new Error(\"\u5BF9\u8C61\u6C60\u4E0D\u5B58\u5728\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \u9500\u6BC1\u6307\u5B9A\u7C7B\u7684\u5BF9\u8C61\u6C60\r\n     *\r\n     * @param clazz \u9700\u8981\u9500\u6BC1\u5BF9\u8C61\u6C60\u7684\u7C7B\r\n     * @throws Error \u5982\u679C\u5BF9\u8C61\u6C60\u4E0D\u5B58\u5728\uFF0C\u5219\u629B\u51FA\u9519\u8BEF\r\n     */\r\n    static destroy<T extends IPoolable>(clazz: new () => T): void {\r\n        let pool = this.pools.get(clazz);\r\n        if (pool) {\r\n            pool.destroy();\r\n            this.pools.delete(clazz);\r\n        } else {\r\n            throw new Error(\"\u5BF9\u8C61\u6C60\u4E0D\u5B58\u5728\");\r\n        }\r\n    }\r\n\r\n    static logStatus(): void {\r\n        console.log(\"\u5404\u5BF9\u8C61\u6C60\u7684\u72B6\u6001\uFF1A\");\r\n        this.pools.forEach((pool, clazz) => {\r\n            console.log(`\u7C7B\u540D: ${clazz.name}`);\r\n            console.log(`  \u5DF2\u4F7F\u7528\u5BF9\u8C61\u6570\u91CF: ${pool.usingCount}`);\r\n            console.log(`  \u7A7A\u95F2\u5BF9\u8C61\u6570\u91CF: ${pool.freeCount}`);\r\n        });\r\n    }\r\n}", "import { IPoolable } from \"../pools/IPoolable\";\r\nimport { Pool } from \"../pools/Pool\";\r\nimport { EventType } from \"./EventType\";\r\nimport { IEventDispatcher } from \"./IEventDispatcher\";\r\n\r\n\r\n/**\r\n * \u4E8B\u4EF6\u5BF9\u8C61\r\n */\r\nexport class Event implements IPoolable {\r\n\r\n    static readonly START: string = \"START\";\r\n    static readonly PROGRESS: string = \"PROGRESS\";\r\n    static readonly COMPLETE: string = \"COMPLETE\";\r\n    static readonly ERROR: string = \"ERROR\";\r\n\r\n    static readonly SHOW: string = \"SHOW\";\r\n    static readonly HIDE: string = \"HIDE\";\r\n    static readonly ADD: string = \"ADD\";\r\n    static readonly REMOVE: string = \"REMOVE\";\r\n    static readonly UPDATE: string = \"UPDATE\";\r\n    static readonly CLEAR: string = \"CLEAR\";\r\n    static readonly STATE_CHANGED: string = \"STATE_CHANGED\";\r\n    static readonly VALUE_CHANGED: string = \"VALUE_CHANGED\";\r\n    static readonly ADD_CHILD: string = \"ADD_CHILD\";\r\n    static readonly REMOVE_CHILD: string = \"REMOVE_CHILD\";\r\n    static readonly CHILD_VALUE_CHANGED: string = \"CHILD_VALUE_CHANGED\";\r\n\r\n    /**\r\n     * \u4E8B\u4EF6\u7C7B\u578B\r\n     */\r\n    type?: EventType;\r\n    /**\r\n     * \u4E8B\u4EF6\u6D3E\u53D1\u5BF9\u8C61\r\n     */\r\n    target?: IEventDispatcher;\r\n    /**\r\n     * \u4E8B\u4EF6\u6570\u636E\r\n     */\r\n    data?: any;\r\n    /**\r\n     * \u9519\u8BEF\u4FE1\u606F\r\n     */\r\n    error?: Error;\r\n    /**\r\n     * \u8FDB\u5165\u767E\u5206\u6BD4(0-1)\r\n     */\r\n    progress: number = 0;\r\n    /**\r\n     * \u4E8B\u4EF6\u662F\u5426\u505C\u6B62\r\n     */\r\n    propagationStopped: boolean = false;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     * @param type \r\n     * @param taraget\r\n     * @param data \r\n     * @param err \r\n     * @param progress \r\n     */\r\n    init(type: EventType, taraget: IEventDispatcher, data?: any, err?: Error, progress: number = 0): void {\r\n        this.type = type;\r\n        this.target = taraget;\r\n        this.data = data;\r\n        this.error = err;\r\n        this.progress = progress;\r\n    }\r\n\r\n    reset(): void {\r\n        this.type = undefined;\r\n        this.target = undefined;\r\n        this.data = null;\r\n        this.error = undefined;\r\n        this.progress = 0;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.reset();\r\n        return true;\r\n    }\r\n\r\n    release(): void {\r\n        Pool.release(Event, this);\r\n    }\r\n\r\n    /**\r\n     * \u521B\u5EFA\u4E8B\u4EF6\u5BF9\u8C61\r\n     * @param type\r\n     * @param target\r\n     * @param data \r\n     * @param err \r\n     * @param progress \r\n     * @returns \r\n     */\r\n    static create(type: EventType, target: IEventDispatcher, data?: any, err?: Error, progress?: number): Event {\r\n        let result = Pool.acquire(Event);\r\n        result.init(type, target, data, err, progress);\r\n        return result;\r\n    }\r\n}", "import { IPoolable } from \"../pools/IPoolable\";\r\nimport { Event } from \"./Event\";\r\nimport { EventType } from \"./EventType\";\r\n\r\n\r\n\r\n/**\r\n * \u76D1\u542C\u8005\r\n */\r\nexport class EventListener implements IPoolable {\r\n    /**\r\n     * \u4E8B\u4EF6\u7C7B\u578B\r\n     */\r\n    type?: EventType;\r\n    /**\r\n     * \u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570this\u6307\u9488\r\n     */\r\n    caller: any | null;\r\n    /**\r\n     * \u4E8B\u4EF6\u7684\u56DE\u8C03\u51FD\u6570\r\n     */\r\n    handler?: (e: Event) => void;\r\n    /**\r\n     * \u4E8B\u4EF6\u4F18\u5148\u7EA7\uFF0C\u9ED8\u8BA4\u4E3A255\r\n     */\r\n    priority: number = 255;\r\n\r\n    constructor(type: EventType, handler: (e: Event) => void,caller: any, priority: number = 255) {\r\n        this.type = type;\r\n        this.caller = caller;\r\n        this.handler = handler;\r\n        this.priority = priority;\r\n    }\r\n\r\n    reset(): void {\r\n        this.type = undefined;\r\n        this.caller = undefined;\r\n        this.handler = undefined;\r\n        this.priority = 255;\r\n    }\r\n    \r\n    destroy(): boolean {\r\n        this.reset();\r\n        return true;\r\n    }\r\n\r\n    equal(target: EventListener): boolean {\r\n        if (this.type === target.type && this.caller === target.caller && this.handler === target.handler) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    equals(type: EventType, handler: (e: Event) => void, caller: any): boolean {\r\n        if (this.type === type && this.handler === handler && this.caller === caller) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}", "import { TickerManager } from \"../ticker/TickerManager\";\r\nimport { Event } from \"./Event\";\r\nimport { EventListener } from \"./EventListener\";\r\nimport { EventType } from \"./EventType\";\r\nimport { IEventDispatcher } from \"./IEventDispatcher\";\r\n\r\n\r\n\r\n/**\r\n * \u4E8B\u4EF6\u6D3E\u53D1\u5668\r\n */\r\nexport class EventDispatcher implements IEventDispatcher {\r\n\r\n    /**\r\n     * \u5168\u5C40\u4E8B\u4EF6\u6D3E\u53D1\u8D77\r\n     */\r\n    static Main: EventDispatcher = new EventDispatcher();\r\n\r\n    /**\r\n     * \u4E8B\u4EF6\u662F\u5426\u5F02\u6B65\u5904\u7406\r\n     */\r\n    eventAync: boolean = false;\r\n\r\n    /**\r\n     * \u9700\u8981\u6D3E\u53D1\u7684\u4E8B\u4EF6\r\n     */\r\n    private __needEmit: Array<Event> = [];\r\n\r\n    private __listeners: Map<EventType, Array<EventListener>>;\r\n    private __callers: Map<any, Array<EventListener>>;\r\n\r\n    private __target: IEventDispatcher;\r\n\r\n    constructor(target?: IEventDispatcher) {\r\n        this.__target = target ? target : this;\r\n        this.__listeners = new Map<EventType, Array<EventListener>>();\r\n        this.__callers = new Map<any, Array<EventListener>>();\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u4E8B\u4EF6\u76D1\u542C\r\n     * @param type      \u4E8B\u4EF6\u7C7B\u578B\r\n     * @param handler   \u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\r\n     * @param caller    \u56DE\u8C03\u51FD\u6570this\u6307\u9488\r\n     * @param priority  \u4F18\u5148\u7EA7\r\n     */\r\n    on(type: EventType, handler: (e: Event) => void, caller?: any, priority?: number): void {\r\n        let listeners = this.__listeners.get(type);\r\n        if (!listeners) {\r\n            listeners = [];\r\n            this.__listeners.set(type, listeners);\r\n        }\r\n        //\u68C0\u6D4B\u662F\u5426\u91CD\u590D\r\n        for (const element of listeners) {\r\n            if (element.equals(type, handler, caller)) {\r\n                throw new Error(`\u91CD\u590D\u6DFB\u52A0\u4E8B\u4EF6\u76D1\u542C\uFF1A${type} ${handler} ${caller}`);\r\n            }\r\n        }\r\n        //\u6DFB\u52A0\u4E8B\u4EF6\u76D1\u542C\r\n        const listener = new EventListener(type, handler, caller, priority);\r\n        listeners.push(listener);\r\n        listeners.sort((a, b) => a.priority - b.priority);\r\n        //\u6DFB\u52A0\u5230caller\u5206\u7EC4\r\n        let callerListeners = this.__callers.get(caller);\r\n        if (!callerListeners) {\r\n            callerListeners = [];\r\n            this.__callers.set(caller, callerListeners);\r\n        }\r\n        callerListeners.push(listener);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u4E8B\u4EF6\u76D1\u542C\r\n     * @param type      \u4E8B\u4EF6\u7C7B\u578B\r\n     * @param handler   \u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\r\n     * @param caller    \u56DE\u8C03\u51FD\u6570this\u6307\u9488\r\n     * @returns \r\n     */\r\n    off(type: EventType, handler: (e: Event) => void, caller?: any): void {\r\n        let listeners = this.__listeners.get(type);\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        let index = listeners.findIndex((element) => element.equals(type, handler, caller));\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        listeners.splice(index, 1);\r\n        //\u4ECEcaller\u5206\u7EC4\u4E2D\u5220\u9664\r\n        let callerListeners = this.__callers.get(caller);\r\n        if (!callerListeners) {\r\n            return;\r\n        }\r\n        index = callerListeners.findIndex((element) => element.equals(type, handler, caller));\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        callerListeners.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u6307\u5B9A\u5BF9\u8C61\u6240\u6709\u7684\u4E8B\u4EF6\u76D1\u542C\r\n     * @param caller    \r\n     * @returns \r\n     */\r\n    offByCaller(caller: any): void {\r\n        let callerListeners = this.__callers.get(caller);\r\n        if (!callerListeners) {\r\n            return;\r\n        }\r\n        while (callerListeners.length > 0) {\r\n            let listener = callerListeners[0];\r\n            this.off(listener.type!, listener.handler!, listener.caller);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u6240\u6709\u4E8B\u4EF6\u76D1\u542C\r\n     */\r\n    offAllEvent(): void {\r\n        this.__listeners.forEach(list => {\r\n            list.forEach(element => {\r\n                element.destroy();\r\n            });\r\n        });\r\n        this.__listeners.clear();\r\n        this.__callers.clear();\r\n    }\r\n\r\n    /**\r\n     * \u6D3E\u53D1\u4E8B\u4EF6\r\n     * @param type \r\n     * @param data \r\n     * @param err \r\n     * @param progress \r\n     * @param url \r\n     * @returns \r\n     */\r\n    emit(type: EventType, data?: any, err?: Error, progress?: number): void {\r\n        //\u5982\u679C\u6CA1\u4EBA\u5173\u5FC3\u8FD9\u4E2A\u4E8B\u4EF6\r\n        if (!this.__listeners.has(type)) {\r\n            return;\r\n        }\r\n        const event = Event.create(type, this.__target, data, err, progress);\r\n        this.__needEmit.push(event);\r\n        if (this.eventAync) {\r\n            TickerManager.callNextFrame(this.__emit, this);\r\n        } else {\r\n            this.__emit();\r\n        }\r\n    }\r\n\r\n    private __emitHelp: Array<Event> = [];\r\n    private __emit(): void {\r\n        this.__emitHelp.push(...this.__needEmit);\r\n        this.__needEmit.splice(0, this.__needEmit.length);\r\n        for (let index = 0; index < this.__emitHelp.length; index++) {\r\n            const event = this.__emitHelp[index];\r\n            //\u6709\u4EBA\u5173\u5FC3\u4E14\u4E8B\u4EF6\u6CA1\u6709\u88AB\u505C\u6B62\r\n            if (this.hasEvent(event.type!) && event.propagationStopped == false) {\r\n                let list: EventListener[] = this.__listeners.get(event.type!)!;\r\n                let listener: EventListener;\r\n                for (let index = 0; index < list.length; index++) {\r\n                    listener = list[index];\r\n                    //\u4E8B\u4EF6\u662F\u5426\u88AB\u505C\u6B62\r\n                    if (event.propagationStopped) {\r\n                        break;\r\n                    }\r\n                    listener.handler.apply(listener.caller, [event]);\r\n                }\r\n            }\r\n            //\u4E8B\u4EF6\u9000\u8FD8\r\n            event.release();\r\n        }\r\n        this.__emitHelp.splice(0, this.__emitHelp.length);\r\n    }\r\n\r\n    hasEvent(type: EventType): boolean {\r\n        return this.__listeners.has(type);\r\n    }\r\n\r\n    hasEventHandler(type: EventType, handler: (e: Event) => void, caller: any): boolean {\r\n        if (this.__listeners.has(type) == false) {\r\n            return false;\r\n        }\r\n        let infoList: EventListener[] = this.__listeners.get(type)!;\r\n        let info: EventListener;\r\n        for (let index = 0; index < infoList.length; index++) {\r\n            info = infoList[index];\r\n            if (info.equals(type, handler, caller)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        if (this.eventAync) {\r\n            TickerManager.clearNextFrame(this.__emit, this);\r\n        }\r\n        this.__needEmit.splice(0, this.__needEmit.length);\r\n        this.__needEmit = undefined;\r\n        this.__listeners.clear();\r\n        this.__listeners = undefined;\r\n        this.__callers.clear();\r\n        this.__callers = undefined;\r\n        this.__target = undefined;\r\n        return true;\r\n    }\r\n}", "import { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\n\r\n/**\r\n * \u5B57\u5178\r\n */\r\nexport class Dictionary<TKey, TValue> extends EventDispatcher {\r\n\r\n    private __map: Map<TKey, TValue>;\r\n    private __list: Array<TValue>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.__map = new Map<TKey, TValue>();\r\n        this.__list = [];\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\r\n     * @param key \r\n     * @param value \r\n     */\r\n    set(key: TKey, value: TValue): void {\r\n        let old: TValue;\r\n        //\u5220\u9664\u8001\u7684\r\n        if (this.__map.has(key)) {\r\n            old = this.__map.get(key);\r\n            const index: number = this.__list.indexOf(old);\r\n            if (index < 0) {\r\n                throw new Error(\"Dictionary\u5185\u90E8\u903B\u8F91\u9519\u8BEF\uFF01\");\r\n            }\r\n            this.__map.delete(key);\r\n            this.__list.splice(index, 1);\r\n            this.emit(Event.REMOVE, old);\r\n        }\r\n        this.__map.set(key, value);\r\n        this.__list.push(value);\r\n        this.emit(Event.ADD, value);\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u62E5\u6709\u6307\u5B9AKEY\u7684\u5143\u7D20\r\n     * @param key \r\n     * @returns \r\n     */\r\n    has(key: TKey): boolean {\r\n        return this.__map.has(key);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6307\u5B9A\u5143\u7D20\r\n     * @param key \r\n     * @returns \r\n     */\r\n    get(key: TKey): TValue | undefined {\r\n        return this.__map.get(key);\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u7D22\u5F15\u83B7\u53D6\u5143\u7D20\r\n     * @param index \r\n     * @returns \r\n     */\r\n    getValue(index: number): TValue | undefined {\r\n        if (index >= this.__list.length) {\r\n            throw new Error(index + \"\u7D22\u5F15\u8D85\u51FA0-\" + this.__list.length + \"\u8303\u56F4\");\r\n        }\r\n        return this.__list![index];\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u6307\u5B9A\u5143\u7D20\r\n     * @param key \r\n     * @returns \r\n     */\r\n    delete(key: TKey): TValue | undefined {\r\n        if (!this.__map.has(key)) {\r\n            return undefined;\r\n        }\r\n        const result = this.__map.get(key)!;\r\n        const index: number = this.__list.indexOf(result);\r\n        if (index < 0) {\r\n            throw new Error(\"Dictionary\u5185\u90E8\u903B\u8F91\u9519\u8BEF\uFF01\");\r\n        }\r\n        this.__list.splice(index, 1);\r\n        this.__map.delete(key);\r\n        //\u6D3E\u53D1\u5220\u9664\u4E8B\u4EF6\r\n        if (this.hasEvent(Event.REMOVE)) {\r\n            this.emit(Event.REMOVE, result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u9664\u6240\u6709\u5143\u7D20\r\n     */\r\n    clear() {\r\n        this.__map.clear();\r\n        this.__list.length = 0;\r\n    }\r\n\r\n    getKeys(result?: Array<TKey>): Array<TKey> {\r\n        result = result || [];\r\n        for (const iterator of this.__map.keys()) {\r\n            result.push(iterator);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n    * \u5143\u7D20\u5217\u8868\r\n    */\r\n    get elements(): Array<TValue> {\r\n        return this.__list!;\r\n    }\r\n\r\n    public get size(): number {\r\n        return this.__map.size;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        if (super.destroy()) {\r\n            this.__map.clear();\r\n            this.__map = undefined;\r\n            this.__list = undefined;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}", "import { game } from \"cc\";\r\nimport { ITicker } from \"../ticker/ITicker\";\r\nimport { ITimer } from \"./ITimer\";\r\nimport { TickerManager } from \"../ticker/TickerManager\";\r\n\r\n\r\nexport class TimerImpl implements ITimer, ITicker {\r\n\r\n    private __currentTime: number = 0;\r\n    private __deltaTime: number = 0;\r\n    private __startTime: number = 0;\r\n    constructor() {\r\n        this.reset();\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    reset(time?: number): void {\r\n        if (time) {\r\n            this.__currentTime = time;\r\n        } else {\r\n            //\u5F53\u524D\u65F6\u95F4\u8F6C\u79D2\r\n            this.__currentTime = game.totalTime;\r\n        }\r\n        this.__startTime = this.__currentTime;\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        this.__deltaTime = dt;\r\n        this.__currentTime += dt;\r\n    }\r\n\r\n    get currentTime(): number {\r\n        return this.__currentTime;\r\n    }\r\n\r\n    get absTime(): number {\r\n        return this.__startTime + game.totalTime;\r\n    }\r\n    \r\n    get deltaTime(): number {\r\n        return this.__deltaTime;\r\n    }\r\n}", "import { Injector } from \"../utils/Injector\";\r\nimport { ITimer } from \"./ITimer\";\r\nimport { TimerImpl } from \"./TimerImpl\";\r\n\r\n\r\n\r\n\r\nexport class Timer {\r\n\r\n    static KEY = \"Timer\";\r\n\r\n    private static __serverTime: number = 0;\r\n    private static __lastTime: number = 0;\r\n\r\n    /**\r\n     * \u670D\u52A1\u5668\u65F6\u95F4(\u6BEB\u79D2)\r\n     */\r\n    static get serverTime(): number {\r\n        let d = this.currentTime - this.__lastTime;\r\n        if (d) {\r\n            this.__serverTime += d;\r\n        }\r\n        return this.__serverTime;\r\n    }\r\n\r\n    /**\r\n     * \u5F53\u524D\u65F6\u95F4(\u6BEB\u79D2)\r\n     */\r\n    static get currentTime(): number {\r\n        return this.impl.currentTime;\r\n    }\r\n\r\n    /**\r\n     * \u7EDD\u5BF9\u65F6\u95F4(\u6BEB\u79D2),\u6CE8\u610F\u6548\u7387\u8F83\u5DEE\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\uFF01\r\n     */\r\n    static get absTime(): number {\r\n        return this.impl.absTime;\r\n    }\r\n\r\n    /**\r\n     * \u91CD\u65B0\u6821\u51C6\r\n     * @param time  \u65F6\u95F4\u8D77\u70B9\uFF0C\u5982\u679C\u4E0D\u8BBE\u7F6E\u5219\u83B7\u53D6\u7CFB\u7EDF\u5F53\u524D\u65F6\u95F4\u70B9\r\n     */\r\n    static reset(time?: number): void {\r\n        this.impl.reset(time);\r\n    }\r\n\r\n    private static __impl: ITimer;\r\n    private static get impl(): ITimer {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new TimerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { Dictionary } from \"../../datas/Dictionary\";\r\nimport { TickerManager } from \"../../ticker/TickerManager\";\r\nimport { Timer } from \"../../timer/Timer\";\r\nimport { ResRef } from \"../ResRef\";\r\nimport { IResource } from \"./IResource\";\r\nimport { ResourceManager } from \"./ResourceManager\";\r\n\r\n\r\n/**\r\n * \u8D44\u6E90\u7BA1\u7406\u5668\u9ED8\u8BA4\u5B9E\u73B0\r\n */\r\nexport class ResourceManagerImpl {\r\n    /**\r\n     * \u8D44\u6E90\r\n     */\r\n    protected __resDic: Dictionary<string, IResource> = new Dictionary<string, IResource>();\r\n    /**\r\n     * \u7B49\u5F85\u9500\u6BC1\u7684\u8D44\u6E90\r\n     */\r\n    protected _waitDestroy: Array<IResource> = [];\r\n\r\n    private __lastTime: number = 0;\r\n\r\n    constructor() {\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        if (!ResourceManager.AUTO_GC) {\r\n            return;\r\n        }\r\n        let currentTime = Timer.currentTime;\r\n        let d = currentTime - this.__lastTime\r\n        if (d < ResourceManager.GC_CHECK_TIME) {\r\n            return;\r\n        }\r\n        this.__lastTime = currentTime;\r\n        this.gc();\r\n    }\r\n    \r\n    addRes(value: IResource): void {\r\n        if (this.__resDic.has(value.key)) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\u8D44\u6E90\uFF01\");\r\n        }\r\n        this.__resDic.set(value.key, value);\r\n        //\u6807\u8BB0\u4E3A\u5F85\u5220\u9664\r\n        this._waitDestroy.push(value);\r\n        value.lastOpTime = Timer.currentTime;\r\n    }\r\n\r\n    hasRes(key: string): boolean {\r\n        return this.__resDic.has(key);\r\n    }\r\n\r\n    getRes(key: string): IResource | undefined {\r\n        return this.__resDic.get(key);\r\n    }\r\n\r\n    addRef(key: string, refKey?: string): ResRef {\r\n        if (!this.__resDic.has(key)) {\r\n            throw new Error(\"\u672A\u627E\u5230\u8D44\u6E90\uFF1A\" + key);\r\n        }\r\n        let res: IResource = this.__resDic.get(key)!;\r\n        //\u5982\u679C\u5728\u5F85\u5220\u9664\u5217\u8868\u4E2D\r\n        let index: number = this._waitDestroy.indexOf(res);\r\n        if (index >= 0) {\r\n            this._waitDestroy.splice(index, 1);\r\n        }\r\n        //\u66F4\u65B0\u64CD\u4F5C\u65F6\u95F4\r\n        res.lastOpTime = Timer.currentTime;\r\n        return res.addRef(refKey);\r\n    }\r\n\r\n    removeRef(value: ResRef): void {\r\n        if (!this.__resDic.has(value.key)) {\r\n            throw new Error(\"\u672A\u627E\u5230\u8D44\u6E90\uFF1A\" + value.key);\r\n        }\r\n        let res: IResource = this.__resDic.get(value.key)!;\r\n        res.removeRef(value);\r\n        if (res.refLength == 0) {\r\n            //\u653E\u5165\u5F85\u5220\u9664\u5217\u8868\r\n            this._waitDestroy.push(res);\r\n        }\r\n        res.lastOpTime = Timer.currentTime;\r\n    }\r\n\r\n    gc(ignoreTime?: boolean): void {\r\n        let res: IResource;\r\n        let currentTime: number = Timer.currentTime;\r\n        for (let index = 0; index < this._waitDestroy.length; index++) {\r\n            res = this._waitDestroy[index];\r\n            if (res.refCount > 0) {\r\n                continue;\r\n            }\r\n            //\u5982\u679C\u5FFD\u7565\u65F6\u95F4\u673A\u5236\r\n            if (ignoreTime == true) {\r\n                this._waitDestroy.splice(index, 1);\r\n                this.destroyRes(res);\r\n                index--;\r\n            } else if (currentTime - res.lastOpTime > ResourceManager.GC_TIME) {//\u8D85\u8FC7\u5141\u8BB8\u7684\u65F6\u95F4\u5C31\u56DE\u6536\r\n                this._waitDestroy.splice(index, 1);\r\n                this.destroyRes(res);\r\n                index--;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6BC1\r\n     * @param value \r\n     */\r\n    protected destroyRes(value: IResource): void {\r\n        this.__resDic.delete(value.key);\r\n        value.destroy();\r\n    }\r\n\r\n    get resList(): Array<IResource> {\r\n        return this.__resDic.elements;\r\n    }\r\n}", "import { Injector } from \"../../utils/Injector\";\r\nimport { IResourceManager } from \"./IResourceManager\";\r\nimport { ResRef } from \"../ResRef\";\r\nimport { IResource } from \"./IResource\";\r\nimport { ResourceManagerImpl } from \"./ResourceManagerImpl\";\r\n\r\n\r\n\r\nexport class ResourceManager {\r\n\r\n    static KEY = \"ResourceManager\";\r\n\r\n    /**\r\n     * GC\u68C0\u67E5\u65F6\u95F4\u95F4\u9694(\u6BEB\u79D2)\r\n     */\r\n    static GC_CHECK_TIME: number = 5000;\r\n\r\n    /**\r\n     * \u8D44\u6E90\u4FDD\u7559\u957F\u65F6\u95F4(\u6BEB\u79D2)GC\r\n     */\r\n    static GC_TIME: number = 15000;\r\n    \r\n    /**\r\n     * \u81EA\u52A8\u6E05\u7406\r\n     */\r\n    static AUTO_GC: boolean = true;\r\n\r\n    \r\n    /**\r\n     * \u6DFB\u52A0\u4E00\u4E2A\u8D44\u6E90\r\n     * @param value\r\n     */\r\n    static addRes(value: IResource): void {\r\n        this.impl.addRes(value);\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\u8BE5\u8D44\u6E90\r\n     * @param key \r\n     */\r\n    static hasRes(key: string): boolean {\r\n        return this.impl.hasRes(key);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u8D44\u6E90\uFF08\u5185\u90E8\u63A5\u53E3\uFF09\r\n     * @param key \r\n     * @returns \r\n     */\r\n    static getRes(key: string): IResource | undefined {\r\n        return this.impl.getRes(key);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5E76\u8FD4\u56DE\u4E00\u4E2A\u8D44\u6E90\u5F15\u7528\r\n     * @param key \r\n     * @param refKey \r\n     */\r\n    static addRef(key: string, refKey?: string): ResRef {\r\n        return this.impl.addRef(key, refKey);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u4E00\u4E2A\u8D44\u6E90\u5F15\u7528\r\n     * @param value \r\n     */\r\n    static removeRef(value: ResRef): void {\r\n        return this.impl.removeRef(value);\r\n    }\r\n\r\n    /**\r\n     * \u8D44\u6E90\u6E05\u7406\r\n     */\r\n    static gc(ignoreTime?: boolean): void {\r\n        return this.impl.gc(ignoreTime);\r\n    }\r\n\r\n    /**\r\n     * \u8D44\u6E90\u5217\u8868\r\n     * @returns \r\n     */\r\n    static get resList(): Array<IResource> {\r\n        return this.impl.resList;\r\n    }\r\n\r\n    private static __impl: IResourceManager;\r\n    private static get impl(): IResourceManager {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new ResourceManagerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { Asset, assetManager, instantiate, isValid, Node, Prefab } from \"cc\";\r\nimport { Logger } from \"../../loggers/Logger\";\r\nimport { Pool } from \"../../pools/Pool\";\r\nimport { ResRef } from \"../ResRef\";\r\nimport { IResource } from \"./IResource\";\r\n\r\n\r\n\r\n\r\n/**\r\n * \u8D44\u6E90\r\n */\r\nexport class Resource implements IResource {\r\n    /**\r\n     * \u8D44\u6E90\u5168\u5C40\u552F\u4E00KEY\r\n     */\r\n    key: string;\r\n    /**\r\n     * \u6700\u540E\u64CD\u4F5C\u7684\u65F6\u95F4\u7535\r\n     */\r\n    lastOpTime: number = 0;\r\n    /**\r\n     * \u8D44\u6E90\u5185\u5BB9\r\n     */\r\n    content: any;\r\n\r\n    private __refList: Array<ResRef>;\r\n\r\n    constructor() {\r\n        this.__refList = [];\r\n    }\r\n\r\n    addRef(refKey?: string): ResRef {\r\n        let ref = Pool.acquire(ResRef);\r\n        ref.key = this.key;\r\n        ref.refKey = refKey ? refKey : \"\";\r\n        //cocos\u5185\u7F6E\u8D44\u6E90\r\n        if (this.content instanceof Asset) {\r\n            //\u5982\u679C\u662F\u9884\u5236\u4F53\r\n            if (this.content instanceof Prefab) {\r\n                ref.content = instantiate(this.content);\r\n            } else {\r\n                ref.content = this.content;\r\n            }\r\n            this.content.addRef();\r\n        } else {\r\n            ref.content = this.content;\r\n        }\r\n        this.__refList.push(ref);\r\n        return ref;\r\n    }\r\n\r\n    removeRef(value: ResRef): void {\r\n        let index = this.__refList.indexOf(value);\r\n        if (index == -1) {\r\n            throw new Error(\"\u8D44\u6E90\u5F15\u7528\u4E0D\u5B58\u5728\");\r\n        }\r\n        //cocos\u5185\u7F6E\u8D44\u6E90\r\n        if (this.content instanceof Asset) {\r\n            //\u5982\u679C\u662F\u9884\u5236\u4F53\r\n            if (this.content instanceof Prefab) {\r\n                let node: Node = value.content;\r\n                if (isValid(node)) {\r\n                    node.destroy();\r\n                }\r\n            }\r\n            this.content.decRef();\r\n        }\r\n        this.__refList.splice(index, 1);\r\n        Pool.release(ResRef, value);\r\n    }\r\n\r\n    destroy(): boolean {\r\n        if (this.refCount > 0 || this.refLength > 0) {\r\n            throw new Error(\"\u53D1\u73B0\u9500\u6BC1\u8D44\u6E90\u65F6\u5F15\u7528\u6570\u91CF\u4E0D\u4E3A0\");\r\n        }\r\n        //\u81EA\u8EAB\u5F15\u7528\u8BA1\u6570\r\n        if (this.content instanceof Asset) {\r\n            this.content.decRef();\r\n            if (this.content.refCount <= 0) {\r\n                Logger.log(\"ReleaseAsset=>\" + this.key, Logger.TYPE.RES);\r\n                assetManager.releaseAsset(this.content);\r\n            }\r\n        } else {\r\n            Logger.log(\"DestroyAsset=>\" + this.key, Logger.TYPE.RES);\r\n            if (this.content[\"destroy\"]) {\r\n                this.content[\"destroy\"]();\r\n            }\r\n        }\r\n        this.key = undefined;\r\n        this.__refList = undefined;\r\n        this.content = undefined;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u8D44\u6E90\u5F15\u7528\u5217\u8868\r\n     */\r\n    get refList(): ResRef[] {\r\n        return this.__refList;\r\n    }\r\n\r\n    /**\r\n     * \u5F15\u7528\u6570\u91CF\r\n     */\r\n    get refCount(): number {\r\n        if (this.content instanceof Asset) {\r\n            return this.content.refCount - 1;\r\n        }\r\n        return this.__refList.length;\r\n    }\r\n\r\n    /**\r\n     * \u5F15\u7528\u5217\u8868\u957F\u5EA6\r\n     */\r\n    get refLength(): number {\r\n        return this.__refList.length;\r\n    }\r\n}", "import { Dictionary } from \"../datas/Dictionary\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Logger } from \"./Logger\";\r\n\r\n\r\nexport class LoggerImpl implements ILogger {\r\n\r\n    private __logs: Dictionary<string, Array<string>>\r\n    /**\r\n     * \u6807\u8BB0\u662F\u5426\u663E\u793A\u67D0\u7C7B\u578B\u7684\u65E5\u5FD7\uFF0C\u9ED8\u8BA4\u4E3Afalse\u4E0D\u663E\u793A\r\n     */\r\n    private __showed: Map<string, boolean>\r\n    /**\r\n     * \u6807\u8BB0\u662F\u5426\u4FDD\u5B58\u67D0\u7C7B\u578B\u7684\u65E5\u5FD7\uFF0C\u9ED8\u8BA4\u4E3Afalse\u4E0D\u4FDD\u5B58\r\n     */\r\n    private __saves: Map<string, boolean>\r\n\r\n    constructor() {\r\n        this.__logs = new Dictionary<string, Array<string>>();\r\n        this.__showed = new Map<string, boolean>();\r\n        this.__saves = new Map<string, boolean>();\r\n        this.__showed.set(Logger.TYPE.ALL, true);\r\n        this.__saves.set(Logger.TYPE.ALL, false);\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u663E\u793A\u8FC7\u6EE4\r\n     * @param key \r\n     * @param isOpen \r\n     */\r\n    show(key: string, isOpen: boolean) {\r\n        this.__showed.set(key, isOpen);\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u4FDD\u5B58\u8FC7\u6EE4\r\n     * @param key \r\n     * @param isSave \r\n     */\r\n    save(key: string, isSave: boolean) {\r\n        this.__saves.set(key, isSave);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5DF2\u4FDD\u5B58\u7684\u65E5\u5FD7\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getLogs(type?: string): Array<string> | undefined {\r\n        if (type == undefined || type == null) {\r\n            type = Logger.TYPE.ALL;\r\n        }\r\n        if (this.__logs.has(type)) {\r\n            return this.__logs.get(type)!;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private __save(type: string, logType: string, msg: string): string {\r\n        let data: string = \"[\" + type.toUpperCase() + \"]\" + logType + \": \" + msg;\r\n        let list: Array<string>;\r\n        //\u662F\u5426\u9700\u8981\u4FDD\u5B58\u8BE5\u7C7B\u578B\u7684\u65E5\u5FD7\r\n        if (this.__saves.has(type)) {\r\n            if (!this.__logs.has(type)) {\r\n                list = [];\r\n                this.__logs.set(type, list);\r\n            } else {\r\n                list = this.__logs.get(type)!;\r\n            }\r\n            //\u68C0\u6D4B\u662F\u5426\u8D85\u51FA\u6700\u5927\u4FDD\u5B58\u6761\u6570\r\n            if (list.length >= Logger.MaxCount) {\r\n                list.unshift();\r\n            }\r\n            list.push(data);\r\n        }\r\n        //\u4FDD\u5B58\u5230all\r\n        if (!this.__logs.has(Logger.TYPE.ALL)) {\r\n            list = [];\r\n            this.__logs.set(Logger.TYPE.ALL, list);\r\n        } else {\r\n            list = this.__logs.get(Logger.TYPE.ALL)!;\r\n        }\r\n        if (list.length >= Logger.MaxCount) {\r\n            list.unshift();//\u5220\u9664\u6700\u9876\u4E0A\u7684\u90A3\u6761\r\n        }\r\n        list.push(data);\r\n        return data;\r\n    }\r\n\r\n    private isShow(type: string): boolean {\r\n        let isAll = this.__showed.has(Logger.TYPE.ALL) ? this.__showed.get(Logger.TYPE.ALL)! : false;\r\n        let isOpen = this.__showed.has(type) ? this.__showed.get(type)! : false;\r\n        return isAll || isOpen;\r\n    }\r\n\r\n    log(msg: any, type?: string): void {\r\n        type = type || Logger.TYPE.ALL;\r\n        let data = this.__save(type, \"Log\", msg);\r\n        if (this.isShow(type)) {\r\n            console.log(data);\r\n        }\r\n    }\r\n\r\n    error(msg: any, type?: string): void {\r\n        type = type || Logger.TYPE.ALL;\r\n        let data = this.__save(type, \"Error\", msg);\r\n        if (this.isShow(type)) {\r\n            console.error(data);\r\n        }\r\n    }\r\n\r\n    warn(msg: any, type?: string): void {\r\n        type = type || Logger.TYPE.ALL;\r\n        let data = this.__save(type, \"Warn\", msg);\r\n        if (this.isShow(type)) {\r\n            console.warn(data);\r\n        }\r\n    }\r\n\r\n    info(msg: any, type?: string): void {\r\n        type = type || Logger.TYPE.ALL;\r\n        let data = this.__save(type, \"Info\", msg);\r\n        if (this.isShow(type)) {\r\n            console.info(data);\r\n        }\r\n    }\r\n}", "import { Injector } from \"../utils/Injector\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { LoggerImpl } from \"./LoggerImpl\";\r\n\r\n\r\nenum LogType {\r\n    ALL = \"all\",\r\n    NET = \"net\",\r\n    RES = \"res\",\r\n    Module = \"module\",\r\n}\r\n\r\n\r\n/**\r\n * \u65E5\u5FD7\u7CFB\u7EDF\r\n */\r\nexport class Logger {\r\n\r\n    /**\r\n     * \u65E5\u5FD7\u7C7B\u578B\r\n     */\r\n    static TYPE: typeof LogType = LogType;\r\n\r\n    static KEY: string = \"Logger\";\r\n    /**\r\n     * \u6700\u5927\u4FDD\u5B58\u6761\u6570\r\n     */\r\n    static MaxCount: number = 1000;\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u663E\u793A\u8FC7\u6EE4\r\n     * @param key \r\n     * @param isOpen \r\n     */\r\n    static show(type: string, isOpen: boolean) {\r\n        this.impl.show(type, isOpen);\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u4FDD\u5B58\u8FC7\u6EE4\r\n     * @param type \r\n     * @param isSave \r\n     */\r\n    static save(type: string, isSave: boolean): void {\r\n        this.impl.save(type, isSave);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5DF2\u4FDD\u5B58\u7684\u65E5\u5FD7\r\n     * @param type \r\n     * @returns \r\n     */\r\n    static getLogs(type?: string): Array<string> | undefined {\r\n        return this.impl.getLogs(type);\r\n    }\r\n\r\n    static log(msg: any, type?: string): void {\r\n        this.impl.log(msg, type);\r\n    }\r\n\r\n    static error(msg: any, type?: string) {\r\n        this.impl.error(msg, type);\r\n    }\r\n\r\n    static warn(msg: any, type?: string) {\r\n        this.impl.warn(msg, type);\r\n    }\r\n\r\n    static info(msg: any, type?: string) {\r\n        this.impl.info(msg, type);\r\n    }\r\n\r\n    private static __impl: ILogger;\r\n    private static get impl(): ILogger {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new LoggerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { IPoolable } from \"../pools/IPoolable\";\r\n\r\n\r\n\r\n\r\nexport class ResRef implements IPoolable {\r\n\r\n    /**\r\n     * \u8D44\u6E90\u5168\u5C40\u552F\u4E00KEY\r\n     */\r\n    key: string = \"\";\r\n    /**\r\n     * \u8C01\u5F15\u7528\u7684\r\n     */\r\n    refKey: string = \"\";\r\n    /**\r\n     * \u8D44\u6E90\u5185\u5BB9\r\n     */\r\n    content: any;\r\n\r\n    private __isDisposed: boolean = false;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    reset(): void {\r\n        this.key = \"\";\r\n        this.refKey = \"\";\r\n        this.content = null;\r\n        this.__isDisposed = false;\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5DF2\u7ECF\u91CA\u653E\r\n     */\r\n    get isDisposed(): boolean {\r\n        return this.__isDisposed;\r\n    }\r\n\r\n    /**\r\n     * \u91CA\u653E\r\n     */\r\n    dispose(): void {\r\n        if (this.__isDisposed) {\r\n            throw new Error(\"\u91CD\u590D\u91CA\u653E\u8D44\u6E90\u5F15\u7528\");\r\n        }\r\n        this.__isDisposed = true;\r\n        // ResourceManager.removeRef(this);\r\n    }\r\n\r\n    /**\r\n     * \u5F7B\u5E95\u9500\u6BC1(\u5185\u90E8\u63A5\u53E3\uFF0C\u8BF7\u52FF\u8C03\u7528)\r\n     */\r\n    destroy(): boolean {\r\n        this.reset();\r\n        return true;\r\n    }\r\n}", "import { Dictionary } from \"../../datas/Dictionary\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { Logger } from \"../../loggers/Logger\";\r\nimport { Res } from \"../../res/Res\";\r\nimport { ResURL } from \"../../res/ResURL\";\r\nimport { ITicker } from \"../../ticker/ITicker\";\r\nimport { TickerManager } from \"../../ticker/TickerManager\";\r\nimport { ILoader } from \"./ILoader\";\r\nimport { LoaderManager } from \"./LoaderManager\";\r\n\r\n\r\n\r\n/**\r\n * \u52A0\u8F7D\u961F\u5217\r\n */\r\nexport class LoaderQueue implements ITicker {\r\n\r\n    /**\r\n     * \u52A0\u8F7D\u4E2D\r\n     */\r\n    private running: Dictionary<string, ILoader> = new Dictionary<string, ILoader>();\r\n\r\n    /**\r\n     * \u7B49\u5F85\u52A0\u8F7D\r\n     */\r\n    private waiting: Dictionary<string, ResURL> = new Dictionary<string, ResURL>();\r\n\r\n    /**\r\n     * \u5BF9\u8C61\u6C60\r\n     */\r\n    private pool: Map<any, Array<ILoader>> = new Map<any, Array<ILoader>>();\r\n\r\n    constructor() {\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        while (this.running.size < Res.MAX_LOADER_THREAD && this.waiting.size > 0) {\r\n            //\u83B7\u53D6\u9700\u8981\u52A0\u8F7D\u7684\u5185\u5BB9\r\n            const url = this.waiting.elements[0];\r\n            const urlKey = Res.url2Key(url);\r\n            this.waiting.delete(urlKey);\r\n            this.__load(url, urlKey);\r\n        }\r\n    }\r\n\r\n    private __load(url: ResURL, urlKey: string): void {\r\n        let loader: ILoader;\r\n        let loaderClass: new () => ILoader;\r\n        let type: any;\r\n        if (typeof url == \"string\") {\r\n            type = \"string\";\r\n        } else {\r\n            type = url.type;\r\n        }\r\n        let list = this.pool.get(type);\r\n        if (list == null) {\r\n            list = [];\r\n            this.pool.set(type, list);\r\n        }\r\n        if (list.length > 0) {\r\n            loader = list.shift()!;\r\n        } else {\r\n            if (typeof url == \"string\") {\r\n                loaderClass = Res.getLoader(\"string\");\r\n            } else {\r\n                loaderClass = Res.getLoader(url.type);\r\n            }\r\n            loader = new loaderClass();\r\n        }\r\n        if (loader != null) {\r\n            this.running.set(urlKey, loader);\r\n            this.__addEvent(loader);\r\n            Logger.log(\"Start Load:\" + Res.url2Key(url), Logger.TYPE.RES);\r\n            loader.load(url);\r\n        }\r\n    }\r\n\r\n    private __addEvent(target: ILoader): void {\r\n        target.on(Event.COMPLETE, this.__eventHandler, this);\r\n        target.on(Event.ERROR, this.__eventHandler, this);\r\n        target.on(Event.PROGRESS, this.__eventHandler, this);\r\n    }\r\n\r\n    private __eventHandler(evt: Event): void {\r\n        let target: ILoader = evt.target as ILoader;\r\n        if (evt.type == Event.PROGRESS) {\r\n            LoaderManager.childProgress(evt.data, evt.progress);\r\n            return;\r\n        }\r\n        //\u5220\u9664\u6240\u6709\u4E8B\u4EF6\u76D1\u542C\r\n        target.offAllEvent();\r\n        //\u4ECE\u8FD0\u884C\u5217\u8868\u4E2D\u5220\u9664\r\n        this.running.delete(Res.url2Key(evt.data));\r\n        if (evt.type == Event.ERROR) {\r\n            Logger.log(\"Load Error:\" + Res.url2Key(evt.data) + \" e: \" + evt.error.message, Logger.TYPE.RES);\r\n            LoaderManager.childError(evt.data, evt.error!);\r\n            return;\r\n        }\r\n        if (evt.type == Event.COMPLETE) {\r\n            Logger.log(\"Load Complete:\" + Res.url2Key(evt.data), Logger.TYPE.RES);\r\n            LoaderManager.childComplete(evt.data);\r\n            //\u91CD\u7F6E\u5E76\u56DE\u6536\r\n            target.reset();\r\n            let type: any;\r\n            if (typeof evt.data == \"string\") {\r\n                type = \"string\";\r\n            } else {\r\n                type = evt.data.type;\r\n            }\r\n            let list = this.pool.get(type);\r\n            if (list == null) {\r\n                list = [];\r\n                this.pool.set(type, list);\r\n            }\r\n            list.push(target);\r\n        }\r\n    }\r\n\r\n    load(url: ResURL): void {\r\n        const urlKey = Res.url2Key(url);\r\n        if (typeof url != \"string\" && url.isSub) {\r\n            if (this.waiting.has(urlKey)) {\r\n                this.waiting.delete(urlKey);\r\n            }\r\n            if (!this.running.has(urlKey)) {\r\n                this.__load(url, urlKey);\r\n            }\r\n            return;\r\n        }\r\n        //\u5DF2\u7ECF\u5728\u7B49\u5F85\u5217\u8868\u4E2D\r\n        if (this.waiting.has(urlKey)) {\r\n            return;\r\n        }\r\n        //\u52A0\u8F7D\u4E2D\r\n        if (this.running.has(urlKey)) {\r\n            return;\r\n        }\r\n        //\u52A0\u5165\u7B49\u5F85\u5217\u8868\r\n        this.waiting.set(urlKey, url);\r\n    }\r\n\r\n    private static __instance: LoaderQueue;\r\n    static get single(): LoaderQueue {\r\n        if (LoaderQueue.__instance == null) {\r\n            LoaderQueue.__instance = new LoaderQueue();\r\n        }\r\n        return LoaderQueue.__instance;\r\n    }\r\n}", "\r\nimport { Res } from \"../Res\";\r\nimport { ResourceManager } from \"../resources/ResourceManager\";\r\nimport { ResRequest } from \"../ResRequest\";\r\nimport { ResURL } from \"../ResURL\";\r\nimport { ILoaderManager } from \"./ILoaderManager\";\r\nimport { LoaderQueue } from \"./LoaderQueue\";\r\n\r\n\r\nexport class LoaderManagerImpl implements ILoaderManager {\r\n\r\n    private __requests: Map<string, Array<ResRequest>> = new Map<string, Array<ResRequest>>();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u52A0\u8F7D\r\n     * @param url \r\n     * @param refKey \r\n     * @param cb \r\n     * @param progress \r\n     * @returns \r\n     */\r\n    load(request: ResRequest): void {\r\n        if (request.urls.length == 0) {\r\n            console.error(\"urls is empty!\");\r\n            return;\r\n        }\r\n        this.__addReqeuset(request);\r\n        for (let index = 0; index < request.urls.length; index++) {\r\n            const url = request.urls[index];\r\n            const urlKey = Res.url2Key(url);\r\n            //\u5982\u679C\u5DF2\u7ECF\u52A0\u8F7D\u5B8C\u6210\r\n            if (ResourceManager.hasRes(urlKey)) {\r\n                this.childComplete(url);\r\n            } else {\r\n                LoaderQueue.single.load(url);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5378\u8F7D\r\n     * @param request \r\n     */\r\n    unload(request: ResRequest): void {\r\n        this.__deleteReqeuset(request);\r\n    }\r\n\r\n    childComplete(url: ResURL): void {\r\n        const urlKey: string = Res.url2Key(url);\r\n        let list = this.__requests.get(urlKey);\r\n        if (list) {\r\n            for (let index = 0; index < list.length; index++) {\r\n                const request = list[index];\r\n                request.childComplete(url);\r\n            }\r\n            list.splice(0, list.length);\r\n        }\r\n        this.__requests.delete(urlKey);\r\n    }\r\n\r\n    childError(url: ResURL, err: Error): void {\r\n        const urlKey: string = Res.url2Key(url);\r\n        let rlist = this.__requests.get(urlKey);\r\n        if (rlist) {\r\n            //\u590D\u5236\r\n            let list = rlist.concat();\r\n            for (let index = 0; index < list.length; index++) {\r\n                const request = list[index];\r\n                //\u901A\u77E5\u6240\u6709\u76F8\u5173\u8BF7\u6C42\u5931\u8D25\r\n                request.childError(err);\r\n                this.__deleteReqeuset(request);\r\n            }\r\n        }\r\n        this.__requests.delete(urlKey);\r\n    }\r\n\r\n    childProgress(url: ResURL, progress: number): void {\r\n        const urlKey: string = Res.url2Key(url);\r\n        let list = this.__requests.get(urlKey);\r\n        if (list) {\r\n            for (let index = 0; index < list.length; index++) {\r\n                const request = list[index];\r\n                request.childProgress(url, progress);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\r\n     * @param request \r\n     */\r\n    private __addReqeuset(request: ResRequest): void {\r\n        let list: Array<ResRequest>;\r\n        for (let index = 0; index < request.urls.length; index++) {\r\n            const url = request.urls[index];\r\n            const urlKey = Res.url2Key(url);\r\n            if (this.__requests.has(urlKey)) {\r\n                list = this.__requests.get(urlKey)!;\r\n            } else {\r\n                list = [];\r\n                this.__requests.set(urlKey, list);\r\n            }\r\n            list.push(request);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\r\n     * @param request \r\n     */\r\n    private __deleteReqeuset(request: ResRequest): void {\r\n        if (!request.urls || request.urls.length == 0) return;\r\n        let list: Array<ResRequest>;\r\n        let findex: number = 0;\r\n        //\u904D\u5386\u5F53\u524D\u8BF7\u6C42\u7684\u6240\u6709\u8D44\u6E90\r\n        for (let i = 0; i < request.urls.length; i++) {\r\n            const url = request.urls[i];\r\n            const urlKey = Res.url2Key(url);\r\n            //\u4ECE\u5217\u8868\u4E2D\u627E\u51FA\u5E76\u5220\u9664\r\n            if (!this.__requests.has(urlKey)) {\r\n                continue;\r\n            }\r\n            list = this.__requests.get(urlKey)!;\r\n            if (!list || list.length == 0) {\r\n                continue;\r\n            }\r\n            findex = list.indexOf(request);\r\n            if (findex >= 0) {\r\n                list.splice(findex, 1);\r\n            }\r\n        }\r\n    }\r\n}", "import { Injector } from \"../../utils/Injector\";\r\nimport { ResRequest } from \"../ResRequest\";\r\nimport { ResURL } from \"../ResURL\";\r\nimport { ILoaderManager } from \"./ILoaderManager\";\r\nimport { LoaderManagerImpl } from \"./LoaderManagerImpl\";\r\n\r\n\r\n\r\nexport class LoaderManager {\r\n\r\n    static KEY = \"LoaderManager\";\r\n\r\n    /**\r\n     * \u52A0\u8F7D\u8D44\u6E90\r\n     * @param reqeust \r\n     */\r\n    static load(reqeust:ResRequest):void {\r\n        this.impl.load(reqeust);\r\n    }\r\n\r\n    /**\r\n     * \u5378\u8F7D\r\n     * @param request \r\n     */\r\n    static unload(request: ResRequest): void {\r\n        this.impl.unload(request);\r\n    }\r\n\r\n    static childComplete(url: ResURL): void {\r\n        this.impl.childComplete(url);\r\n    }\r\n\r\n    static childError(url: ResURL, err: Error): void {\r\n        this.impl.childError(url, err);\r\n    }\r\n\r\n    static childProgress(url: ResURL, progress: number): void {\r\n        this.impl.childProgress(url, progress);\r\n    }\r\n\r\n    private static __impl: ILoaderManager;\r\n    private static get impl(): ILoaderManager {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new LoaderManagerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { Pool } from \"../pools/Pool\";\r\nimport { LoaderManager } from \"./loaders/LoaderManager\";\r\nimport { Res } from \"./Res\";\r\nimport { ResourceManager } from \"./resources/ResourceManager\";\r\nimport { ResRef } from \"./ResRef\";\r\nimport { ResURL } from \"./ResURL\";\r\n\r\n\r\nexport enum State {\r\n    ERROR,\r\n    SUCCESS,\r\n    LOADING,\r\n    POOL,\r\n}\r\n\r\n\r\n/**\r\n * \u8D44\u6E90\u8BF7\u6C42\r\n * @example\r\n * \r\n * if(this.request){\r\n *     this.request.dispose();\r\n *     this.request = null;\r\n * }\r\n * this.request = Res.create(\r\n *      url, \r\n *      refKey,\r\n *      (progress:number)=>{\r\n *          //\u52A0\u8F7D\u8FDB\u5EA6\r\n *          console.log(progress);\r\n *      }\r\n *      (err)=>{\r\n *          if(err){\r\n *              console.error(err);\r\n *              request.dispose();\r\n *              request=null;\r\n *              return;\r\n *          }\r\n *          //\u52A0\u8F7D\u5B8C\u6210\uFF0C\u83B7\u53D6\u8D44\u6E90\u5F15\u7528\r\n *          let ref=request.getRef();\r\n *      }\r\n * );\r\n * this.request.load();\r\n */\r\nexport class ResRequest {\r\n    /**\r\n     * \u72B6\u6001\r\n     */\r\n    state: State = State.POOL;\r\n    /**\r\n     * \u8D44\u6E90\u5730\u5740\r\n     */\r\n    urls: Array<ResURL>;\r\n    /**\r\n     * \u5F15\u7528KEY\r\n     */\r\n    refKey: string = \"\";\r\n    /**\r\n     * \u5B8C\u6210\u56DE\u8C03\r\n     */\r\n    cb?: (err?: Error) => void;\r\n    /**\r\n     * \u8FDB\u5EA6\u5904\u7406\u5668\r\n     */\r\n    progress?: (progress: number) => void;\r\n\r\n    private __loaded: Map<string, boolean>;\r\n    private __loadProgress: Map<string, number>;\r\n\r\n    private __resRefs: Array<ResRef>;\r\n\r\n    constructor() {\r\n        this.urls = [];\r\n        this.__resRefs = [];\r\n        this.__loaded = new Map<string, boolean>();\r\n        this.__loadProgress = new Map<string, number>();\r\n    }\r\n\r\n    init(url: ResURL | Array<ResURL>, refKey: string, progress?: (progress: number) => void, cb?: (err?: Error) => void): void {\r\n        if (Array.isArray(url)) {\r\n            this.urls = url;\r\n        } else {\r\n            this.urls = [url];\r\n        }\r\n        //\u53BB\u91CD\r\n        this.urls = this.removeDuplicates(this.urls);\r\n        this.cb = cb;\r\n        this.refKey = refKey;\r\n        this.progress = progress;\r\n    }\r\n\r\n    load(): void {\r\n        this.state = State.LOADING;\r\n        LoaderManager.load(this);\r\n    }\r\n\r\n    childComplete(resURL: ResURL): void {\r\n        const urlKey = Res.url2Key(resURL);\r\n        this.__loaded.set(urlKey, true);\r\n        this.checkComplete();\r\n    }\r\n\r\n    childProgress(resURL: ResURL, progress: number): void {\r\n        const urlKey = Res.url2Key(resURL);\r\n        this.__loadProgress.set(urlKey, progress);\r\n        this.updateProgress();\r\n    }\r\n\r\n    childError(err: Error): void {\r\n        this.state = State.ERROR;\r\n        if (this.cb) {\r\n            this.cb(err);\r\n        }\r\n    }\r\n\r\n    updateProgress(): void {\r\n        let loaded: number = this.getLoaded();\r\n        let progress: number = loaded / this.urls.length;\r\n        if (this.progress) {\r\n            this.progress(progress);\r\n        }\r\n    }\r\n\r\n    private checkComplete(): void {\r\n        let loaded: number = this.__loaded.size;\r\n        let progress: number = loaded / this.urls.length;\r\n        //\u5B8C\u6210\r\n        if (progress >= 1 && this.cb != null) {\r\n            this.state = State.SUCCESS;\r\n            for (let index = 0; index < this.urls.length; index++) {\r\n                const url = this.urls[index];\r\n                const urlKey = Res.url2Key(url);\r\n                const ref = ResourceManager.addRef(urlKey, this.refKey);\r\n                this.__resRefs.push(ref);\r\n            }\r\n            this.cb();\r\n        }\r\n    }\r\n\r\n    private getLoaded(): number {\r\n        let loaded: number = 0;\r\n        for (let value of this.__loadProgress.values()) {\r\n            loaded += value;\r\n        }\r\n        return loaded;\r\n    }\r\n\r\n\r\n    reset(): void {\r\n        this.state = State.POOL;\r\n        if (this.__resRefs) {\r\n            for (let index = 0; index < this.__resRefs.length; index++) {\r\n                const ref = this.__resRefs[index];\r\n                ref.dispose();\r\n            }\r\n            this.__resRefs.splice(0, this.__resRefs.length);\r\n        }\r\n        this.__loaded.clear();\r\n        this.__loadProgress.clear();\r\n        this.urls = [];\r\n        this.cb = undefined;\r\n        this.progress = undefined;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.reset();\r\n        this.__resRefs.splice(0, this.__resRefs.length);\r\n        this.__loaded.clear();\r\n        this.__loadProgress.clear();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u91CA\u653E\r\n     */\r\n    dispose(): void {\r\n        if (this.state == State.LOADING) {\r\n            LoaderManager.unload(this);\r\n        }\r\n        Pool.release(ResRequest, this);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u8D44\u6E90\u5F15\u7528\r\n     * @returns \r\n     */\r\n    getRef(): ResRef {\r\n        return this.__resRefs[0];\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u8D44\u6E90\u5F15\u7528\u5217\u8868\r\n     * @returns \r\n     */\r\n    getRefList(): Array<ResRef> {\r\n        return this.__resRefs;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u8D44\u6E90\u5F15\u7528\u6620\u5C04\u8868\r\n     * @param result \r\n     * @returns \r\n     */\r\n    getRefMap(result?: Map<string, ResRef>): Map<string, ResRef> {\r\n        result = result || new Map<string, ResRef>();\r\n        for (let index = 0; index < this.__resRefs.length; index++) {\r\n            const ref = this.__resRefs[index];\r\n            result.set(ref.key, ref);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private helpMap: Map<string, boolean> = new Map<string, boolean>();\r\n    /**\r\n     * \u53BB\u91CD\r\n     * @param urls \r\n     * @returns \r\n     */\r\n    private removeDuplicates(urls: Array<ResURL>): Array<ResURL> {\r\n        this.helpMap.clear();\r\n        let result: Array<ResURL> = [];\r\n        for (let index = 0; index < urls.length; index++) {\r\n            const url = urls[index];\r\n            const urlKey = Res.url2Key(url);\r\n            if (this.helpMap.has(urlKey)) {\r\n                continue;\r\n            } else {\r\n                this.helpMap.set(urlKey, true);\r\n                result.push(url);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}", "\r\n\r\n\r\nexport class ClassUtils {\r\n    \r\n    /**\r\n     * \u83B7\u53D6\u5355\u8BCD\u6307\u5B9A\u4F4D\u7F6E\u5355\u8BCD\r\n     * @param str \r\n     * @param n \r\n     * @returns \r\n     */\r\n    static getWord(str: string, n: number | Array<number>): string | Array<string> {\r\n        if (Array.isArray(n) && n.length > 0) {\r\n            let arr = [];\r\n            for (let i of n) {\r\n                arr.push(this.getWord(str, i).toString());\r\n            }\r\n            return arr;\r\n        } else {\r\n            const m = str.match(new RegExp('^(?:\\\\w+\\\\W+){' + n + '}(\\\\w+)'));\r\n            if (m) {\r\n                return m[1];\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    static getContractName(code: string): string {\r\n        const words = this.getWord(code, [0, 1, 2])\r\n        if (words[0] === 'abstract') {\r\n            return words[2]\r\n        }\r\n        return words[1];\r\n    }\r\n\r\n    static getFunctionName(code: string): string {\r\n        const words = this.getWord(code, [0, 1])\r\n        if (words[0] === 'constructor') {\r\n            return words[0];\r\n        }\r\n        return words[1];\r\n    }\r\n\r\n    static getClassName(value: any): string {\r\n        let className: string;\r\n        if (typeof value != \"string\") {\r\n            className = value.toString();\r\n            if (className.startsWith(\"function\")) {\r\n                return this.getFunctionName(className);\r\n            } else {\r\n                return this.getContractName(className);\r\n            }\r\n        } else {\r\n            className = value;\r\n        }\r\n        return className;\r\n    }\r\n}", "import { Injector } from \"../utils/Injector\";\r\nimport { ILoader } from \"./loaders/ILoader\";\r\nimport { IRes } from \"./resources/IRes\";\r\nimport { ResImpl } from \"./resources/ResImpl\";\r\nimport { ResRequest } from \"./ResRequest\";\r\nimport { ResURL } from \"./ResURL\";\r\n\r\n\r\nenum ResType {\r\n    FGUI = \"fgui\",\r\n    CONFIG = \"config\",\r\n}\r\n\r\n/**\r\n * \u8D44\u6E90\u5165\u53E3\u7C7B\r\n */\r\nexport class Res {\r\n\r\n    static readonly KEY: string = \"Res\"\r\n\r\n    /**\r\n     * \u9ED8\u8BA4\u8D44\u6E90\u7C7B\u578B\r\n     */\r\n    static TYPE: typeof ResType = ResType;\r\n\r\n    /**\r\n     * \u8D44\u6E90\u52A0\u8F7D\u6700\u5927\u7EBF\u7A0B\u6570\r\n     */\r\n    static MAX_LOADER_THREAD: number = 5;\r\n\r\n    /**\r\n     * key\u8F6Curl\r\n     * @param key \r\n     * @returns \r\n     */\r\n    static key2Url(key: string): ResURL {\r\n        return this.impl.key2Url(key);\r\n    }\r\n\r\n    /**\r\n     * url\u8F6Ckey\r\n     * @param url \r\n     * @returns \r\n     */\r\n    static url2Key(url: ResURL): string {\r\n        return this.impl.url2Key(url);\r\n    }\r\n\r\n    /**\r\n    * url\u8F6C\u8D44\u6E90\u8DEF\u5F84\r\n    * @param url\r\n    */\r\n    static url2Path(url: ResURL): string {\r\n        return this.impl.url2Path(url);\r\n    }\r\n\r\n    /**\r\n     * url\u662F\u5426\u76F8\u540C\r\n     * @param a \r\n     * @param b \r\n     */\r\n    static urlEqual(a: ResURL | null, b: ResURL | null): boolean {\r\n        return this.impl.urlEqual(a, b);\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u8D44\u6E90\u52A0\u8F7D\u5668\r\n     * @param key \r\n     * @param loader \r\n     */\r\n    static setLoader(key: any, loader: new () => ILoader): void {\r\n        this.impl.setLoader(key, loader);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u8D44\u6E90\u52A0\u8F7D\u5668\r\n     * @param key \r\n     * @returns \r\n     */\r\n    static getLoader(key: any): new () => ILoader {\r\n        return this.impl.getLoader(key);\r\n    }\r\n\r\n    /**\r\n     * \u521B\u5EFA\u8D44\u6E90\u8BF7\u6C42\r\n     * @param url \r\n     * @param refKey \r\n     * @param progress \r\n     * @param cb \r\n     * @returns \r\n     */\r\n    static create(url: ResURL | Array<ResURL>, refKey: string, progress?: (progress: number) => void, cb?: (err?: Error) => void): ResRequest {\r\n        return this.impl.create(url, refKey, progress, cb);\r\n    }\r\n    \r\n    /**\r\n     * \u52A0\u8F7DAssetBundle\r\n     * @param names \r\n     * @returns \r\n     */\r\n    static loadAssetBundles(names: string | Array<string>): Promise<void> {\r\n        return this.impl.loadAssetBundles(names);\r\n    }\r\n\r\n\r\n    private static __impl: IRes;\r\n    private static get impl(): IRes {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new ResImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n\r\n    /**\r\n     * url\u8F6C\u8868\u540D\r\n     * @param url \r\n     * @returns \r\n     */\r\n    static url2Sheet: (url: ResURL) => string;\r\n    /**\r\n     * \u914D\u7F6E\u8868\u540D\u79F0\u8F6CURL\r\n     * @param sheet \r\n     * @param type \r\n     * @param bundle \r\n     * @returns \r\n     */\r\n    static sheet2URL: ((sheet: string, type?: any, bundle?: string) => ResURL) | undefined;\r\n}", "import { Injector } from \"../utils/Injector\";\r\nimport { ResURL } from \"../res/ResURL\";\r\nimport { IAudioChannel } from \"./IAudioChannel\";\r\nimport { IAudioManager } from \"./IAudioManager\";\r\nimport { AudioManagerImpl } from \"./AudioManagerImpl\";\r\n\r\n\r\n/**\r\n * \u97F3\u9891\u7BA1\u7406\u5668\r\n */\r\nexport class AudioManager {\r\n\r\n    /**\r\n     * \u5168\u5C40\u552F\u4E00\u6CE8\u5165KEY\r\n     */\r\n    static KEY: string = \"AudioManager\";\r\n\r\n    /**\r\n     * \u6700\u5927\u97F3\u9891\u8F68\u9053\u6570\u91CF\r\n     */\r\n    public static MAX_SOUND_CHANNEL_COUNT: number = 30;\r\n\r\n    /**\r\n     * \u603B\u97F3\u91CF\r\n     */\r\n    static get volume(): number {\r\n        return this.impl.volume;\r\n    }\r\n\r\n    static set volume(value: number) {\r\n        this.impl.volume = value;\r\n    }\r\n\r\n    /**\r\n     * \u97F3\u4E50\u97F3\u91CF\r\n     */\r\n    static get musicVolume(): number {\r\n        return this.impl.musicVolume;\r\n    }\r\n\r\n    static set musicVolume(value: number) {\r\n        this.impl.musicVolume = value;\r\n    }\r\n\r\n    /**\r\n     * \u58F0\u97F3\u97F3\u91CF\r\n     */\r\n    static get soundVolume(): number {\r\n        return this.impl.soundVolume;\r\n    }\r\n\r\n    static set soundVolume(value: number) {\r\n        this.impl.soundVolume = value;\r\n    }\r\n\r\n    /**\r\n     * \u9759\u97F3\u603B\u5F00\u5173\r\n     */\r\n    static get mute(): boolean {\r\n        return this.impl.mute;\r\n    }\r\n\r\n    static set mute(value: boolean) {\r\n        this.impl.mute = value;\r\n    }\r\n\r\n    /**\r\n     * \u97F3\u4E50\u9759\u97F3\u5F00\u5173\r\n     */\r\n    static get muteMusic(): boolean {\r\n        return this.impl.muteMusic;\r\n    }\r\n\r\n    static set muteMusic(value: boolean) {\r\n        this.impl.muteMusic = value;\r\n    }\r\n\r\n    /**\r\n     * \u58F0\u97F3\u9759\u97F3\u5F00\u5173\r\n     */\r\n    static get muteSound(): boolean {\r\n        return this.impl.muteSound;\r\n    }\r\n\r\n    static set muteSound(value: boolean) {\r\n        this.impl.muteSound = value;\r\n    }\r\n\r\n    /**\r\n     * \u64AD\u653E\u97F3\u4E50\r\n     * @param value\r\n     */\r\n    static playMusic(url: ResURL, volume: number = 1, speed: number = 1): void {\r\n        this.impl.playMusic(url, volume, speed);\r\n    }\r\n\r\n    /**\r\n     * \u505C\u6B62\u97F3\u4E50\r\n     */\r\n    static stopMusic(): void {\r\n        this.impl.stopMusic();\r\n    }\r\n\r\n    /**\r\n     * \u6682\u505C\r\n     */\r\n    static pauseMusic(): void {\r\n        this.impl.pauseMusic();\r\n    }\r\n\r\n    /**\r\n     * \u7EE7\u7EED\u64AD\u653E\r\n     */\r\n    static resumeMusic(): void {\r\n        this.impl.resumeMusic();\r\n    }\r\n\r\n    /**\r\n     * \u64AD\u653E\u58F0\u97F3\r\n     * @param value\r\n     */\r\n    static playSound(url: ResURL, playedCallBack?: ()=>void, volume: number=1, speed: number=1, loop: boolean=false): void {\r\n        this.impl.playSound(url, playedCallBack, volume, speed, loop);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6B63\u5728\u64AD\u653E\u6307\u5B9A\u97F3\u9891\u7684\u8F68\u9053\r\n     * @param url\r\n     */\r\n    static getPlaying(url: ResURL): IAudioChannel {\r\n        return this.impl.getPlaying(url);\r\n    }\r\n\r\n    private static __impl: IAudioManager;\r\n    private static get impl(): IAudioManager {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl=new AudioManagerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { Handler } from \"../utils/Handler\";\r\n\r\n\r\n/**\r\n * \u51FD\u6570\u94A9\u5B50\u4FE1\u606F\r\n */\r\nclass FunctionHookInfo {\r\n    /**\r\n     * \u65B9\u6CD5\u540D\r\n     */\r\n    functionName: string;\r\n    /**\r\n     * \u524D\u7F6E\u5904\u7406\u5668\r\n     */\r\n    preHandler: Handler;\r\n    /**\r\n     * \u540E\u7F6E\u5904\u7406\u5668\r\n     */\r\n    laterHandler: Handler;\r\n\r\n    equal(functionName: string, preHandler: Handler, laterHandler: Handler): boolean {\r\n        if (this.functionName != functionName) {\r\n            return false;\r\n        }\r\n        if (preHandler && !preHandler.equal(this.preHandler)) {\r\n            return false;\r\n        }\r\n        if (laterHandler && !laterHandler.equal(this.laterHandler)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nexport class FunctionHook {\r\n\r\n    data: any;\r\n\r\n    /**\r\n     * \u5DF2\u6DFB\u52A0\u597D\u94A9\u5B50\u7684\u65B9\u6CD5\r\n     */\r\n    private __functions: Array<string>;\r\n\r\n    private __preHandlerMap: Map<string, Array<Handler>>;\r\n    private __laterHandlerMap: Map<string, Array<Handler>>;\r\n\r\n    private __groupMap: Map<any, Array<FunctionHookInfo>>;\r\n\r\n    constructor(data: any) {\r\n        this.data = data;\r\n        this.__functions = [];\r\n        this.__preHandlerMap = new Map<string, Array<Handler>>();\r\n        this.__laterHandlerMap = new Map<string, Array<Handler>>();\r\n        this.__groupMap = new Map<any, Array<FunctionHookInfo>>();\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u94A9\u5B50\r\n     * @param group\r\n     * @param functionName \r\n     * @param preHandlers \r\n     * @param laterHandlers \r\n     */\r\n    addHook(group: any, functionName: string, preHandler: Handler, laterHandler: Handler): void {\r\n        let groupList: Array<FunctionHookInfo> = this.__groupMap.get(group);\r\n        if (!groupList) {\r\n            groupList = [];\r\n            this.__groupMap.set(group, groupList);\r\n        }\r\n        for (let index = 0; index < groupList.length; index++) {\r\n            const element = groupList[index];\r\n            if (element.equal(functionName, preHandler, laterHandler)) {\r\n                //\u91CD\u590D\u6DFB\u52A0\r\n                return;\r\n            }\r\n        }\r\n        let info: FunctionHookInfo = new FunctionHookInfo();\r\n        info.functionName = functionName;\r\n        info.preHandler = preHandler;\r\n        info.laterHandler = laterHandler;\r\n\r\n        groupList.push(info);\r\n\r\n        let self = this;\r\n        //\u5982\u679C\u6CA1\u6709\u6DFB\u52A0\u597D\u94A9\u5B50\r\n        if (this.__functions.indexOf(functionName) < 0) {\r\n            let oldFun: Function = this.data[functionName];\r\n            if (!oldFun) {\r\n                throw new Error(\"\u65B9\u6CD5\u4E0D\u5B58\u5728\uFF01\");\r\n            }\r\n            let pres: Array<Handler> = this.__preHandlerMap.get(functionName);\r\n            if (!pres) {\r\n                pres = [];\r\n                this.__preHandlerMap.set(functionName, pres);\r\n            }\r\n            let laters: Array<Handler> = this.__laterHandlerMap.get(functionName);\r\n            if (!laters) {\r\n                laters = [];\r\n                this.__laterHandlerMap.set(functionName, laters);\r\n            }\r\n            let newFun: Function = function (...arg: any[]): void {\r\n                //pre\r\n                if (pres && pres.length) {\r\n                    for (let index = 0; index < pres.length; index++) {\r\n                        const element = pres[index];\r\n                        element && element.run(arg);\r\n                    }\r\n                }\r\n                //old\r\n                oldFun.apply(self.data, arg);\r\n                //later\r\n                if (laters && laters.length) {\r\n                    for (let index = 0; index < laters.length; index++) {\r\n                        const element = laters[index];\r\n                        element && element.run(arg);\r\n                    }\r\n                }\r\n            }\r\n            this.data[functionName] = newFun;\r\n            this.data[\"old_\" + functionName] = oldFun;\r\n            this.__functions.push(functionName);\r\n        }\r\n        let pres: Array<Handler> = this.__preHandlerMap.get(functionName);\r\n        if (!pres) {\r\n            pres = [];\r\n            this.__preHandlerMap.set(functionName, pres);\r\n        }\r\n        if (pres.indexOf(preHandler) < 0) {\r\n            pres.push(preHandler);\r\n        }\r\n\r\n        let laters: Array<Handler> = this.__laterHandlerMap.get(functionName);\r\n        if (!laters) {\r\n            laters = [];\r\n            this.__laterHandlerMap.set(functionName, laters);\r\n        }\r\n        if (laters.indexOf(laterHandler) < 0) {\r\n            laters.push(laterHandler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u94A9\u5B50\r\n     * @param group \r\n     * @param functionName\r\n     * @param preHandler \r\n     * @param laterHandler \r\n     * @returns \r\n     */\r\n    removeHook(group: any, functionName?: string, preHandler?: Handler, laterHandler?: Handler): void {\r\n        let groupList: Array<FunctionHookInfo> = this.__groupMap.get(group);\r\n        if (!groupList) {\r\n            return;\r\n        }\r\n        let list: Array<Handler>;\r\n        let fIndex: number;\r\n\r\n        //\u7F16\u7EC4\u5220\u9664\r\n        if (!functionName) {\r\n            for (let index = 0; index < groupList.length; index++) {\r\n                const element = groupList[index];\r\n                //pre\r\n                if (element.preHandler) {\r\n                    list = this.__preHandlerMap.get(element.functionName);\r\n                    fIndex = list.indexOf(element.preHandler);\r\n                    if (fIndex >= 0) {\r\n                        list.splice(fIndex, 1);\r\n                    }\r\n                    if (list.length == 0) {\r\n                        this.__preHandlerMap.delete(element.functionName);\r\n                    }\r\n                }\r\n                //later\r\n                if (element.laterHandler) {\r\n                    list = this.__laterHandlerMap.get(element.functionName);\r\n                    fIndex = list.indexOf(element.laterHandler);\r\n                    if (fIndex >= 0) {\r\n                        list.splice(fIndex, 1);\r\n                    }\r\n                    if (list.length == 0) {\r\n                        this.__laterHandlerMap.delete(element.functionName);\r\n                    }\r\n                }\r\n            }\r\n            groupList.length = 0;\r\n            this.__groupMap.delete(group);\r\n            return;\r\n        }\r\n\r\n        for (let index = 0; index < groupList.length; index++) {\r\n            const element = groupList[index];\r\n            if (element.equal(functionName, preHandler, laterHandler)) {\r\n                //\u5220\u9664\r\n                groupList.splice(index, 1);\r\n                //pre\r\n                if (element.preHandler) {\r\n                    list = this.__preHandlerMap.get(functionName);\r\n                    fIndex = list.indexOf(element.preHandler);\r\n                    if (fIndex >= 0) {\r\n                        list.splice(fIndex, 1);\r\n                    }\r\n                }\r\n                //later\r\n                if (element.laterHandler) {\r\n                    list = this.__laterHandlerMap.get(functionName);\r\n                    fIndex = list.indexOf(element.laterHandler);\r\n                    if (fIndex >= 0) {\r\n                        list.splice(fIndex, 1);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}", "import { TickerManager } from \"../ticker/TickerManager\";\r\n\r\n/**\r\n * \u7ED1\u5B9A\u4FE1\u606F\r\n */\r\nclass BindInfo {\r\n    /**\r\n     * \u5C5E\u6027KEY\r\n     */\r\n    property: string;\r\n    /**\r\n     * \u76EE\u6807\u6216\u56DE\u8C03\u51FD\u6570\r\n     */\r\n    targetOrCallBack: any | Function;\r\n    /**\r\n     * \u76EE\u6807\u5C5E\u6027\u6216\u76EE\u6807this\u5F15\u7528\r\n     */\r\n    tPropertyOrCaller: string | any;\r\n\r\n    constructor(property: string, targetOrCallBack: any | Function, tPropertyOrCaller: string | any) {\r\n        this.property = property;\r\n        this.targetOrCallBack = targetOrCallBack;\r\n        this.tPropertyOrCaller = tPropertyOrCaller;\r\n    }\r\n\r\n    /**\r\n     * \u5224\u65AD\u662F\u5426\u76F8\u7B49\r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyOrCaller \r\n     * @returns \r\n     */\r\n    equal(property: string, targetOrCallBack: any | Function, tPropertyOrCaller: string | any): boolean {\r\n        if (property == this.property && this.targetOrCallBack == targetOrCallBack && this.tPropertyOrCaller == tPropertyOrCaller) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * \u5C5E\u6027\u7ED1\u5B9A\u5668\r\n */\r\nexport class PropertyBinder {\r\n\r\n    data: any;\r\n\r\n    /**\r\n     * \u4EE3\u7406\u8FC7\u7684\u6570\u636E\r\n     */\r\n    private __propertys: Array<string>;\r\n\r\n    /**\r\n     * \u5C5E\u6027\u6539\u53D8\u5217\u8868\r\n     */\r\n    private __changedPropertys: Array<string>;\r\n\r\n    private __bindedMap: Map<string, Array<BindInfo>>;\r\n\r\n    private __bindedGroupMap: Map<string, Array<BindInfo>>;\r\n\r\n    constructor(data: any) {\r\n        this.data = data;\r\n\r\n        this.__propertys = [];\r\n        this.__changedPropertys = [];\r\n\r\n        this.__bindedMap = new Map<string, Array<BindInfo>>();\r\n        this.__bindedGroupMap = new Map<string, Array<BindInfo>>();\r\n    }\r\n\r\n    /**\r\n     * \u7ED1\u5B9A\r\n     * @param group \r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyOrCaller \r\n     * @returns \r\n     */\r\n    bind(group: any, property: string | Array<string>, targetOrCallBack: any | Function, tPropertyOrCaller: string | any): void {\r\n        let info: BindInfo;\r\n        let groupList: Array<BindInfo> = this.__bindedGroupMap.get(group);\r\n        if (!groupList) {\r\n            groupList = [];\r\n            this.__bindedGroupMap.set(group, groupList);\r\n        }\r\n        let exist: boolean = false;\r\n        let bindInfos: Array<BindInfo>;\r\n        if (Array.isArray(property)) {\r\n            for (let pIndex = 0; pIndex < property.length; pIndex++) {\r\n                const propertyKey = property[pIndex];\r\n                this.__checkProperty(propertyKey);\r\n\r\n                for (let index = 0; index < groupList.length; index++) {\r\n                    info = groupList[index];\r\n                    if (info.equal(propertyKey, targetOrCallBack, tPropertyOrCaller)) {\r\n                        exist = true;\r\n                        continue;\r\n                    }\r\n                }\r\n                //\u4E0D\u5B58\u5728\r\n                if (!exist) {\r\n                    info = new BindInfo(propertyKey, targetOrCallBack, tPropertyOrCaller);\r\n                    bindInfos = this.__bindedMap.get(propertyKey);\r\n                    if (!bindInfos) {\r\n                        bindInfos = [];\r\n                        this.__bindedMap.set(propertyKey, bindInfos);\r\n                    }\r\n                    bindInfos.push(info);\r\n                    groupList.push(info);\r\n\r\n                    //\u6807\u8BB0\u6539\u53D8\r\n                    this.__propertyChanged(propertyKey);\r\n                }\r\n            }\r\n        } else {\r\n            this.__checkProperty(property);\r\n\r\n            for (let index = 0; index < groupList.length; index++) {\r\n                info = groupList[index];\r\n                if (info.equal(property, targetOrCallBack, tPropertyOrCaller)) {\r\n                    return;\r\n                }\r\n            }\r\n            info = new BindInfo(property, targetOrCallBack, tPropertyOrCaller);\r\n            bindInfos = this.__bindedMap.get(property);\r\n            if (!bindInfos) {\r\n                bindInfos = [];\r\n                this.__bindedMap.set(property, bindInfos);\r\n            }\r\n            bindInfos.push(info);\r\n            groupList.push(info);\r\n\r\n            //\u6807\u8BB0\u6539\u53D8\r\n            this.__propertyChanged(property);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u7ED1\u5B9A\r\n     * @param group \r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyOrCaller \r\n     * @returns \r\n     */\r\n    unbind(group: any, property?: string | Array<string>, targetOrCallBack?: any | Function, tPropertyOrCaller?: string | any): void {\r\n        let info: BindInfo;\r\n        let groupList: Array<BindInfo> = this.__bindedGroupMap.get(group);\r\n        //\u5982\u679C\u8BB0\u5F55\u4E2D\u6CA1\u6709\r\n        if (!groupList) {\r\n            return;\r\n        }\r\n        let bindInfos: Array<BindInfo>;\r\n        let fIndex: number;\r\n        //\u53D6\u6D88\u6240\u6709\u8BE5\u7EC4\u7684\u7ED1\u5B9A\r\n        if (property == null) {\r\n            for (let index = 0; index < groupList.length; index++) {\r\n                info = groupList[index];\r\n                //\u4ECE\u5DF2\u7ED1\u5B9A\u7684\u5217\u8868\u4E2D\u5220\u9664\r\n                bindInfos = this.__bindedMap.get(info.property);\r\n                if (bindInfos && bindInfos.length > 0) {\r\n                    fIndex = bindInfos.indexOf(info);\r\n                    if (fIndex >= 0) {\r\n                        bindInfos.splice(fIndex, 1);\r\n                    }\r\n                }\r\n                if (bindInfos.length == 0) {\r\n                    this.__bindedMap.delete(info.property);\r\n                }\r\n            }\r\n            groupList.length = 0;\r\n            this.__bindedGroupMap.delete(group);\r\n            return;\r\n        }\r\n        if (Array.isArray(property)) {\r\n            for (let pIndex = 0; pIndex < property.length; pIndex++) {\r\n                const propertyKey = property[pIndex];\r\n                //\u4ECE\u7EC4\u4E2D\u627E\u76F8\u5BF9\u6BD4\u8F83\u5FEB\u4E00\u4E9B\uFF0C\u56E0\u4E3A\u7F16\u7EC4\u5217\u8868\u76F8\u5BF9\u6570\u636E\u7ED1\u5B9A\u5217\u8868\u901A\u5E38\u4F1A\u5C0F\u4E00\u4E9B\r\n                for (let gIndex = 0; gIndex < groupList.length; gIndex++) {\r\n                    info = groupList[gIndex];\r\n                    bindInfos = this.__bindedMap.get(info.property);\r\n                    if (info.equal(propertyKey, targetOrCallBack, tPropertyOrCaller)) {\r\n                        fIndex = bindInfos.indexOf(info);\r\n                        if (fIndex >= 0) {\r\n                            bindInfos.splice(fIndex, 1);\r\n                        }\r\n                        groupList.splice(gIndex, 1);\r\n                        gIndex--;\r\n                    }\r\n                }\r\n            }\r\n            if (groupList.length == 0) {\r\n                this.__bindedGroupMap.delete(group);\r\n            }\r\n        } else {\r\n            //\u4ECE\u7EC4\u4E2D\u627E\u76F8\u5BF9\u6BD4\u8F83\u5FEB\u4E00\u4E9B\uFF0C\u56E0\u4E3A\u7F16\u7EC4\u5217\u8868\u76F8\u5BF9\u6570\u636E\u7ED1\u5B9A\u5217\u8868\u901A\u5E38\u4F1A\u5C0F\u4E00\u4E9B\r\n            for (let gIndex = 0; gIndex < groupList.length; gIndex++) {\r\n                info = groupList[gIndex];\r\n                bindInfos = this.__bindedMap.get(info.property);\r\n                if (info.equal(property, targetOrCallBack, tPropertyOrCaller)) {\r\n                    fIndex = bindInfos.indexOf(info);\r\n                    if (fIndex >= 0) {\r\n                        bindInfos.splice(fIndex, 1);\r\n                    }\r\n                    groupList.splice(gIndex, 1);\r\n                    gIndex--;\r\n                }\r\n            }\r\n            if (groupList.length == 0) {\r\n                this.__bindedGroupMap.delete(group);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //========================================\u5C5E\u6027\u7ED1\u5B9A\u673A\u5236\u5B9E\u73B0======================================//\r\n\r\n    /**\r\n    * \u68C0\u6D4B\u5C5E\u6027\r\n    * @param propertyKey \r\n    */\r\n    private __checkProperty(propertyKey: string): void {\r\n        let index: number = this.__propertys.indexOf(propertyKey);\r\n        //\u5982\u679C\u6CA1\u6709\u7ED1\u5B9A\u8FC7\u8FD9\u4E2A\u6570\u636E\r\n        if (index < 0) {\r\n            //\u6570\u636E\u7ED1\u5B9A\u5B9E\u73B0\r\n            let value: any = this.data[propertyKey];\r\n            this.__defineReactive(this.data, propertyKey, value);\r\n            this.__propertys.push(propertyKey);\r\n        }\r\n    }\r\n\r\n    /**\u5B9A\u4E49 */\r\n    private __defineReactive(data: any, key: string, value: any): void {\r\n        let self = this;\r\n        Object.defineProperty(data, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: function (): any {\r\n                return value;\r\n            },\r\n            set: function (newValue: any) {\r\n                if (value == newValue) {\r\n                    return;\r\n                }\r\n                // Logger.log(\"\u7ED1\u5B9A\u6570\u636E\u6539\u53D8:value+\" + value + \" newValue:\" + newValue, Logger.TYPE.CORE);\r\n                value = newValue;\r\n                self.__propertyChanged(key);\r\n            },\r\n        })\r\n    }\r\n\r\n    private __propertyChanged(pKey: string, isInit: boolean = false): void {\r\n        //\u6807\u8BB0\u6539\u53D8\r\n        if (this.__changedPropertys.indexOf(pKey) < 0) {\r\n            this.__changedPropertys.push(pKey);\r\n            TickerManager.callNextFrame(this.__nextFramePropertyUpdate, this);\r\n        }\r\n    }\r\n\r\n    private __nextFramePropertyUpdate(isInit: boolean = false): void {\r\n        let pKey: string;\r\n        for (let propsIndex = 0; propsIndex < this.__changedPropertys.length; propsIndex++) {\r\n            pKey = this.__changedPropertys[propsIndex];\r\n            this.__updateProperty(pKey);\r\n        }\r\n        this.__changedPropertys.length = 0;\r\n    }\r\n\r\n    /**\r\n     * \u5C5E\u6027\u66F4\u65B0\r\n     * @param pKey \r\n     */\r\n    private __updateProperty(pKey: string): void {\r\n        let bindInfos: Array<BindInfo> = this.__bindedMap.get(pKey);\r\n        let info: BindInfo;\r\n        if (bindInfos && bindInfos.length) {\r\n            for (let index = 0; index < bindInfos.length; index++) {\r\n                info = bindInfos[index];\r\n                //\u5C5E\u6027\u7ED1\u5B9A\r\n                if (typeof info.targetOrCallBack != \"function\") {\r\n                    info.targetOrCallBack[info.tPropertyOrCaller] = this.data[pKey];\r\n                } else {//\u51FD\u6570\u7ED1\u5B9A\r\n                    (<Function>info.targetOrCallBack).apply(info.tPropertyOrCaller, [this.__changedPropertys]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { Handler } from \"../utils/Handler\";\r\nimport { FunctionHook } from \"./FunctionHook\";\r\nimport { PropertyBinder } from \"./PropertyBinder\";\r\n\r\n\r\n/**\r\n * \u7ED1\u5B9A\u5DE5\u5177\u7C7B\r\n */\r\nexport class Binder {\r\n\r\n    /**\u5C5E\u6027\u7ED1\u5B9A\u8BB0\u5F55 */\r\n    private __bindRecords: Array<PropertyBindInfo>;\r\n    /**\u65B9\u6CD5\u7ED1\u5B9A\u8BB0\u5F55 */\r\n    private __hookRecords: Array<FunctionHookInfo>;\r\n    /**\u9700\u8981\u6CE8\u518C\u548C\u5220\u9664\u7684\u4E8B\u4EF6*/\r\n    private __eventRecords: Array<{ target: any, eventType: number | string, handler: Function, caller: any }>;\r\n\r\n    /**\u521D\u59CB\u5316\u6807\u8BB0 */\r\n    inited: boolean;\r\n\r\n    constructor() {\r\n        this.__bindRecords = [];\r\n        this.__hookRecords = [];\r\n        this.__eventRecords = [];\r\n        this.inited = false;\r\n    }\r\n\r\n\r\n    init(): void {\r\n        this.inited = true;\r\n    }\r\n\r\n    /**\r\n     * \u6570\u636E\u7ED1\u5B9A\r\n     * @param source \r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyKeyOrCaller \r\n     */\r\n    private __bind(source: any, property: string | Array<string>, targetOrCallBack: any | Function, tPropertyKeyOrCaller: string | any): void {\r\n        for (let index = 0; index < this.__bindRecords.length; index++) {\r\n            const element = this.__bindRecords[index];\r\n            if (element.source == source &&\r\n                element.property == property &&\r\n                element.targetOrCallback == targetOrCallBack &&\r\n                element.targetPropertyOrCaller == tPropertyKeyOrCaller) {\r\n                //\u91CD\u590D\u7ED1\u5B9A\r\n                throw new Error(\"\u91CD\u590D\u7ED1\u5B9A\uFF1A\" + source + property + targetOrCallBack + tPropertyKeyOrCaller);\r\n            }\r\n        }\r\n        this.__bindRecords.push({\r\n            source: source,\r\n            property: property,\r\n            targetOrCallback: targetOrCallBack,\r\n            targetPropertyOrCaller: tPropertyKeyOrCaller\r\n        });\r\n        BinderUtils.bind(this, source, property, targetOrCallBack, tPropertyKeyOrCaller);\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u7ED1\u5B9A\r\n     * @param source \r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyKeyOrCaller\r\n     */\r\n    private __unbind(source: any, property?: string | Array<string>, targetOrCallBack?: any | Function, tPropertyKeyOrCaller?: string | any): void {\r\n        for (let index = 0; index < this.__bindRecords.length; index++) {\r\n            const element = this.__bindRecords[index];\r\n            if (element.source == source &&\r\n                element.property == property &&\r\n                element.targetOrCallback == targetOrCallBack &&\r\n                element.targetPropertyOrCaller == tPropertyKeyOrCaller) {\r\n                this.__bindRecords.splice(index, 1);\r\n            }\r\n        }\r\n        BinderUtils.unbind(this, source, property, targetOrCallBack, tPropertyKeyOrCaller);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u51FD\u6570\u94A9\u5B50\r\n     * @param source \r\n     * @param functionName \r\n     * @param preHandles \r\n     * @param laterHandlers\r\n     */\r\n    private __addHook(source: any, functionName: string, preHandle: Handler, laterHandler?: Handler): void {\r\n        for (let index = 0; index < this.__hookRecords.length; index++) {\r\n            const element = this.__hookRecords[index];\r\n            if (element.source == source &&\r\n                element.functionName == functionName &&\r\n                preHandle.equal(element.preHandler) &&\r\n                laterHandler.equal(element.laterHandler)) {\r\n                //\u91CD\u590D\u7ED1\u5B9A\r\n                throw new Error(\"\u91CD\u590D\u7ED1\u5B9A\uFF1A\" + source + \" \" + functionName);\r\n            }\r\n        }\r\n        //\u8BB0\u5F55\r\n        this.__hookRecords.push({ source: source, functionName: functionName, preHandler: preHandle, laterHandler: laterHandler });\r\n        BinderUtils.addHook(this, source, functionName, preHandle, laterHandler);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u51FD\u6570\u94A9\u5B50\r\n     * @param source\r\n     * @param functionName\r\n     * @param preHandle\r\n     * @param laterHandler\r\n     */\r\n    private __removeHook(source: any, functionName?: string, preHandle?: Handler, laterHandler?: Handler): void {\r\n        for (let index = 0; index < this.__hookRecords.length; index++) {\r\n            const element = this.__hookRecords[index];\r\n            if (element.source == source &&\r\n                element.functionName == functionName &&\r\n                preHandle.equal(element.preHandler) &&\r\n                laterHandler.equal(element.laterHandler)) {\r\n                this.__hookRecords.splice(index, 1);\r\n            }\r\n        }\r\n        BinderUtils.removeHook(this, source, functionName, preHandle, laterHandler);\r\n    }\r\n\r\n    /**\r\n     * \u5C5E\u6027\u548C\u5C5E\u6027\u7684\u7ED1\u5B9A\r\n     * @param source            \u6570\u636E\u6E90\r\n     * @param property          \u6570\u636E\u6E90\u5C5E\u6027\u540D\r\n     * @param target            \u76EE\u6807\u5BF9\u8C61\r\n     * @param targetProperty    \u76EE\u6807\u5BF9\u8C61\u5C5E\u6027\u540D\r\n     */\r\n    bindAA(source: any, property: string, target: any, targetProperty: string): void {\r\n        this.__bind(source, property, target, targetProperty);\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u5C5E\u6027\u548C\u5C5E\u6027\u7684\u7ED1\u5B9A\r\n     * @param source \r\n     * @param property \r\n     * @param target \r\n     * @param targetProperty \r\n     */\r\n    unbindAA(source: any, property: string, target: any, targetProperty: string): void {\r\n        this.__unbind(source, property, target, targetProperty);\r\n    }\r\n\r\n    /**\r\n     * \u5C5E\u6027\u548C\u51FD\u6570\u7684\u7ED1\u5B9A\r\n     * @param source \r\n     * @param property \r\n     * @param callBack \r\n     * @param caller \r\n     */\r\n    bindAM(source: any, property: string | Array<string>, callBack: (prepertys: Array<string>) => void, caller: any): void {\r\n        this.__bind(source, property, callBack, caller);\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u5C5E\u6027\u548C\u51FD\u6570\u7684\u7ED1\u5B9A\r\n     * @param source \r\n     * @param propertys \r\n     * @param callBack \r\n     * @param caller \r\n     */\r\n    unbidAM(source: any, propertys: string | Array<string>, callBack: (prepertys: Array<string>) => void, caller: any): void {\r\n        this.__unbind(source, propertys, callBack, caller);\r\n    }\r\n\r\n\r\n    /**\r\n     * \u51FD\u6570\u548C\u51FD\u6570\u7684\u7ED1\u5B9A\r\n     * @param source        \r\n     * @param functionName  \u76EE\u6807\u51FD\u6570\r\n     * @param preHandle     \u8BE5\u51FD\u6570\u5C06\u5728\u76EE\u6807\u51FD\u6570\u8C03\u7528\u524D\u8C03\u7528\r\n     * @param laterHandler  \u8BE5\u51FD\u6570\u5C06\u5728\u76EE\u6807\u51FD\u6570\u8C03\u7528\u540E\u8C03\u7528\r\n     */\r\n    bindMM(source: any, functionName: string, preHandle: Handler, laterHandler?: Handler): void {\r\n        this.__addHook(source, functionName, preHandle, laterHandler);\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u65B9\u6CD5\u548C\u65B9\u6CD5\u7684\u7ED1\u5B9A\u5173\u7CFB\r\n     * @param source \r\n     * @param functionName \r\n     * @param preHandle \r\n     * @param laterHandler \r\n     */\r\n    unbindMM(source: any, functionName: string, preHandle: Handler, laterHandler: Handler): void {\r\n        this.__removeHook(source, functionName, preHandle, laterHandler);\r\n    }\r\n\r\n    /**\r\n     * \u7ED1\u5B9A\u4E8B\u4EF6\r\n     * @param target \r\n     * @param type \r\n     * @param handler \r\n     * @param caller \r\n     */\r\n    bindEvent(target: any, type: number | string, handler: Function, caller: any): void {\r\n        for (let index = 0; index < this.__eventRecords.length; index++) {\r\n            const element = this.__eventRecords[index];\r\n            if (element.target == target && element.eventType == type && element.handler == handler && element.caller == caller) {\r\n                throw new Error(\"\u91CD\u590D\u7ED1\u5B9AUI\u4E8B\u4EF6\uFF1A\" + target + type + handler + caller);\r\n            }\r\n        }\r\n        if (this.inited) {\r\n            let on = target[\"on\"];\r\n            if (on && typeof on == \"function\") {\r\n                target.on(type, handler, caller);\r\n            }\r\n            this.__eventRecords.push({ target: target, eventType: type, handler: handler, caller: caller });\r\n        } else {\r\n            this.__eventRecords.push({ target: target, eventType: type, handler: handler, caller: caller });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u4E8B\u4EF6\u7ED1\u5B9A\r\n     * @param target \r\n     * @param type \r\n     * @param handler \r\n     * @param caller \r\n     */\r\n    unbindEvent(target: any, type: number | string, handler: Function, caller: any): void {\r\n        let off = target[\"off\"];\r\n        if (off && typeof off == \"function\") {\r\n            target.off(type, handler, caller);\r\n        }\r\n        for (let index = 0; index < this.__eventRecords.length; index++) {\r\n            const element = this.__eventRecords[index];\r\n            if (element.target == target && element.eventType == type && element.handler == handler && element.caller == caller) {\r\n                this.__eventRecords.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    //\u6839\u636E\u8BB0\u5F55\u6DFB\u52A0\u7ED1\u5B9A\r\n    bindByRecords(): void {\r\n        //bind\r\n        for (let index = 0; index < this.__bindRecords.length; index++) {\r\n            const element = this.__bindRecords[index];\r\n            BinderUtils.bind(this, element.source, element.property, element.targetOrCallback, element.targetPropertyOrCaller);\r\n        }\r\n        //addHook\r\n        for (let index = 0; index < this.__hookRecords.length; index++) {\r\n            const element = this.__hookRecords[index];\r\n            BinderUtils.addHook(this, element.source, element.functionName, element.preHandler, element.laterHandler);\r\n        }\r\n        //events\r\n        for (let index = 0; index < this.__eventRecords.length; index++) {\r\n            const eventInfo = this.__eventRecords[index];\r\n            let hasEventHandler = eventInfo.target[\"hasEventHandler\"];\r\n            if (hasEventHandler && typeof hasEventHandler == \"function\") {\r\n                //\u5982\u679C\u5DF2\u7ECF\u6DFB\u52A0\r\n                if (eventInfo.target.hasEventHandler(eventInfo.eventType, eventInfo.handler, eventInfo.caller)) {\r\n                    continue;\r\n                }\r\n            }\r\n            let on = eventInfo.target[\"on\"];\r\n            if (on && typeof on == \"function\") {\r\n                eventInfo.target.on(eventInfo.eventType, eventInfo.handler, eventInfo.caller);\r\n            }\r\n        }\r\n    }\r\n\r\n    //\u6839\u636E\u8BB0\u5F55\u5220\u9664\u7ED1\u5B9A\r\n    unbindByRecords(): void {\r\n        //unbind\r\n        for (let index = 0; index < this.__bindRecords.length; index++) {\r\n            const element = this.__bindRecords[index];\r\n            BinderUtils.unbind(this, element.source, element.property, element.targetOrCallback, element.targetPropertyOrCaller);\r\n        }\r\n        //removeHook\r\n        for (let index = 0; index < this.__hookRecords.length; index++) {\r\n            const element = this.__hookRecords[index];\r\n            BinderUtils.removeHook(this, element.source, element.functionName, element.preHandler, element.laterHandler);\r\n        }\r\n        //events\r\n        for (let index = 0; index < this.__eventRecords.length; index++) {\r\n            const eventInfo = this.__eventRecords[index];\r\n            eventInfo.target.off(eventInfo.eventType, eventInfo.handler, eventInfo.caller);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6BC1\r\n     */\r\n    destroy(): void {\r\n        this.unbindByRecords();\r\n        this.__bindRecords = null;\r\n        this.__hookRecords = null;\r\n        this.__eventRecords = null;\r\n    }\r\n}\r\n\r\n/**\r\n * \u5C5E\u6027\u4E0E\u5C5E\u6027\u6570\u636E\r\n */\r\ninterface PropertyBindInfo {\r\n    /**\r\n     * \u6570\u636E\u6E90\u5BF9\u8C61\r\n     */\r\n    source: any;\r\n    /**\r\n     * \u6570\u636E\u6E90\u5C5E\u6027\u540D\r\n     */\r\n    property: string | Array<string>;\r\n    /**\r\n     * \u76EE\u6807\u5BF9\u8C61\r\n     */\r\n    targetOrCallback: any | Function;\r\n    /**\r\n     * \u76EE\u6807\u5C5E\u6027\u540D\r\n     */\r\n    targetPropertyOrCaller: string | any;\r\n}\r\n\r\n/**\r\n * \u65B9\u6CD5\u4E0E\u65B9\u6CD5\u7ED1\u5B9A\u4FE1\u606F\r\n */\r\ninterface FunctionHookInfo {\r\n    source: any;\r\n    functionName: string;\r\n    preHandler: Handler;\r\n    laterHandler: Handler;\r\n}\r\n\r\n/**\r\n * \u7ED1\u5B9A\u5668\u5DE5\u5177\u7C7B\r\n */\r\nclass BinderUtils {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u7ED1\u5B9A\r\n     * @param group \r\n     * @param source \r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyOrCaller \r\n     */\r\n    static bind(group: any, source: any, property: string | Array<string>, targetOrCallBack: any | Function, tPropertyOrCaller: string | any): void {\r\n        let binder: PropertyBinder = source[\"$PropertyBinder\"];\r\n        if (!binder) {\r\n            binder = new PropertyBinder(source);\r\n            source[\"$PropertyBinder\"] = binder;\r\n        }\r\n        binder.bind(group, property, targetOrCallBack, tPropertyOrCaller);\r\n    }\r\n\r\n    /**\r\n     * \u53D6\u6D88\u7ED1\u5B9A\r\n     * @param group \r\n     * @param source \r\n     * @param property \r\n     * @param targetOrCallBack \r\n     * @param tPropertyOrCaller \r\n     * @returns \r\n     */\r\n    static unbind(group: any, source: any, property?: string | Array<string>, targetOrCallBack?: any | Function, tPropertyOrCaller?: string | any): void {\r\n        let binder: PropertyBinder = source[\"$PropertyBinder\"];\r\n        if (!binder) {\r\n            return;\r\n        }\r\n        binder.unbind(group, property, targetOrCallBack, tPropertyOrCaller);\r\n    }\r\n\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u51FD\u6570\u94A9\u5B50\r\n     * @param group \r\n     * @param source \r\n     * @param functionName \r\n     * @param preHandler \r\n     * @param laterHandler \r\n     */\r\n    static addHook(group: any, source: any, functionName: string, preHandler: Handler, laterHandler: Handler): void {\r\n        let hook: FunctionHook = source[\"$FunctionHook\"];\r\n        if (!hook) {\r\n            hook = new FunctionHook(source);\r\n            source[\"$FunctionHook\"] = hook;\r\n        }\r\n        hook.addHook(group, functionName, preHandler, laterHandler);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u51FD\u6570\u94A9\u5B50\r\n     * @param group \r\n     * @param source \r\n     * @param functionName \r\n     * @param preHandler \r\n     * @param laterHandler \r\n     * @returns \r\n     */\r\n    static removeHook(group: any, source: any, functionName?: string, preHandler?: Handler, laterHandler?: Handler): void {\r\n        let hook: FunctionHook = source[\"$FunctionHook\"];\r\n        if (!hook) {\r\n            return;\r\n        }\r\n        hook.removeHook(group, functionName, preHandler, laterHandler);\r\n    }\r\n}", "\r\n\r\n/**\r\n * \u914D\u7F6E\u5B58\u50A8\u5668\r\n */\r\nexport class ConfigStorage {\r\n\r\n    key: string;\r\n    keys: Array<string>;\r\n    map: Map<string, any>;\r\n\r\n    constructor(keys: Array<string>) {\r\n        this.key = keys.join(\"_\");\r\n        this.keys = keys;\r\n        this.map = new Map<string, any>();\r\n    }\r\n\r\n    save(value: any, sheet: string): void {\r\n        if (this.keys.length == 1) {\r\n            let key = this.keys[0];\r\n            let saveKey = value[key];\r\n            if (this.map.has(saveKey)) {\r\n                throw new Error(`\u914D\u7F6E\u8868${sheet}\u552F\u4E00Key\u5B58\u5728\u91CD\u590D\u5185\u5BB9:${saveKey}`);\r\n            }\r\n            this.map.set(saveKey, value);\r\n        } else {\r\n            let values: Array<any> = [];\r\n            for (let index = 0; index < this.keys.length; index++) {\r\n                const key = this.keys[index];\r\n                values.push(value[key]);\r\n            }\r\n            const saveKey = values.join(\"_\");\r\n            if (!saveKey || saveKey.length == 0) {\r\n                return;\r\n            }\r\n            if (this.map.has(saveKey)) {\r\n                throw new Error(`\u914D\u7F6E\u8868${sheet}\u552F\u4E00Key\u5B58\u5728\u91CD\u590D\u5185\u5BB9:${saveKey}`);\r\n            }\r\n            this.map.set(saveKey, value);\r\n        }\r\n    }\r\n\r\n    get<T>(key: string): T | undefined {\r\n        if (this.map.has(key)) {\r\n            return this.map.get(key);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.key = undefined;\r\n        this.keys = null;\r\n        this.map.clear();\r\n        this.map = null;\r\n    }\r\n}", "import { IConfigAccessor } from \"../IConfigAccessor\";\r\nimport { ConfigStorage } from \"./ConfigStorage\";\r\n\r\n/**\r\n * \u914D\u7F6E\u5B58\u53D6\u5668\u57FA\u7C7B\r\n */\r\nexport class BaseConfigAccessor implements IConfigAccessor {\r\n    /**\r\n     * \u8868\u540D\r\n     */\r\n    sheetName: string;\r\n\r\n    protected $configs: Array<any> = [];\r\n    protected $storages: Map<string, ConfigStorage>;\r\n\r\n    constructor() {\r\n        this.$storages = new Map<string, ConfigStorage>();\r\n    }\r\n\r\n    /**\r\n    * \u5B50\u7C7B\u6784\u9020\u51FD\u6570\u4E2D\u8C03\u7528\uFF0C\u589E\u52A0\u5B58\u50A8\u65B9\u5F0F\r\n    * @param keys \r\n    */\r\n    protected addStorage(keys: Array<string>): void {\r\n        const key = keys.join(\"_\");\r\n        if (this.$storages.has(key)) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\u914D\u7F6E\u8868\u5B58\u50A8\u65B9\u5F0F\uFF1A\" + key);\r\n        }\r\n        this.$storages.set(key, new ConfigStorage(keys));\r\n    }\r\n\r\n    save(value: any): boolean {\r\n        const index = this.$configs.indexOf(value);\r\n        if (index >= 0) {\r\n            return false;\r\n        }\r\n        this.$configs.push(value);\r\n        for (let i of this.$storages.values()) {\r\n            i.save(value, this.sheetName);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u5355key\u5355\u503C\u83B7\u53D6\u9879\u5185\u5BB9\r\n     * @param key \r\n     * @param value \r\n     * @returns \r\n     */\r\n    getOne<T>(key: string, value: any): T {\r\n        return this.get<T>([key], [value]);\r\n    }\r\n\r\n    /**\r\n      * \u83B7\u53D6\r\n      * @param keys \r\n      * @param values \r\n      * @returns \r\n      */\r\n    get<T>(keys?: Array<string>, values?: Array<any>): T | undefined {\r\n        if (!keys || !values || keys.length == 0 || values.length == 0) {\r\n            return undefined;\r\n        }\r\n        if (keys.length != values.length) {\r\n            throw new Error(\"\u53C2\u6570\u957F\u5EA6\u4E0D\u4E00\u81F4!\");\r\n        }\r\n        if (keys.length == 1) {\r\n            let key = keys[0];\r\n            let value = values[0];\r\n            if (this.$storages.has(key)) {\r\n                const storage = this.$storages.get(key)!;\r\n                return storage.get<T>(value);\r\n            }\r\n        } else {\r\n            let sKey: string = keys.join(\"_\");\r\n            if (this.$storages.has(sKey)) {\r\n                const s = this.$storages.get(sKey)!;\r\n                const vKey = values.join(\"_\");\r\n                return s.get<T>(vKey);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5B58\u50A8\u5668\r\n     * @param keys \r\n     * @returns \r\n     */\r\n    getStorage(keys: Array<string>): ConfigStorage | undefined {\r\n        return this.$storages.get(keys.join(\"_\"));\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\r\n     * @param key\r\n     * @param value\r\n     * @returns \r\n     */\r\n    getElements<T>(): Array<T> {\r\n        return this.$configs;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.$configs = null;\r\n        for (let i of this.$storages.values()) {\r\n            i.destroy();\r\n        }\r\n        this.$storages.clear();\r\n        this.$storages = null;\r\n    }\r\n}", "import { BaseConfigAccessor } from \"./BaseConfigAccessor\";\r\n\r\n\r\n\r\n/**\r\n * \u4EE5id\u4E3Akey\u7684\u914D\u7F6E\u5B58\u50A8\u5668\r\n */\r\nexport class IDConfigAccessor extends BaseConfigAccessor {\r\n\r\n    constructor() {\r\n        super();\r\n        this.addStorage([\"id\"]);\r\n    }\r\n    \r\n    /**\r\n     * \u901A\u8FC7ID\u83B7\u53D6\u914D\u7F6E\u9879\u5185\u5BB9\r\n     * @param id \r\n     * @returns \r\n     */\r\n    getByID<T>(id: number): T {\r\n        return this.getOne<T>(\"id\", id);\r\n    }\r\n}", "import { AssetManager, assetManager, JsonAsset } from \"cc\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\";\r\nimport { ILoader } from \"../../res/loaders/ILoader\";\r\nimport { Res } from \"../../res/Res\";\r\nimport { Resource } from \"../../res/resources/Resource\";\r\nimport { ResourceManager } from \"../../res/resources/ResourceManager\";\r\nimport { ResURL } from \"../../res/ResURL\";\r\nimport { ConfigManager } from \"../ConfigManager\";\r\nimport { IConfigAccessor } from \"../IConfigAccessor\";\r\n\r\n\r\nexport class LocalConfigLoader extends EventDispatcher implements ILoader {\r\n\r\n    private __url: ResURL;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n    \r\n    load(url: ResURL): void {\r\n        this.__url = url;\r\n        if (typeof this.__url == \"string\") {\r\n            throw new Error(\"\u672A\u5B9E\u73B0\uFF01\");\r\n        }\r\n        let self = this;\r\n        let bundle = assetManager.getBundle(this.__url.bundle);\r\n        if (!bundle) {\r\n            assetManager.loadBundle(\r\n                this.__url.bundle,\r\n                (err: Error | null, bundle: AssetManager.Bundle) => {\r\n                    if (err) {\r\n                        this.emit(Event.ERROR, this.__url, err);\r\n                        return;\r\n                    }\r\n                    this.__load(this.__url!, bundle);\r\n                }\r\n            );\r\n        } else {\r\n            this.__load(this.__url, bundle);\r\n        }\r\n    }\r\n\r\n    private __load(url: ResURL, bundle: AssetManager.Bundle): void {\r\n        if (typeof url == \"string\") {\r\n            throw new Error(\"\u672A\u5B9E\u73B0\uFF01\");\r\n        }\r\n        let urlStr = Res.url2Path(url);\r\n        bundle.load(\r\n            urlStr,\r\n            JsonAsset,\r\n            (finished: number, total: number) => {\r\n                const progress = finished / total;\r\n                this.emit(Event.PROGRESS, this.__url, undefined, progress);\r\n            },\r\n            (err: Error | null, asset: JsonAsset) => {\r\n                if (err) {\r\n                    this.emit(Event.ERROR, url, err);\r\n                    return;\r\n                }\r\n                const urlKey = Res.url2Key(url);\r\n                let res: Resource = new Resource();\r\n                res.key = urlKey;\r\n                res.content = asset;\r\n                let accessor = this.__parseConfig(url, asset);\r\n                res.content = accessor;\r\n                ResourceManager.addRes(res);\r\n                this.emit(Event.COMPLETE, url);\r\n            }\r\n        );\r\n    }\r\n\r\n    private __parseConfig(url: ResURL, data: JsonAsset): IConfigAccessor {\r\n        let list = data.json as Array<any>;\r\n        //\u5B58\u53D6\u5668\r\n        if (Res.url2Sheet == undefined) {\r\n            throw new Error(\"Res.url2Sheet\u672A\u5B9A\u4E49!\u8BF7\u5728\u521D\u59CB\u5316\u524D\u8BBE\u7F6E!\");\r\n        }\r\n        const sheet_name = Res.url2Sheet(url);\r\n        let accessorClass: new () => IConfigAccessor = ConfigManager.getAccessorClass(sheet_name);\r\n        let accessor: IConfigAccessor = new accessorClass();\r\n        accessor.sheetName = sheet_name;\r\n        for (let idx = 0; idx < list.length; idx++) {\r\n            const data = list[idx];\r\n            accessor.save(data);\r\n        }\r\n        return accessor;\r\n    }\r\n\r\n    reset(): void {\r\n        this.__url = undefined;\r\n        this.offAllEvent();\r\n    }\r\n}", "import { Res } from \"../res/Res\";\r\nimport { ResourceManager } from \"../res/resources/ResourceManager\";\r\nimport { IConfigAccessor } from \"./IConfigAccessor\";\r\nimport { IConfigManager } from \"./IConfigManager\";\r\n\r\n\r\n\r\nexport class ConfigManagerImpl implements IConfigManager {\r\n\r\n    /**\r\n     * \u5B58\u53D6\u5668\r\n     */\r\n    private __accessors: Map<string, new () => IConfigAccessor>;\r\n    constructor() {\r\n        this.__accessors = new Map<string, new () => IConfigAccessor>();\r\n    }\r\n\r\n    /**\r\n     * \u6CE8\u518C\u5B58\u53D6\u5668\r\n     * @param sheet \r\n     * @param accessor\r\n     */\r\n    register(sheet: string, accessor: new () => IConfigAccessor): void {\r\n        if (this.__accessors.has(sheet)) {\r\n            if (this.__accessors.get(sheet) != accessor) {\r\n                throw new Error(`${sheet},\u91CD\u590D\u6CE8\u518C\u914D\u7F6E\u8868\u5B58\u53D6\u5668\u4E14\u5B58\u53D6\u5668\u7C7B\u578B\u4E0D\u4E00\u81F4!`);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        this.__accessors.set(sheet, accessor);\r\n    }\r\n\r\n    /**\r\n     * \u6CE8\u9500\r\n     * @param sheet \r\n     */\r\n    unregister(sheet: string): void {\r\n        this.__accessors.delete(sheet);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5B58\u53D6\u5668\u7C7B\r\n     * @param sheet \r\n     * @returns \r\n     */\r\n    getAccessorClass(sheet: string): new () => IConfigAccessor {\r\n        if (!this.__accessors.has(sheet)) {\r\n            throw new Error(`${sheet},\u914D\u7F6E\u8868\u5B58\u53D6\u5668\u672A\u6CE8\u518C!`);\r\n        }\r\n        return this.__accessors.get(sheet)!;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5B58\u53D6\u5668\r\n     * @param sheet \r\n     * @returns \r\n     */\r\n    getAccessor(sheet: string): IConfigAccessor {\r\n        if (Res.sheet2URL == undefined) {\r\n            throw new Error(\"Res.sheet2URL\u672A\u5B9A\u4E49!\u8BF7\u5728\u521D\u59CB\u5316\u524D\u8BBE\u7F6E!\");\r\n        }\r\n        const url = Res.sheet2URL(sheet);\r\n        const urlKey = Res.url2Key(url);\r\n        if (!ResourceManager.hasRes(urlKey)) {\r\n            throw new Error(sheet + \"\u672A\u52A0\u8F7D!\");\r\n        }\r\n        let res = ResourceManager.getRes(urlKey)!;\r\n        return res.content;\r\n    }\r\n}", "import { Injector } from \"../utils/Injector\";\r\nimport { ConfigManagerImpl } from \"./ConfigManagerImpl\";\r\nimport { IConfigAccessor } from \"./IConfigAccessor\";\r\nimport { IConfigManager } from \"./IConfigManager\";\r\n\r\n\r\n/**\r\n * \u914D\u7F6E\u8868\u7BA1\u7406\u5668\r\n */\r\nexport class ConfigManager {\r\n\r\n    static KEY: string = \"ConfigManager\"\r\n    \r\n    /**\r\n      * \u6CE8\u518C\u5B58\u53D6\u5668\r\n      * @param sheet \r\n      * @param accessors \r\n      */\r\n    static register(sheet: string, accessors: new () => IConfigAccessor): void {\r\n        this.impl.register(sheet, accessors);\r\n    }\r\n    \r\n    /**\r\n     * \u6CE8\u9500\r\n     * @param sheet \r\n     */\r\n    static unregister(sheet:string):void{\r\n        this.impl.unregister(sheet);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5B58\u53D6\u5668\u7C7B\r\n     * @param sheet \r\n     * @returns \r\n     */\r\n    static getAccessorClass(sheet: string): new () => IConfigAccessor {\r\n        return this.impl.getAccessorClass(sheet);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u914D\u7F6E\u5B58\u53D6\u5668\r\n     * @param sheet\r\n     */\r\n    static getAccessor(sheet: string): IConfigAccessor {\r\n        return this.impl.getAccessor(sheet);\r\n    }\r\n\r\n    private static __impl: IConfigManager;\r\n    private static get impl(): IConfigManager {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl=new ConfigManagerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "\r\n\r\n\r\n\r\nimport { assetManager, JsonAsset } from \"cc\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\";\r\nimport { Res } from \"../../res/Res\";\r\nimport { ResURL } from \"../../res/ResURL\";\r\nimport { ConfigManager } from \"../ConfigManager\";\r\nimport { IConfigAccessor } from \"../IConfigAccessor\";\r\nimport { ILoader } from \"../../res/loaders/ILoader\";\r\nimport { Resource } from \"../../res/resources/Resource\";\r\nimport { ResourceManager } from \"../../res/resources/ResourceManager\";\r\n\r\n/**\r\n * \u8FDC\u7A0B\u914D\u7F6E\u52A0\u8F7D\u5668\r\n */\r\nexport class RemoteConfigLoader extends EventDispatcher implements ILoader {\r\n\r\n    /**\r\n     * \u5F3A\u5236\u52A0\u8F7D\u6700\u65B0\u7248\u672C\r\n     */\r\n    static force: boolean = true;\r\n\r\n    url?: ResURL;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    load(url: ResURL): void {\r\n        this.url = url;\r\n        if (typeof url == \"string\") {\r\n            throw new Error(\"\u672A\u5B9E\u73B0\uFF01\");\r\n        }\r\n        let self = this;\r\n        let remote_url = url.url;\r\n        if (RemoteConfigLoader.force) {\r\n            remote_url += \"?v=\" + Date.now();\r\n        }\r\n        assetManager.loadRemote(remote_url, (err: Error, asset: JsonAsset) => {\r\n            if (err) {\r\n                self.emit(Event.ERROR, url, err);\r\n                return;\r\n            }\r\n            const urlKey = Res.url2Key(url);\r\n            let res: Resource = new Resource();\r\n            res.key = urlKey;\r\n            res.content = asset;\r\n            let accessor = this.__parseConfig(url, asset);\r\n            res.content = accessor;\r\n            ResourceManager.addRes(res);\r\n            self.emit(Event.COMPLETE, url);\r\n        });\r\n    }\r\n\r\n    private __parseConfig(url: ResURL, data: JsonAsset): IConfigAccessor {\r\n        let list = data.json as Array<any>;\r\n        //\u5B58\u53D6\u5668\r\n        if (Res.url2Sheet == undefined) {\r\n            throw new Error(\"Res.url2Sheet\u672A\u5B9A\u4E49!\u8BF7\u5728\u521D\u59CB\u5316\u524D\u8BBE\u7F6E!\");\r\n        }\r\n        const sheet_name = Res.url2Sheet(url);\r\n        let accessorClass: new () => IConfigAccessor = ConfigManager.getAccessorClass(sheet_name);\r\n        let accessor: IConfigAccessor = new accessorClass();\r\n        accessor.sheetName = sheet_name;\r\n        for (let idx = 0; idx < list.length; idx++) {\r\n            const data = list[idx];\r\n            accessor.save(data);\r\n        }\r\n        return accessor;\r\n    }\r\n\r\n    reset(): void {\r\n        this.url = undefined;\r\n        this.offAllEvent();\r\n    }\r\n}", "import { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\n\r\n/**\r\n * \u5217\u8868\r\n */\r\nexport class List<T> extends EventDispatcher {\r\n\r\n    private __element: Array<T>;\r\n    /**\r\n     * \u662F\u5426\u4FDD\u8BC1\u5143\u7D20\u7684\u552F\u4E00\u6027\r\n     */\r\n    private __only: boolean = false;\r\n    /**\r\n     * \u5143\u7D20\u6570\u91CF(\u5185\u90E8\u518D\u589E\u5220\u65F6\u4F1A\u4FEE\u6539\u8FD9\u4E2A\u53C2\u6570\uFF0C\u5916\u90E8\u53EA\u505A\u8BA1\u7B97\u548C\u7ED1\u5B9A\u4F7F\u7528\uFF0C\u5207\u8BB0\u4E0D\u53EF\u505A\u8D4B\u503C\u64CD\u4F5C\uFF01)\r\n     */\r\n    count: number = 0;\r\n\r\n    constructor(only: boolean = true) {\r\n        super();\r\n        this.__only = only;\r\n        this.__element = [];\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5230\u672B\u5C3E(\u6CE8\u610F\u5982\u679C\u4FDD\u8BC1\u552F\u4E00\u6027\uFF0C\u90A3\u4E48\u91CD\u590D\u65F6\u5C31\u76F4\u63A5\u8FD4\u56DE)\r\n     * @param value \r\n     */\r\n    push(value: T): boolean {\r\n        if (this.__only) {\r\n            let index: number = this.__element.indexOf(value);\r\n            if (index >= 0) {\r\n                return false;\r\n            }\r\n        }\r\n        this.__element.push(value);\r\n        this.count = this.__element.length;\r\n        if (this.hasEvent(Event.ADD)) {\r\n            this.emit(Event.ADD, value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5230\u5217\u8868\u5934\u90E8(\u6CE8\u610F\u5982\u679C\u4FDD\u8BC1\u552F\u4E00\u6027\uFF0C\u90A3\u4E48\u91CD\u590D\u65F6\u5C31\u76F4\u63A5\u8FD4\u56DE)\r\n     * @param value \r\n     * @returns \r\n     */\r\n    unshift(value: T): boolean {\r\n        if (this.__only) {\r\n            let index: number = this.__element.indexOf(value);\r\n            if (index >= 0) {\r\n                return false;\r\n            }\r\n        }\r\n        this.__element.unshift(value);\r\n        this.count = this.__element.length;\r\n        if (this.hasEvent(Event.ADD)) {\r\n            this.emit(Event.ADD, value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5E76\u5220\u9664\u6700\u540E\u4E00\u4E2A\u5143\u7D20\r\n     * @returns \r\n     */\r\n    pop(): T {\r\n        if (this.__element.length > 0) {\r\n            const result = this.__element.pop();\r\n            this.count = this.__element.length;\r\n            if (this.hasEvent(Event.REMOVE)) {\r\n                this.emit(Event.REMOVE, result);\r\n            }\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5E76\u5220\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20\r\n     * @returns \r\n     */\r\n    shift(): T {\r\n        if (this.__element.length > 0) {\r\n            const result = this.__element.shift();\r\n            this.count = this.__element.length;\r\n            if (this.hasEvent(Event.REMOVE)) {\r\n                this.emit(Event.REMOVE, result);\r\n            }\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u6307\u5B9A\u7D22\u5F15\u7684\u5143\u7D20\r\n     * @param index \r\n     */\r\n    removeAt(index: number): T {\r\n        if (index >= this.__element.length) {\r\n            throw new Error(\"\u5220\u9664\u7D22\u5F15\u8D85\u51FA\u8303\u56F4\uFF01\");\r\n        }\r\n        const result = this.__element[index];\r\n        this.__element.splice(index, 1);\r\n        this.count = this.__element.length;\r\n        if (this.hasEvent(Event.REMOVE)) {\r\n            this.emit(Event.REMOVE, result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u5143\u7D20\r\n     * @param value \r\n     */\r\n    remove(value: T): void {\r\n        let index: number = this.__element.indexOf(value);\r\n        if (index < 0) {\r\n            throw new Error(\"\u8981\u5220\u9664\u7684\u5185\u5BB9\u4E0D\u5728\u5217\u8868\u4E2D\uFF01\" + value);\r\n        }\r\n        const result = this.__element[index];\r\n        this.__element.splice(index, 1);\r\n        this.count = this.__element.length;\r\n        if (this.hasEvent(Event.REMOVE)) {\r\n            this.emit(Event.REMOVE, result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u79FB\u9664\u6240\u6709\u5143\u7D20\r\n     */\r\n    clear(): void {\r\n        this.count = 0;\r\n        this.__element.length = 0;\r\n        if (this.hasEvent(Event.CLEAR)) {\r\n            this.emit(Event.CLEAR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5224\u65AD\u662F\u5426\u5305\u542B\r\n     * @param value \r\n     * @returns \r\n     */\r\n    has(value: T): boolean {\r\n        return this.find(value) >= 0;\r\n    }\r\n    \r\n    /**\r\n     * \u67E5\u627E\u5143\u7D20\u4E0B\u6807\r\n     * @param value \r\n     * @returns \r\n     */\r\n    find(value: T): number {\r\n        return this.__element.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * \u67E5\u627E\u5143\u7D20\u4E0B\u6807\r\n     * @param predicate \r\n     * @returns \r\n     */\r\n    findIndex(predicate: (value: T, index: number, obj: T[]) => unknown): number {\r\n        let index = this.__element.findIndex(predicate);\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6307\u5B9A\u5143\u7D20\r\n     * @param index \r\n     * @returns \r\n     */\r\n    get(index: number): T {\r\n        if (index >= this.__element.length) {\r\n            throw new Error(\"\u8D85\u51FA\u7D22\u5F15\u8303\u56F4:\" + index + \"/\" + this.__element.length);\r\n        }\r\n        return this.__element[index];\r\n    }\r\n\r\n    /**\r\n     * \u6E90\u5217\u8868\u6570\u636E(\u6CE8\u610F\u4E0D\u8981\u76F4\u63A5\u8FDB\u884C\u589E\u5220\u64CD\u4F5C\uFF0C\u800C\u662F\u901A\u8FC7List.push....\u7B49\u63A5\u53E3\u8FDB\u884C\u64CD\u4F5C)\r\n     */\r\n    get elements(): Array<T> {\r\n        return this.__element;\r\n    }\r\n}", "\r\n\r\n\r\n\r\nexport class ChangedData {\r\n    public key: string;\r\n    public newValue: any;\r\n    public oldValue: any;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static create(newValue?: any, oldValue?: any, key?: string): ChangedData {\r\n        let result: ChangedData = new ChangedData();\r\n        result.oldValue = oldValue;\r\n        result.newValue = newValue;\r\n        result.key = key;\r\n        return result;\r\n    }\r\n}", "\r\n\r\n\r\n\r\n/**\r\n * \u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u6A21\u5F0F\r\n */\r\nexport enum SerDesMode{\r\n    /**\r\n     * JSON\u6A21\u5F0F\r\n     */\r\n    JSON=0\r\n}", "import { Event } from \"../../../events/Event\";\r\nimport { EventDispatcher } from \"../../../events/EventDispatcher\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { SerDes } from \"../SerDes\";\r\nimport { ISerDesValue } from \"./ISerDesValue\";\r\n\r\n\r\n/**\r\n * \u503C\u62BD\u8C61\u7C7B\r\n */\r\nexport class BaseValue extends EventDispatcher implements ISerDesValue {\r\n\r\n    value: any;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getValue(): any {\r\n        return this.value;\r\n    }\r\n\r\n    setValue(value: any): void {\r\n        if (this.checkValue(value)) {\r\n            let oldValue: any = this.value;\r\n            this.value = value;\r\n            this.sendEvent(this.value, oldValue);\r\n        }\r\n    }\r\n\r\n    protected sendEvent(newValue: any, oldValue: any): void {\r\n        if (this.hasEvent(Event.VALUE_CHANGED)) {\r\n            this.emit(Event.VALUE_CHANGED, ChangedData.create(newValue, oldValue));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u68C0\u6D4B\u503C\u662F\u5426\u5408\u6CD5\r\n     * @param value \r\n     */\r\n    protected checkValue(value: any): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \u53CD\u5E8F\u5217\u5316\r\n     * @param type \r\n     * @param data \r\n     */\r\n    decode(type: number, data: any): void {\r\n        let decoder = SerDes.getDeserialization(type);\r\n        decoder.decode(this, data);\r\n    }\r\n\r\n    /**\r\n     * \u5E8F\u5217\u5316\r\n     * @param type \r\n     * @param data \r\n     * @returns \r\n     */\r\n    encode(type: number, data?: any): any {\r\n        let encoder = SerDes.getSerialization(type);\r\n        return encoder.encode(this, data);\r\n    }\r\n\r\n    equality(value: ISerDesValue): boolean {\r\n        if (this.value == value.getValue()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}", "import { Event } from \"../../../events/Event\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { BaseValue } from \"./BaseValue\";\r\nimport { ISerDesValue } from \"./ISerDesValue\";\r\n\r\n\r\n\r\n/**\r\n * \u6570\u7EC4\u578B\u6570\u503C\r\n */\r\nexport class ArrayValue extends BaseValue {\r\n\r\n    constructor() {\r\n        super();\r\n        this.value = [];\r\n    }\r\n\r\n    protected checkValue(value: any): boolean {\r\n        if (value != null && Array.isArray(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5230\u6307\u5B9A\u4F4D\u7F6E\r\n     * @param index \r\n     * @param value \r\n     */\r\n    addAt(index: number, value: ISerDesValue): void {\r\n        if (index < this.elements.length - 1) {\r\n            this.elements.splice(index, 0, value);\r\n            if (this.hasEvent(Event.ADD_CHILD)) {\r\n                this.emit(Event.ADD_CHILD, ChangedData.create(index));\r\n            }\r\n            value.on(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n            value.on(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n        } else {\r\n            throw new Error(\"\u7D22\u5F15\" + index + \" \u8D85\u51FA\u53EF\u6DFB\u52A0\u8303\u56F4:\" + (this.elements.length - 1));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\r\n     * @param value \r\n     */\r\n    remove(value: ISerDesValue): void {\r\n        let index = this.elements.indexOf(value);\r\n        this.removeAt(index);\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u7D22\u5F15\u5220\u9664\u5E76\u8FD4\u56DE\u5143\u7D20\r\n     * @param index \r\n     */\r\n    removeAt(index: number): ISerDesValue {\r\n        if (index < 0 || index > this.elements.length - 1) {\r\n            throw new Error(\"\u8981\u5220\u9664\u7684\u7D22\u5F15\u8D85\u51FA\u6570\u7EC4\u8FB9\u754C\uFF01\");\r\n        }\r\n        let result: ISerDesValue = this.elements[index];\r\n        this.elements.splice(index, 1);\r\n        if (this.hasEvent(Event.REMOVE_CHILD)) {\r\n            this.emit(Event.REMOVE_CHILD, ChangedData.create(index));\r\n        }\r\n        result.off(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        result.off(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n        return result;\r\n    }\r\n\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5230\u672B\u5C3E\r\n     * @param value \r\n     */\r\n    push(value: ISerDesValue): void {\r\n        let index: number = this.elements.indexOf(value);\r\n        if (index >= 0) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\uFF01\");\r\n        }\r\n        index = this.elements.length;\r\n        this.elements.push(value);\r\n        if (this.hasEvent(Event.ADD_CHILD)) {\r\n            this.emit(Event.ADD_CHILD, ChangedData.create(index));\r\n        }\r\n        value.on(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        value.on(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5230\u5934\u90E8\r\n     * @param value \r\n     */\r\n    unshift(value: ISerDesValue): void {\r\n        let index: number = this.elements.indexOf(value);\r\n        if (index >= 0) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\uFF01\");\r\n        }\r\n        this.elements.unshift(value);\r\n        if (this.hasEvent(Event.ADD_CHILD)) {\r\n            this.emit(Event.ADD_CHILD, ChangedData.create(0));\r\n        }\r\n        value.on(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        value.on(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u5E76\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5143\u7D20\r\n     */\r\n    shift(): ISerDesValue {\r\n        if (this.elements.length == 0) {\r\n            throw new Error(\"\u6570\u7EC4\u4E3A\u7A7A\uFF01\");\r\n        }\r\n        let result: ISerDesValue = this.elements.shift();\r\n        if (this.hasEvent(Event.REMOVE_CHILD)) {\r\n            this.emit(Event.REMOVE_CHILD, ChangedData.create(0));\r\n        }\r\n        result.off(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        result.off(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n    * \u5220\u9664\u5E76\u8FD4\u56DE\u6700\u540E\u4E00\u4E2A\u5143\u7D20\r\n    */\r\n    pop(): ISerDesValue {\r\n        if (this.elements.length == 0) {\r\n            throw new Error(\"\u6570\u7EC4\u4E3A\u7A7A\uFF01\");\r\n        }\r\n        let index: number = this.elements.length - 1;\r\n        let result: ISerDesValue = this.elements.pop();\r\n        if (this.hasEvent(Event.REMOVE_CHILD)) {\r\n            this.emit(Event.REMOVE_CHILD, ChangedData.create(index));\r\n        }\r\n        result.off(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        result.off(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u7D22\u5F15\u83B7\u53D6\u5143\u7D20\r\n     * @param index \r\n     */\r\n    getAt(index: number): ISerDesValue {\r\n        return this.elements[index];\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7D22\u5F15\u503C\r\n     * @param value \r\n     */\r\n    getChildIndex(value: ISerDesValue): number {\r\n        return this.elements.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * \u68C0\u6D4B\u65F6\u5019\u5305\u542B\u8BE5\u5185\u5BB9\r\n     * @param value \r\n     */\r\n    contains(value: ISerDesValue): boolean {\r\n        for (let index = 0; index < this.elements.length; index++) {\r\n            const element = this.elements[index];\r\n            if (element.equality(value)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \u5BF9\u6BD4\r\n     * @param value \r\n     */\r\n    equality(value: ISerDesValue): boolean {\r\n        if (value instanceof ArrayValue) {\r\n            if (this.elements == value.elements) {\r\n                return true;\r\n            }\r\n            if (this.elements.length != value.elements.length) {\r\n                return false;\r\n            }\r\n            let a: ISerDesValue, b: ISerDesValue;\r\n            for (let index = 0; index < this.length; index++) {\r\n                a = this.elements[index];\r\n                b = value.elements[index];\r\n                if (a.equality(b) == false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    private childValueChanged(e: Event): void {\r\n        if (this.hasEvent(Event.CHILD_VALUE_CHANGED)) {\r\n            this.emit(Event.CHILD_VALUE_CHANGED, e.data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u9664\r\n     */\r\n    clear(): void {\r\n        this.elements.length = 0;\r\n    }\r\n\r\n    /**\r\n     * \u5217\u8868\u957F\u5EA6\r\n     */\r\n    get length(): number {\r\n        return this.elements.length;\r\n    }\r\n\r\n    /**\r\n     * \u5185\u5BB9\r\n     */\r\n    get elements(): Array<ISerDesValue> {\r\n        return this.value;\r\n    }\r\n}", "\r\nimport { Dictionary } from \"../../Dictionary\";\r\nimport { Event } from \"../../../events/Event\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { ISerDesProperty } from \"../propertys/ISerDesProperty\";\r\nimport { BaseValue } from \"./BaseValue\";\r\nimport { ISerDesValue } from \"./ISerDesValue\";\r\n\r\n\r\n/**\r\n * \u5BF9\u8C61\u7C7B\u578B\u6570\u636E\r\n */\r\nexport class DictionaryValue extends BaseValue {\r\n\r\n    constructor() {\r\n        super();\r\n        this.value = new Dictionary<string, ISerDesProperty>();\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5C5E\u6027\r\n     * @param value \r\n     */\r\n    add(value: ISerDesProperty): ISerDesValue {\r\n        if (this.map.has(value.key)) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\u76F8\u540CKEY\u7684\u5C5E\u6027\uFF01\");\r\n        }\r\n        this.map.set(value.key, value);\r\n        if (this.hasEvent(Event.ADD_CHILD)) {\r\n            this.emit(Event.ADD_CHILD, ChangedData.create(value, null, value.key));\r\n        }\r\n        value.on(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        value.on(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u5C5E\u6027\r\n     * @param value \r\n     */\r\n    remove(value: ISerDesProperty): void {\r\n        this.removeByKey(value.key);\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u5C5E\u6027key\u5220\u9664\u5E76\u8FD4\u56DE\r\n     * @param key \r\n     */\r\n    removeByKey(key: string): ISerDesValue {\r\n        if (!this.map.has(key)) {\r\n            throw new Error(\"\u8981\u5220\u9664\u7684\u5C5E\u6027\u4E0D\u5728\u96C6\u5408\u5185!\");\r\n        }\r\n        let result: ISerDesValue = this.map.get(key);\r\n        this.map.delete(key);\r\n        if (this.hasEvent(Event.REMOVE_CHILD)) {\r\n            this.emit(Event.REMOVE_CHILD, ChangedData.create(null, result, key));\r\n        }\r\n        result.off(Event.VALUE_CHANGED, this.childValueChanged, this);\r\n        result.off(Event.CHILD_VALUE_CHANGED, this.childValueChanged, this);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u67E5\u8BE2\u662F\u5426\u5B58\u5728\r\n     * @param key \r\n     * @returns \r\n     */\r\n    has(key: string): boolean {\r\n        return this.map.has(key);\r\n    }\r\n\r\n    /**\r\n     * \u66F4\u65B0\u5C5E\u6027\r\n     * @param key \r\n     * @param data \r\n     */\r\n    update(key: string, data: any): void {\r\n        if (this.map.has(key) == false) {\r\n            throw new Error(\"\u8981\u66F4\u65B0\u7684\u5C5E\u6027\u4E0D\u5B58\u5728\uFF01\" + key);\r\n        }\r\n        let value: ISerDesValue = this.map.get(key);\r\n        value.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * \u66F4\u65B0\u591A\u9879\u5C5E\u6027\r\n     * @param keys \r\n     * @param values \r\n     */\r\n    multUpdate(keys: Array<string>, values: Array<any>): void {\r\n        if (keys == null || values == null) {\r\n            throw new Error(\"Keys\u548Cvalues\u4E0D\u80FD\u4E3A\u7A7A\uFF01\");\r\n        }\r\n        if (keys.length != values.length) {\r\n            throw new Error(\"keys.length!=values.length\");\r\n        }\r\n        let key: string;\r\n        let value: any;\r\n        for (let i: number = 0; i < keys.length; i++) {\r\n            key = keys[i];\r\n            value = values[i];\r\n            this.update(key, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5C5E\u6027\r\n     * @param key \r\n     */\r\n    get(key: string): ISerDesValue {\r\n        return this.map.get(key);\r\n    }\r\n\r\n    /**\r\n     * \u5BF9\u6BD4\r\n     * @param value \r\n     */\r\n    equality(value: ISerDesValue): boolean {\r\n        if (value instanceof DictionaryValue) {\r\n            if (this.elements.length != value.elements.length) {\r\n                return false;\r\n            }\r\n            let a: ISerDesValue;\r\n            let b: ISerDesValue;\r\n            for (let i: number = 0; i < this.elements.length; i++) {\r\n                a = this.elements[i];\r\n                b = value.elements[i];\r\n                if (a.equality(b) != false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u9664\r\n     */\r\n    clear(): void {\r\n        this.map.clear();\r\n    }\r\n\r\n    private childValueChanged(e: Event): void {\r\n        if (this.hasEvent(Event.CHILD_VALUE_CHANGED)) {\r\n            this.emit(Event.CHILD_VALUE_CHANGED, e.data);\r\n        }\r\n    }\r\n\r\n    get elements(): Array<ISerDesValue> {\r\n        return this.map.elements;\r\n    }\r\n\r\n    private get map(): Dictionary<string, ISerDesValue> {\r\n        return this.value;\r\n    }\r\n}", "\r\nimport { Event } from \"../../../events/Event\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { ArrayValue } from \"../values/ArrayValue\";\r\nimport { DictionaryValue } from \"../values/DictionaryValue\";\r\nimport { ISerDesValue } from \"../values/ISerDesValue\";\r\nimport { ISerDesProperty } from \"./ISerDesProperty\";\r\n\r\n\r\n\r\nexport class ArrayProperty extends ArrayValue implements ISerDesProperty {\r\n    \r\n    key: string;\r\n\r\n    constructor(key?: string, value?: any) {\r\n        super();\r\n        this.key = key;\r\n        if (value != null && value != undefined) {\r\n            this.setValue(value);\r\n        }\r\n    }\r\n\r\n    protected sendEvent(newValue: any, oldValue: any): void {\r\n        if (this.hasEvent(Event.VALUE_CHANGED)) {\r\n            this.emit(Event.VALUE_CHANGED, ChangedData.create(newValue, oldValue, this.key));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5224\u65AD\u67D0\u4E2A\u5B50\u5185\u5BB9\u7684\u67D0\u4E2A\u5C5E\u6027\u76F8\u540C\u5219\u8FD4\u56DEtrue\r\n     */\r\n    containProperty(value: ISerDesProperty): Boolean {\r\n        let item: ISerDesValue;\r\n        let findValue: ISerDesValue;\r\n        for (let j: number = 0; j < this.length; j++) {\r\n            item = this.elements[j];\r\n            if (item instanceof DictionaryValue) {\r\n                findValue = item.get(value.key);\r\n                if (findValue.equality(value)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}", "\r\nimport { Event } from \"../../../events/Event\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { DictionaryValue } from \"../values/DictionaryValue\";\r\nimport { ISerDesProperty } from \"./ISerDesProperty\";\r\n\r\n\r\nexport class DictionaryProperty extends DictionaryValue implements ISerDesProperty {\r\n    key: string;\r\n\r\n    constructor(key?: string, value?: any) {\r\n        super();\r\n        this.key = key;\r\n        if (value != null && value != undefined) {\r\n            this.setValue(value);\r\n        }\r\n    }\r\n\r\n    protected sendEvent(newValue: any, oldValue: any): void {\r\n        if (this.hasEvent(Event.VALUE_CHANGED)) {\r\n            this.emit(Event.VALUE_CHANGED, ChangedData.create(newValue, oldValue, this.key));\r\n        }\r\n    }\r\n}", "import { Logger } from \"../../../loggers/Logger\";\r\nimport { BaseValue } from \"./BaseValue\";\r\n\r\n\r\n\r\n/**\r\n * \u6570\u503C\u7C7B\u578B\u503C\r\n */\r\nexport class NumberValue extends BaseValue {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected checkValue(value: any): boolean {\r\n        if (isNaN(value)) {\r\n            Logger.error(\"\u8BBE\u7F6E\u975E\u6570\u5B57\u7C7B\u578B:\" + value, \"datas\");\r\n            return false;\r\n        }\r\n        if (value < Number.MIN_SAFE_INTEGER || value > Number.MAX_SAFE_INTEGER) {\r\n            Logger.error(\"\u6570\u503C:\" + value + \" \u8D85\u51FAnumber\u53EF\u5141\u8BB8\u8303\u56F4!\", \"datas\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}", "\r\nimport { Event } from \"../../../events/Event\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { NumberValue } from \"../values/NumberValue\";\r\nimport { ISerDesProperty } from \"./ISerDesProperty\";\r\n\r\n\r\n\r\nexport class NumberProperty extends NumberValue implements ISerDesProperty {\r\n    key: string;\r\n\r\n    constructor(key?: string, value?: any) {\r\n        super();\r\n        this.key = key;\r\n        if (value != null && value != undefined) {\r\n            this.setValue(value);\r\n        }\r\n    }\r\n\r\n    protected sendEvent(newValue: any, oldValue: any): void {\r\n        if (this.hasEvent(Event.VALUE_CHANGED)) {\r\n            this.emit(Event.VALUE_CHANGED, ChangedData.create(newValue, oldValue, this.key));\r\n        }\r\n    }\r\n}", "import { BaseValue } from \"./BaseValue\";\r\n\r\n\r\n\r\n/**\r\n * \u5B57\u7B26\u4E32\u7C7B\u578B\u503C\r\n */\r\nexport class StringValue extends BaseValue {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected checkValue(value: any): boolean {\r\n        if (value == undefined || value == null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}", "\r\nimport { Event } from \"../../../events/Event\";\r\nimport { ChangedData } from \"../ChangedData\";\r\nimport { StringValue } from \"../values/StringValue\";\r\nimport { ISerDesProperty } from \"./ISerDesProperty\";\r\n\r\n\r\n\r\nexport class StringProperty extends StringValue implements ISerDesProperty {\r\n\r\n    key: string;\r\n\r\n    constructor(key?: string, value?: any) {\r\n        super();\r\n        this.key = key;\r\n        if (value != null && value != undefined) {\r\n            this.setValue(value);\r\n        }\r\n    }\r\n\r\n    protected sendEvent(newValue: any, oldValue: any): void {\r\n        if (this.hasEvent(Event.VALUE_CHANGED)) {\r\n            this.emit(Event.VALUE_CHANGED, ChangedData.create(newValue, oldValue, this.key));\r\n        }\r\n    }\r\n}", "import { ArrayProperty } from \"./propertys/ArrayProperty\";\r\nimport { DictionaryProperty } from \"./propertys/DictionaryProperty\";\r\nimport { ISerDesProperty } from \"./propertys/ISerDesProperty\";\r\nimport { NumberProperty } from \"./propertys/NumberProperty\";\r\nimport { StringProperty } from \"./propertys/StringProperty\";\r\nimport { ArrayValue } from \"./values/ArrayValue\";\r\nimport { DictionaryValue } from \"./values/DictionaryValue\";\r\nimport { ISerDesValue } from \"./values/ISerDesValue\";\r\nimport { NumberValue } from \"./values/NumberValue\";\r\nimport { StringValue } from \"./values/StringValue\";\r\n\r\n\r\n\r\n\r\nexport class DataFactory {\r\n    /**\r\n     * \u6839\u636E\u6570\u636E\u521B\u5EFA\u503C\u5BF9\u8C61\r\n     * @param data \r\n     */\r\n    static createValue(data: any): ISerDesValue {\r\n        if (data instanceof Array) {\r\n            return new ArrayValue();\r\n        } else {\r\n            //\u5B57\u7B26\u4E32\r\n            if (data instanceof String) {\r\n                return new StringValue();\r\n            } else {\r\n                //\u975E\u6570\u5B57\r\n                if (isNaN(data)) {\r\n                    return new DictionaryValue();\r\n                } else {\r\n                    return new NumberValue();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6839\u636E\u6570\u636E\u521B\u5EFA\r\n     * @param type \r\n     * @param key \r\n     */\r\n    static createProperty(data: any): ISerDesProperty {\r\n        let result: ISerDesProperty;\r\n        if (data instanceof Array) {\r\n            result = new ArrayProperty();\r\n        } else {\r\n            //\u5B57\u7B26\u4E32\r\n            if (typeof data === 'string') {\r\n                result = new StringProperty();\r\n            } else {\r\n                let numValue: number = Number(data);\r\n                //\u975E\u6570\u5B57\r\n                if (isNaN(numValue)) {\r\n                    result = new DictionaryProperty();\r\n                } else {\r\n                    result = new NumberProperty();\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}", "import { DataFactory } from \"../DataFactory\";\r\nimport { DictionaryProperty } from \"../propertys/DictionaryProperty\";\r\nimport { ISerDesProperty } from \"../propertys/ISerDesProperty\";\r\nimport { SerDesMode } from \"../SerDesMode\";\r\nimport { ArrayValue } from \"../values/ArrayValue\";\r\nimport { BaseValue } from \"../values/BaseValue\";\r\nimport { DictionaryValue } from \"../values/DictionaryValue\";\r\nimport { ISerDesValue } from \"../values/ISerDesValue\";\r\nimport { IDeserialization } from \"./IDeserialization\";\r\n\r\n\r\n\r\n\r\nexport class JSONDeserialization implements IDeserialization {\r\n\r\n    /**\r\n     * \u89E3\u7801\r\n     * @param target \r\n     * @param data \r\n     */\r\n    decode(target: any, data: any): void {\r\n        //\u6570\u7EC4\r\n        if (target instanceof ArrayValue) {\r\n            let value: ISerDesValue;\r\n            for (let i: number = 0; i < data.length; i++) {\r\n                let item_value = data[i];\r\n                value = DataFactory.createProperty(item_value);\r\n                value.decode(SerDesMode.JSON, item_value);\r\n                target.push(value);\r\n            }\r\n            return;\r\n        }\r\n        if (target instanceof DictionaryValue) {\r\n            let item_property: any;\r\n            let property: ISerDesProperty;\r\n            for (const key in data) {\r\n                if (key == \"key\") {\r\n                    if (target instanceof DictionaryProperty) {\r\n                        target.key = data.key;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n                    item_property = data[key];\r\n                    property = DataFactory.createProperty(item_property);\r\n                    property.key = key;\r\n                    property.decode(SerDesMode.JSON, item_property);\r\n                    target.add(property);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (target instanceof BaseValue) {\r\n            target.setValue(data);\r\n        }\r\n    }\r\n}", "import { ISerialization } from \"./ISerialization\";\r\nimport { ISerDesProperty } from \"../propertys/ISerDesProperty\";\r\nimport { NumberProperty } from \"../propertys/NumberProperty\";\r\nimport { StringProperty } from \"../propertys/StringProperty\";\r\nimport { SerDesMode } from \"../SerDesMode\";\r\nimport { ArrayValue } from \"../values/ArrayValue\";\r\nimport { DictionaryValue } from \"../values/DictionaryValue\";\r\nimport { ISerDesValue } from \"../values/ISerDesValue\";\r\nimport { DictionaryProperty } from \"../propertys/DictionaryProperty\";\r\n\r\n\r\n\r\n\r\nexport class JSONSerialization implements ISerialization {\r\n\r\n    /**\r\n     * \u7F16\u7801\r\n     * @param target \r\n     * @param data \r\n     * @returns \r\n     */\r\n    encode(target: any, data: any): any {\r\n        //\u6570\u7EC4\r\n        if (target instanceof ArrayValue) {\r\n            let result_value = [];\r\n            let item_value: ISerDesValue;\r\n            for (let i: number = 0; i < target.elements.length; i++) {\r\n                item_value = target.elements[i];\r\n                result_value.push(item_value.encode(SerDesMode.JSON, data));\r\n            }\r\n            return result_value;\r\n        }\r\n        if (target instanceof DictionaryValue) {\r\n            let result_property: any = {};\r\n            let item_property: ISerDesProperty;\r\n            for (let index = 0; index < target.elements.length; index++) {\r\n                item_property = target.elements[index] as ISerDesProperty;\r\n                result_property[item_property.key] = item_property.encode(SerDesMode.JSON, data);\r\n            }\r\n            if (target instanceof DictionaryProperty) {\r\n                result_property[\"key\"] = target.key;\r\n            }\r\n            return result_property;\r\n        }\r\n        return target.value;\r\n    }\r\n}", "import { IDeserialization } from \"./deserializations/IDeserialization\";\r\nimport { ISerialization } from \"./serializations/ISerialization\";\r\nimport { SerDesMode } from \"./SerDesMode\";\r\nimport { JSONDeserialization } from \"./deserializations/JSONDeserialization\";\r\nimport { JSONSerialization } from \"./serializations/JSONSerialization\";\r\n\r\n\r\n\r\n\r\n/**\r\n * \u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\r\n */\r\nexport class SerDes {\r\n\r\n    private static __serMap = new Map<SerDesMode, ISerialization>();\r\n    private static __desMap = new Map<SerDesMode, IDeserialization>();\r\n\r\n    private static __inited:boolean=false;\r\n    private static init():void{\r\n        if(this.__inited){\r\n            return;\r\n        }\r\n        this.__inited=true;\r\n        this.addSer(SerDesMode.JSON, new JSONSerialization());\r\n        this.addDes(SerDesMode.JSON, new JSONDeserialization());\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5E8F\u5217\u5316\u5668\r\n     * @param type \r\n     * @param ser \r\n     */\r\n    static addSer(type: SerDesMode, ser: ISerialization) {\r\n        this.__serMap.set(type, ser);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u53CD\u5E8F\u5217\u5316\u5668\r\n     * @param type \r\n     * @param des \r\n     */\r\n    static addDes(type: SerDesMode, des: IDeserialization) {\r\n        this.__desMap.set(type, des);\r\n    }\r\n\r\n    static getSerialization(type: SerDesMode): ISerialization {\r\n        this.init();\r\n        if (!this.__serMap.has(type)) {\r\n            console.error(\"\u6CA1\u6709\u627E\u5230\u5E8F\u5217\u5316\u5668\");\r\n            return new JSONSerialization();\r\n        } else {\r\n            return this.__serMap.get(type);\r\n        }\r\n    }\r\n\r\n    static getDeserialization(type: SerDesMode): IDeserialization {\r\n        this.init();\r\n        if (!this.__desMap.has(type)) {\r\n            console.error(\"\u6CA1\u6709\u627E\u5230\u53CD\u5E8F\u5217\u5316\u5668\");\r\n            return new JSONDeserialization();\r\n        } else {\r\n            return this.__desMap.get(type);\r\n        }\r\n    }\r\n}", "import { DEBUG } from \"cc/env\";\r\nimport { ITicker } from \"../../ticker/ITicker\";\r\nimport { TickerManager } from \"../../ticker/TickerManager\";\r\nimport { RedPointNode } from \"./RedPointNode\";\r\nimport { IRedPointData } from \"./IRedPointData\";\r\nimport { IFuncConfig } from \"../IFuncConfig\";\r\n\r\n\r\n\r\n\r\nexport class RedPoint implements ITicker {\r\n\r\n    /**\u6BCF\u5E27\u8FD0\u884C\u68C0\u6D4B\u5668\u6570\u91CF */\r\n    static FRAME_RUN_COUNT: number = 2;\r\n\r\n    private __redPoints = new Map<number, RedPointNode>();\r\n    private __detectors = new Map<number, () => boolean>();\r\n    private __waiting = new Set<number>();\r\n    private __frameRunList: Array<number> = [];\r\n\r\n    constructor() {\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        if (this.__waiting.size == 0) {\r\n            return;\r\n        }\r\n        let index: number = 0;\r\n        for (const id of this.__waiting) {\r\n            let detector = this.__detectors.get(id);\r\n            let isActive = detector();\r\n            let node = this.__redPoints.get(id);\r\n            node.isActive = isActive;\r\n            this.__frameRunList.push(id);\r\n            if (index > RedPoint.FRAME_RUN_COUNT) {\r\n                break;\r\n            }\r\n            index++;\r\n        }\r\n        for (let index = 0; index < this.__frameRunList.length; index++) {\r\n            const id = this.__frameRunList[index];\r\n            this.__waiting.delete(id);\r\n        }\r\n        this.__frameRunList.splice(0, this.__frameRunList.length);\r\n    }\r\n\r\n    /**\r\n     * \u6CE8\u518C\u7EA2\u70B9\u68C0\u6D4B\u5668(\u5185\u90E8\u63A5\u53E3\uFF0C\u5F00\u53D1\u65F6\u8BF7\u4F7F\u7528Module\u4E0A\u7684registerRedPoint\u65B9\u6CD5)\r\n     * @param id \r\n     * @param detector \r\n     */\r\n    register(id: number, detector: () => boolean): void {\r\n        if (this.__detectors.has(id)) {\r\n            throw new Error(`\u91CD\u590D\u6CE8\u518C\u7EA2\u70B9\u68C0\u6D4B${id}`);\r\n        }\r\n        this.__detectors.set(id, detector);\r\n    }\r\n\r\n    /**\r\n     * \u6CE8\u9500\u7EA2\u70B9\u68C0\u6D4B\u5668\r\n     * @param id \r\n     */\r\n    unregister(id: number): void {\r\n        this.__detectors.delete(id);\r\n    }\r\n\r\n    /**\r\n     * \u8BF7\u6C42\u68C0\u6D4B\r\n     * @param id \r\n     */\r\n    request(id: number): void {\r\n        if (!this.__detectors.has(id)) {\r\n            throw new Error(`\u68C0\u6D4B\u5668${id}\u4E0D\u5B58\u5728`);\r\n        }\r\n        this.__waiting.add(id);\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\u7EA2\u70B9\u7ED3\u6784\u4F53\r\n     * @param config \r\n     */\r\n    createByConfig(configs: Array<IFuncConfig>): void {\r\n        for (let index = 0; index < configs.length; index++) {\r\n            const config = configs[index];\r\n            let node = this.__createNode(config.id);\r\n            this.__redPoints.set(config.id, node);\r\n        }\r\n        for (let index = 0; index < configs.length; index++) {\r\n            const config = configs[index];\r\n            if (config.id == config.parent) {\r\n                continue;\r\n            }\r\n            let node = this.__redPoints.get(config.id);\r\n            let parent = this.__redPoints.get(config.parent);\r\n            node.parent = parent;\r\n            parent.addChild(node);\r\n        }\r\n        //\u8C03\u8BD5\u6A21\u5F0F\u4E0B\u68C0\u6D4B\u5FAA\u73AF\u5F15\u7528\r\n        if (DEBUG) {\r\n            let parents: Array<number> = [];\r\n            for (let index = 0; index < configs.length; index++) {\r\n                const config = configs[index];\r\n                let node = this.__redPoints.get(config.id);\r\n                parents.splice(0, parents.length);\r\n                this.checkCircularReference(node, parents);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u6570\u636E\u521B\u5EFA\u8282\u70B9\r\n     * @param data \r\n     * @returns \r\n     */\r\n    createByData(data: IRedPointData): RedPointNode {\r\n        let node = new RedPointNode(data.id);\r\n        for (const child of data.children) {\r\n            if (typeof child == \"number\") {\r\n                let childNode: RedPointNode;\r\n                if (this.__redPoints.has(child)) {\r\n                    childNode = this.__redPoints.get(child);\r\n                } else {\r\n                    childNode = new RedPointNode(child);\r\n                }\r\n                node.addChild(childNode);\r\n            } else {\r\n                let childData: IRedPointData = <IRedPointData>child;\r\n                let childNode = this.createByData(childData);\r\n                node.addChild(childNode);\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * \u521B\u5EFA\u8282\u70B9\r\n     * @param id \r\n     * @param children \r\n     * @returns \r\n     */\r\n    create(id: number, children: Array<number>): RedPointNode {\r\n        if (this.__redPoints.has(id)) {\r\n            throw new Error(`\u8282\u70B9${id}\u5DF2\u5B58\u5728`);\r\n        }\r\n        let node = new RedPointNode(id);\r\n        for (let index = 0; index < children.length; index++) {\r\n            const childID = children[index];\r\n            if (childID == id) {\r\n                throw new Error(`\u8282\u70B9${id}\u4E0D\u80FD\u5305\u542B\u81EA\u5DF1`);\r\n            }\r\n            let childNode: RedPointNode;\r\n            if (this.__redPoints.has(childID)) {\r\n                childNode = this.__redPoints.get(childID);\r\n            } else {\r\n                childNode = this.__createNode(childID);\r\n            }\r\n            node.addChild(childNode);\r\n        }\r\n        this.__redPoints.set(id, node);\r\n        //\u8C03\u8BD5\u6A21\u5F0F\u4E0B\u68C0\u6D4B\u5FAA\u73AF\u5F15\u7528\r\n        if (DEBUG) {\r\n            let parents: Array<number> = [];\r\n            this.checkCircularReference(node, parents);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * \u521B\u5EFA\u53F6\u5B50\u8282\u70B9\r\n     * @param id \r\n     * @returns \r\n     */\r\n    private __createNode(id: number): RedPointNode {\r\n        let node = new RedPointNode(id);\r\n        this.__redPoints.set(id, node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * \u68C0\u6D4B\u5FAA\u73AF\u5F15\u7528\r\n     * @param node \r\n     * @param parents \r\n     */\r\n    checkCircularReference(node: RedPointNode, parents: Array<number>): void {\r\n        if (parents.indexOf(node.id) >= 0) {\r\n            throw new Error(`\u8282\u70B9${node.id}\u5B58\u5728\u5FAA\u73AF\u5F15\u7528`);\r\n        } else {\r\n            parents.push(node.id);\r\n            for (let index = 0; index < node.children.length; index++) {\r\n                const childNode = node.children[index];\r\n                if (childNode.children.length > 0) {\r\n                    this.checkCircularReference(childNode, parents);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7EA2\u70B9\u8282\u70B9\r\n     * @param id \r\n     * @returns \r\n     */\r\n    getNode(id: number): RedPointNode {\r\n        return this.__redPoints.get(id);\r\n    }\r\n\r\n    private static __instance: RedPoint;\r\n    static get single(): RedPoint {\r\n        if (this.__instance) {\r\n            this.__instance = new RedPoint();\r\n        }\r\n        return this.__instance;\r\n    }\r\n}", "import { Event } from \"../../events/Event\";\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\";\r\nimport { TickerManager } from \"../../ticker/TickerManager\";\r\n\r\n\r\n\r\n/**\r\n * \u7EA2\u70B9\u8282\u70B9\r\n */\r\nexport class RedPointNode extends EventDispatcher {\r\n\r\n    id: number;\r\n\r\n    parent: RedPointNode | null = null;\r\n\r\n    private __children: RedPointNode[];\r\n    private __isActive: boolean = false;\r\n\r\n    constructor(id: number) {\r\n        super();\r\n        this.id = id;\r\n        this.__children = [];\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u5B50\u8282\u70B9\r\n     * @param node \r\n     */\r\n    addChild(node: RedPointNode) {\r\n        this.__children = this.__children || [];\r\n        node.parent = this;\r\n        this.__children.push(node);\r\n        this.childrenChanged();\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u5B50\u8282\u70B9\r\n     * @param node\r\n     */\r\n    removeChild(node: RedPointNode) {\r\n        this.__children = this.__children || [];\r\n        node.parent = null;\r\n        const index = this.__children.indexOf(node);\r\n        if (index !== -1) {\r\n            this.__children.splice(index, 1);\r\n        }\r\n        this.childrenChanged();\r\n    }\r\n\r\n    get children(): RedPointNode[] {\r\n        return this.__children;\r\n    }\r\n\r\n    set isActive(value: boolean) {\r\n        this.__isActive = value;\r\n        // \u901A\u77E5\u7236\u8282\u70B9\r\n        if (this.parent) {\r\n            this.parent.childrenChanged();\r\n        }\r\n        this.emit(Event.UPDATE);\r\n    }\r\n\r\n    /**\r\n     * \u5B50\u8282\u70B9\u6539\u53D8\r\n     */\r\n    childrenChanged(): void {\r\n        TickerManager.callNextFrame(this.__childrenChanged, this);\r\n    }\r\n    \r\n    private __childrenChanged() {\r\n        let active = false;\r\n        for (let index = 0; index < this.__children.length; index++) {\r\n            const node = this.__children[index];\r\n            if (node.isActive) {\r\n                active = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isActive = active;\r\n    }\r\n\r\n    get isActive(): boolean {\r\n        return this.__isActive;\r\n    }\r\n}", "import { DEBUG } from \"cc/env\";\r\nimport { FuncNode } from \"./FuncNode\";\r\nimport { IFuncData } from \"./IFuncData\";\r\nimport { IFuncConfig } from \"./IFuncConfig\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n\r\n\r\n\r\n/**\r\n * \u529F\u80FD\u5F00\u653E\r\n */\r\nexport class Func extends EventDispatcher {\r\n\r\n    /**\r\n     * \u8282\u70B9\u68C0\u6D4B\u51FD\u6570\r\n     */\r\n    checkFunc: (value: FuncNode) => boolean = (value: FuncNode) => {\r\n        if (!value.server) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private __funcs = new Map<number, FuncNode>();\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     * @param configs \r\n     */\r\n    init(configs: Array<IFuncConfig>): void {\r\n        for (let index = 0; index < configs.length; index++) {\r\n            const config = configs[index];\r\n            let node = this.__createNode(config.id, config);\r\n            this.__funcs.set(config.id, node);\r\n        }\r\n        for (let index = 0; index < configs.length; index++) {\r\n            const config = configs[index];\r\n            if (config.id == config.parent) {\r\n                continue;\r\n            }\r\n            let node = this.__funcs.get(config.id);\r\n            let parent = this.__funcs.get(config.parent);\r\n            node.parent = parent;\r\n            parent.addChild(node);\r\n        }\r\n        //\u8C03\u8BD5\u6A21\u5F0F\u4E0B\u68C0\u6D4B\u5FAA\u73AF\u5F15\u7528\r\n        if (DEBUG) {\r\n            let parents: Array<number> = [];\r\n            for (let index = 0; index < configs.length; index++) {\r\n                const config = configs[index];\r\n                let node = this.__funcs.get(config.id);\r\n                parents.splice(0, parents.length);\r\n                this.__checkCircularReference(node, parents);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u66F4\u65B0\r\n     * @param server \r\n     */\r\n    update(server: IFuncData | Array<IFuncData>): void {\r\n        if (Array.isArray(server)) {\r\n            for (let index = 0; index < server.length; index++) {\r\n                const element = server[index];\r\n                this.__update(element);\r\n            }\r\n        } else {\r\n            this.__update(server);\r\n        }\r\n    }\r\n\r\n    private __update(server: IFuncData): void {\r\n        let node = this.__funcs.get(server.id);\r\n        node.update(server);\r\n        this.emit(Event.UPDATE, node);\r\n    }\r\n\r\n    /**\r\n     * \u68C0\u6D4B\u5FAA\u73AF\u5F15\u7528\r\n     * @param node \r\n     * @param parents \r\n     */\r\n    private __checkCircularReference(node: FuncNode, parents: Array<number>): void {\r\n        if (parents.indexOf(node.id) >= 0) {\r\n            throw new Error(`\u8282\u70B9${node.id}\u5B58\u5728\u5FAA\u73AF\u5F15\u7528`);\r\n        } else {\r\n            parents.push(node.id);\r\n            for (let index = 0; index < node.children.length; index++) {\r\n                const childNode = node.children[index];\r\n                this.__checkCircularReference(childNode, parents);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \u521B\u5EFA\u8282\u70B9\r\n     * @param id \r\n     * @param config \r\n     * @returns \r\n     */\r\n    private __createNode(id: number, config: any): FuncNode {\r\n        let result = new FuncNode(id);\r\n        result.config = config;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u529F\u80FD\u8282\u70B9\r\n     * @param id \r\n     */\r\n    getNode(id: number): FuncNode {\r\n        return this.__funcs.get(id);\r\n    }\r\n\r\n    private static __instance: Func;\r\n    static get single(): Func {\r\n        if (!this.__instance) {\r\n            this.__instance = new Func();\r\n        }\r\n        return this.__instance;\r\n    }\r\n}", "import { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Func } from \"./Func\";\r\nimport { IFuncConfig } from \"./IFuncConfig\";\r\nimport { IFuncData } from \"./IFuncData\";\r\n\r\n\r\n\r\n/**\r\n * \u529F\u80FD\u5F00\u653E\u53F6\u5B50\u8282\u70B9\r\n */\r\nexport class FuncNode extends EventDispatcher {\r\n\r\n    id: number;\r\n    parent: FuncNode;\r\n    config: IFuncConfig;\r\n    server: IFuncData;\r\n\r\n    private __isActive: boolean = false;\r\n    private __children: FuncNode[] = [];\r\n\r\n    constructor(id: number) {\r\n        super();\r\n        this.id = id;\r\n    }\r\n\r\n    addChild(node: FuncNode): void {\r\n        node.parent = this;\r\n        this.__children.push(node);\r\n    }\r\n\r\n    removeChild(node: FuncNode): void {\r\n        let index = this.__children.indexOf(node);\r\n        if (index > -1) {\r\n            this.__children.splice(index, 1);\r\n            node.parent = null;\r\n        }\r\n    }\r\n\r\n    get children(): FuncNode[] {\r\n        return this.__children;\r\n    }\r\n\r\n    update(server: IFuncData): void {\r\n        this.server = server;\r\n        let slefActive = Func.single.checkFunc(this);\r\n        if (!slefActive) {\r\n            this.isActive = false;\r\n            return;\r\n        }\r\n        let parent = this.parent;\r\n        while (parent) {\r\n            if (!parent.isActive) {\r\n                this.isActive = false;\r\n                break;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        this.isActive = true;\r\n        for (let index = 0; index < this.__children.length; index++) {\r\n            const child = this.__children[index];\r\n            child.update(child.server);\r\n        }\r\n    }\r\n\r\n    set isActive(value: boolean) {\r\n        if (this.__isActive == value) return;\r\n        this.__isActive = value;\r\n        this.emit(Event.UPDATE);\r\n    }\r\n\r\n    get isActive(): boolean {\r\n        return false;\r\n    }\r\n}", "import { Component } from \"cc\";\r\nimport { ConfigManager } from \"../configs/ConfigManager\";\r\nimport { IConfigAccessor } from \"../configs/IConfigAccessor\";\r\nimport { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { ResURL } from \"../res/ResURL\";\r\nimport { ModuleManager } from \"./ModuleManager\";\r\nimport { IEventDispatcher } from \"../events/IEventDispatcher\";\r\nimport { ResRequest } from \"../res/ResRequest\";\r\nimport { RedPoint } from \"../func/redPoint/RedPoint\";\r\n\r\n\r\n/**\r\n * \u6A21\u5757\u811A\u672C\u57FA\u7840\u7C7B(\u6A21\u5757\u811A\u672C\u5B50\u7C7B\u5FC5\u987B\u4F7F\u7528@ccclass('XXXModule'))\r\n */\r\nexport class Module extends Component implements IEventDispatcher {\r\n    /**\r\n     * \u6A21\u5757\u540D\u79F0\r\n     */\r\n    module_name: string;\r\n    /**\r\n     * \u5F15\u7528\u7684\u914D\u7F6E\u8868\r\n     */\r\n    configs: Array<string>\r\n    /**\r\n     * \u4F9D\u8D56\u7684\u8D44\u6E90\r\n     */\r\n    assets: Array<ResURL>;\r\n    /**\r\n     * \u4F9D\u8D56\u7684\u6A21\u5757\r\n     */\r\n    modules: Array<string>;\r\n    /**\r\n     * \u6C38\u4E0D\u5220\u9664\r\n     */\r\n    notReleased: boolean = false;\r\n\r\n    /**\r\n     * \u8D44\u6E90\u8BF7\u6C42\u5BF9\u8C61\r\n     */\r\n    resRequest: ResRequest | null = null;\r\n    /**\r\n     * \u662F\u5426\u521D\u59CB\u5316\u5B8C\u6BD5\r\n     */\r\n    protected $inited: boolean = false;\r\n    \r\n    private __moduleIndex: number = 0;\r\n    private __eventProxy: EventDispatcher;\r\n    //\u7EA2\u70B9\u68C0\u6D4B\u5668\u6CE8\u518C\u7EAA\u5F8B\r\n    private __redPoints: Map<number, () => boolean>;\r\n    constructor() {\r\n        super();\r\n        this.__eventProxy = new EventDispatcher(this);\r\n        this.__redPoints = new Map<number, () => boolean>();\r\n    }\r\n\r\n    /**\r\n     * \u524D\u7F6E\u521D\u59CB\u5316\r\n     */\r\n    preInit(): void {\r\n        if (this.modules && this.modules.length > 0) {\r\n            this.__moduleIndex = 0;\r\n            ModuleManager.single.load(this.modules, undefined, (err: Error) => {\r\n                if (err) {\r\n                    throw new Error(\"\u6A21\u5757\u521D\u59CB\u5316\u5931\u8D25:\" + err.message);\r\n                }\r\n                for (let index = 0; index < this.modules.length; index++) {\r\n                    const clazz = this.modules[index];\r\n                    const module = this.$getModule(clazz);\r\n                    const proxy = ModuleManager.single.getModuleProxy(clazz);\r\n                    //\u5F15\u7528\r\n                    proxy.addRef();\r\n                    if (module.$inited) {\r\n                        this.__moduleIndex++;\r\n                    } else {\r\n                        module.on(Event.COMPLETE, this.__otherModuleInitComplete, this);\r\n                    }\r\n                }\r\n                //\u5B8C\u6210\r\n                const total = this.modules ? this.modules.length : 0;\r\n                // console.log(this.name, this.__moduleIndex + \"/\" + total);\r\n                if (this.__moduleIndex > total) {\r\n                    this.init();\r\n                }\r\n                this.on(Event.COMPLETE, this.__otherModuleInitComplete, this);\r\n                this.selfInit();\r\n            }, true);\r\n        } else {\r\n            this.on(Event.COMPLETE, this.__otherModuleInitComplete, this);\r\n            this.selfInit();\r\n        }\r\n    }\r\n\r\n    private __otherModuleInitComplete(e: Event): void {\r\n        const module = e.target as Module;\r\n        module.off(Event.COMPLETE, this.__otherModuleInitComplete, this);\r\n        this.__moduleIndex++;\r\n        const total = this.modules ? this.modules.length : 0;\r\n        // console.log(this.name, this.__moduleIndex + \"/\" + total);\r\n        //\u5B8C\u6210\r\n        if (this.__moduleIndex > total) {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\u81EA\u8EAB\u521D\u59CB\u5316(\u5B50\u7C7B\u91CD\u5199\u5E76\u5728\u521D\u59CB\u5316\u5B8C\u6210\u540E\u8C03\u7528selfInitComplete) */\r\n    protected selfInit(): void {\r\n        this.selfInitComplete();\r\n    }\r\n\r\n    /**\r\n     * \u81EA\u8EAB\u521D\u59CB\u5316\u5B8C\u6210\r\n     */\r\n    protected selfInitComplete(): void {\r\n        this.$inited = true;\r\n        this.emit(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     */\r\n    init(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u914D\u7F6E\u5B58\u53D6\u5668\r\n     * @param config \r\n     * @returns \r\n     */\r\n    getConfigAccessor(config: string): IConfigAccessor {\r\n        return ConfigManager.getAccessor(config);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6A21\u5757\r\n     * @param module_name \r\n     * @returns \r\n     */\r\n    protected $getModule(module_name: string): Module {\r\n        if (!this.modules || this.modules.indexOf(module_name) < 0) {\r\n            throw new Error(\"\u6A21\u5757\u4E0D\u5B58\u5728:\" + module_name);\r\n        }\r\n        return ModuleManager.single.getModule(module_name)!;\r\n    }\r\n\r\n    /**\r\n     * \u6CE8\u518C\u7EA2\u70B9\u68C0\u6D4B\u5668\r\n     * @param id \r\n     * @param detector \r\n     */\r\n    registerRedPoint(id: number, detector: () => boolean): void {\r\n        this.__redPoints.set(id, detector);\r\n        RedPoint.single.register(id, detector);\r\n    }\r\n\r\n\r\n    destroy(): boolean {\r\n        //\u53D6\u6D88\r\n        this.configs = null;\r\n        //\u53D6\u6D88\u5BF9\u6A21\u5757\u7684\u5F15\u7528\r\n        if (this.modules && this.modules.length > 0) {\r\n            for (let index = 0; index < this.modules.length; index++) {\r\n                const element = this.modules[index];\r\n                ModuleManager.single.dispose(element);\r\n            }\r\n            this.modules = null;\r\n        }\r\n        this.notReleased = false;\r\n        this.assets = null;\r\n        if (this.resRequest) {\r\n            this.resRequest.dispose();\r\n            this.resRequest = null;\r\n        }\r\n        //\u7EA2\u70B9\r\n        for (const [key, _] of this.__redPoints) {\r\n            RedPoint.single.unregister(key);\r\n        }\r\n        this.__redPoints.clear();\r\n        this.__redPoints = null;\r\n\r\n        this.$inited = false;\r\n        this.__moduleIndex = 0;\r\n        return super.destroy();\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u662F\u5426\u5DF2\u521D\u59CB\u5316\r\n     */\r\n    get inited(): boolean {\r\n        return this.$inited;\r\n    }\r\n\r\n    //=========================IEventDispatcher\u63A5\u53E3\u5B9E\u73B0\r\n    on(key: number | string, handler: (e: Event) => void, caller: any, priority?: number): void {\r\n        this.__eventProxy.on(key, handler, caller, priority);\r\n    }\r\n    off(key: number | string, handler: (e: Event) => void, caller: any): void {\r\n        this.__eventProxy.off(key, handler, caller);\r\n    }\r\n    offByCaller(caller: any): void {\r\n        this.__eventProxy.offByCaller(caller);\r\n    }\r\n    offAllEvent(): void {\r\n        this.__eventProxy.offAllEvent();\r\n    }\r\n    emit(key: number | string, data?: any): void {\r\n        this.__eventProxy.emit(key, data);\r\n    }\r\n    hasEvent(key: number | string): boolean {\r\n        return this.__eventProxy.hasEvent(key);\r\n    }\r\n    hasEventHandler(key: number | string, handler: (e: Event) => void, caller: any): boolean {\r\n        return this.__eventProxy.hasEventHandler(key, handler, caller);\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { ITicker } from \"../ticker/ITicker\";\r\nimport { TickerManager } from \"../ticker/TickerManager\";\r\nimport { Timer } from \"../timer/Timer\";\r\nimport { Module } from \"./Module\";\r\nimport { ModuleProxy } from \"./ModuleProxy\";\r\nimport { ModuleRequest } from \"./ModuleRequest\";\r\nimport { Logger } from \"../loggers/Logger\";\r\n\r\n\r\n/**\r\n * \u6A21\u5757\u7BA1\u7406\u5668\r\n */\r\nexport class ModuleManager implements ITicker {\r\n    /**\r\n     * \u6A21\u5757\u8282\u70B9(\u7528\u4E8E\u52A0\u8F7D\u6A21\u5757)\r\n     */\r\n    node: Node = new Node(\"ModuleManager\");\r\n    /**\r\n     * \u6700\u5927\u542F\u52A8\u7EBF\u7A0B\r\n     */\r\n    static MAX_LOADER_THREAD: number = 5;\r\n    /**\r\n     * GC\u95F4\u9694\u65F6\u95F4\r\n     */\r\n    static GC_INTERVAL: number = 60;\r\n    /**\r\n     * \u5DF2\u52A0\u8F7D\u7684\u6A21\u5757\r\n     */\r\n    private __modules: Map<string, ModuleProxy>;\r\n    /**\r\n     * \u52A0\u8F7D\u6A21\u5757\u8BF7\u6C42\u5217\u8868\r\n     */\r\n    private __requests: Map<string, Array<ModuleRequest>>;\r\n    /**\r\n     * \u7B49\u5F85\u5220\u9664\u7684\u6A21\u5757\r\n     */\r\n    private __waitDeletes: Set<string>;\r\n\r\n    private __lastGCTime: number = 0;\r\n    constructor() {\r\n        this.__modules = new Map<string, ModuleProxy>();\r\n        this.__requests = new Map<string, Array<ModuleRequest>>();\r\n        this.__waitDeletes = new Set<string>();\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        let currentTime = Timer.currentTime;\r\n        if (currentTime - this.__lastGCTime > ModuleManager.GC_INTERVAL) {\r\n            for (const module_name of this.__waitDeletes) {\r\n                let proxy = this.getModuleProxy(module_name);\r\n                if (!proxy || !proxy.module || proxy.module.notReleased) continue;\r\n                if (proxy.refCount <= 0) {\r\n                    Logger.log(\"Module Destroy:\" + proxy.module.name, Logger.TYPE.Module);\r\n                    this.__modules.delete(module_name);\r\n                    proxy.destroy();\r\n                }\r\n            }\r\n            this.__waitDeletes.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u52A0\u8F7D\r\n     * @param modules \r\n     * @param progress \r\n     * @param callback \r\n     * @param isSub\r\n     */\r\n    load(modules: Array<string>, progress?: (progress: number) => void, callback?: (err: Error) => void, isSub?: boolean): void {\r\n        let request: ModuleRequest = new ModuleRequest(modules, progress, callback, isSub);\r\n        this.__addRequest(request);\r\n        request.load();\r\n    }\r\n\r\n    childComplete(module_name: string, proxy: ModuleProxy): void {\r\n        //\u4FDD\u5B58\r\n        this.__modules.set(module_name, proxy);\r\n        //\u901A\u77E5\r\n        let list = this.__requests.get(module_name);\r\n        for (let index = 0; index < list.length; index++) {\r\n            const request = list[index];\r\n            request.childComplete(module_name);\r\n        }\r\n        list.length = 0;\r\n        this.__requests.delete(module_name);\r\n    }\r\n\r\n    childError(module_name: string, err: Error): void {\r\n        let list = this.__requests.get(module_name);\r\n        for (let index = 0; index < list.length; index++) {\r\n            const request = list[index];\r\n            request.childError(module_name, err);\r\n        }\r\n        //\u590D\u5236\r\n        let clist = list.concat();\r\n        //\u6E05\u9664\u6389\u5173\u8054\u7684\u6240\u6709\u8D44\u6E90\u8BF7\u6C42\r\n        for (let index = 0; index < clist.length; index++) {\r\n            const request = clist[index];\r\n            this.__removeRequest(request);\r\n            //\u9500\u6BC1\r\n            request.destroy();\r\n        }\r\n    }\r\n\r\n    childProgress(module_name: string, progress: number): void {\r\n        let list = this.__requests.get(module_name);\r\n        for (let index = 0; index < list.length; index++) {\r\n            const request = list[index];\r\n            request.childProgress(module_name, progress);\r\n        }\r\n    }\r\n\r\n    private __addRequest(request: ModuleRequest): void {\r\n        let list: Array<ModuleRequest>;\r\n        for (let index = 0; index < request.modules.length; index++) {\r\n            const module = request.modules[index];\r\n            if (!this.__requests.has(module)) {\r\n                list = [];\r\n                this.__requests.set(module, list);\r\n            } else {\r\n                list = this.__requests.get(module);\r\n            }\r\n            list.push(request);\r\n        }\r\n    }\r\n\r\n    private __removeRequest(request: ModuleRequest): void {\r\n        let list: Array<ModuleRequest>;\r\n        let findex: number = 0;\r\n        //\u904D\u5386\u5F53\u524D\u8BF7\u6C42\u7684\u6240\u6709\r\n        for (let index = 0; index < request.modules.length; index++) {\r\n            const module = request.modules[index];\r\n            //\u4ECE\u5217\u8868\u4E2D\u627E\u51FA\u5E76\u5220\u9664\r\n            list = this.__requests.get(module);\r\n            findex = list.indexOf(request);\r\n            if (findex >= 0) {\r\n                list.splice(findex, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u4EE3\u7406(\u5185\u90E8\u63A5\u53E3\uFF0C\u8BF7\u52FF\u4F7F\u7528)\r\n     * @param module_name \r\n     * @returns \r\n     */\r\n    getModuleProxy(module_name: string): ModuleProxy {\r\n        if (!this.__modules.has(module_name)) {\r\n            return null;\r\n        }\r\n        return this.__modules.get(module_name);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u670D\u52A1(\u5185\u90E8\u63A5\u53E3\uFF0C\u8BF7\u52FF\u4F7F\u7528)\r\n     * @param module_name \r\n     */\r\n    getModule(module_name: string): Module | undefined {\r\n        let proxy = this.getModuleProxy(module_name);\r\n        if (!proxy) {\r\n            return undefined;\r\n        }\r\n        return proxy.module;\r\n    }\r\n\r\n    /**\r\n     * \u5C1D\u8BD5\u9500\u6BC1\u670D\u52A1\r\n     * @param clazz\r\n     */\r\n    dispose(module_name: string): void {\r\n        let proxy = this.__modules.get(module_name);\r\n        proxy.removeRef();\r\n        this.__waitDeletes.add(module_name);\r\n    }\r\n\r\n    private static __instance: ModuleManager;\r\n    static get single(): ModuleManager {\r\n        if (!this.__instance) {\r\n            this.__instance = new ModuleManager();\r\n        }\r\n        return this.__instance;\r\n    }\r\n}", "import { AssetManager, assetManager } from \"cc\";\r\nimport { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Res } from \"../res/Res\";\r\nimport { ResURL } from \"../res/ResURL\";\r\nimport { Module } from \"./Module\";\r\nimport { ModuleManager } from \"./ModuleManager\";\r\nimport { ModuleProxy } from \"./ModuleProxy\";\r\nimport { ResRequest } from \"../res/ResRequest\";\r\nimport { Logger } from \"../loggers/Logger\";\r\n\r\n\r\n\r\n/**\r\n * \u6A21\u5757\u52A0\u8F7D\u5668\r\n */\r\nexport class ModuleLoader extends EventDispatcher {\r\n\r\n    /**\r\n     * \u6A21\u5757\u540D\u79F0\r\n     */\r\n    module_name: string;\r\n    /**\r\n     * \u6A21\u5757\u5B9E\u4F8B\r\n     */\r\n    module: Module;\r\n    /**\r\n     * \u8D44\u6E90\u8BF7\u6C42\u5BF9\u8C61\r\n     */\r\n    resRequest: ResRequest | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    load(module_name: string): void {\r\n        this.module_name = module_name;\r\n        //\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\r\n        let module = ModuleManager.single.node.getComponent(\"Module_\" + this.module_name);\r\n        if (module) {\r\n            if (!(module instanceof Module)) {\r\n                throw new Error(\"\u6A21\u5757Module_\" + this.module_name + \"\u5FC5\u987B\u7EE7\u627FModule\u7C7B\");\r\n            }\r\n            this.module = module as Module;\r\n            this.__initModule();\r\n        } else {\r\n            Logger.log(\"Start Load Module:\" + this.module_name);\r\n            let bundle = assetManager.getBundle(module_name);\r\n            if (!bundle) {\r\n                assetManager.loadBundle(module_name, this.__bundleLoaded.bind(this));\r\n            } else {\r\n                this.__bundleLoaded(null, bundle);\r\n            }\r\n        }\r\n    }\r\n\r\n    private __bundleLoaded(err: Error, bundle: AssetManager.Bundle): void {\r\n        if (err) {\r\n            this.emit(Event.ERROR, this.module_name, new Error(\"AssetBundle:\" + this.module_name + \"\u4E0D\u5B58\u5728\uFF01\"));\r\n            return;\r\n        }\r\n        try {\r\n            this.module = ModuleManager.single.node.addComponent(\"Module_\" + this.module_name) as Module;\r\n        } catch (error) {\r\n            throw new Error(\"\u6A21\u5757Module_\" + this.module_name + \"\u521D\u59CB\u5316\u62A5\u9519:\" + error);\r\n        }\r\n        this.module.module_name = this.module_name;\r\n        if (!this.module) {\r\n            throw new Error(\"\u6A21\u5757\u7C7BModule_\" + this.module_name + \"\u4E0D\u5B58\u5728\uFF01\");\r\n        }\r\n        if (!(this.module instanceof Module)) {\r\n            throw new Error(\"\u6A21\u5757Module_\" + this.module_name + \"\u5FC5\u987B\u7EE7\u627FModule\u7C7B\");\r\n        }\r\n        try {\r\n            this.__initModule();\r\n        } catch (error) {\r\n            Logger.error(\"Load Module Error:\" + this.module_name);\r\n        }\r\n    }\r\n\r\n    private __initModule(): void {\r\n        //\u914D\u7F6E\u8868\r\n        let urls: Array<ResURL> = [];\r\n        if (this.module.configs && this.module.configs.length > 0) {\r\n            for (let index = 0; index < this.module.configs.length; index++) {\r\n                const sheet_name = this.module.configs[index];\r\n                const url = Res.sheet2URL(sheet_name);\r\n                urls.push(url);\r\n            }\r\n        }\r\n        //\u5F15\u7528\u7684\u8D44\u6E90\r\n        if (this.module.assets && this.module.assets.length > 0) {\r\n            for (let index = 0; index < this.module.assets.length; index++) {\r\n                const element = this.module.assets[index];\r\n                urls.push(element);\r\n            }\r\n        }\r\n        if (urls.length > 0) {\r\n            //\u52A0\u8F7D\r\n            this.resRequest = Res.create(\r\n                urls,\r\n                this.module.name,\r\n                (progress: number) => {\r\n                    this.emit(Event.PROGRESS, this.module_name, undefined, progress * 0.7);\r\n                },\r\n                (err?: Error) => {\r\n                    if (err) {\r\n                        this.resRequest.dispose();\r\n                        this.resRequest = null;\r\n                        this.emit(Event.ERROR, this.module_name, err)\r\n                        return;\r\n                    }\r\n                    this.__assetReady();\r\n                }\r\n            );\r\n            this.resRequest.load();\r\n        } else {\r\n            this.__assetReady();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u4F9D\u8D56\u7684\u914D\u7F6E\u4E0E\u8D44\u6E90\u51C6\u5907\u5B8C\u6BD5\r\n     */\r\n    protected __assetReady(): void {\r\n        this.module.resRequest = this.resRequest;\r\n        this.module.preInit();\r\n        let proxy = new ModuleProxy(this.module);\r\n        this.emit(Event.COMPLETE, { module: this.module_name, proxy });\r\n    }\r\n\r\n    reset(): void {\r\n        this.module_name = null;\r\n        this.module = null;\r\n    }\r\n}", "import { Module } from \"./Module\";\r\n\r\n\r\n\r\nexport class ModuleProxy{\r\n\r\n    module: Module;\r\n    /**\r\n     * \u5F15\u7528\u8BA1\u6570\u5668\r\n     */\r\n    refCount: number = 0;\r\n\r\n    constructor(module: Module) {\r\n        this.module = module;\r\n        this.refCount = 0;\r\n    }\r\n\r\n    addRef(): void {\r\n        this.refCount++;\r\n    }\r\n\r\n    removeRef(): void {\r\n        this.refCount--;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.module.destroy();\r\n        this.module = null;\r\n        return true;\r\n    }\r\n}", "import { Dictionary } from \"../datas/Dictionary\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Pool } from \"../pools/Pool\";\r\nimport { TickerManager } from \"../ticker/TickerManager\";\r\nimport { ModuleLoader } from \"./ModuleLoader\";\r\nimport { ModuleManager } from \"./ModuleManager\";\r\n\r\n\r\n\r\n/**\r\n * \u6A21\u5757\u52A0\u8F7D\u961F\u5217\r\n */\r\nexport class ModuleQueue {\r\n\r\n    /**\r\n     * \u6B63\u5728\u52A0\u8F7D\u7684\u6A21\u5757\r\n     */\r\n    private running: Dictionary<string, ModuleLoader> = new Dictionary<string, ModuleLoader>();\r\n    /**\r\n     * \u7B49\u5F85\u52A0\u8F7D\u7684\u6A21\u5757\r\n     */\r\n    private waiting: Array<string> = [];\r\n\r\n    constructor() {\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    load(module_name: string, isSub: boolean): void {\r\n        if (this.running.has(module_name)) {\r\n            return;\r\n        }\r\n        let idx = this.waiting.indexOf(module_name)\r\n        if (isSub && idx >= 0) {\r\n            this.waiting.splice(idx, 1);\r\n            this.__startLoad(module_name);\r\n            return;\r\n        }\r\n        //\u5DF2\u7ECF\u5728\u7B49\u5F85\u5217\u8868\u4E2D\r\n        if (idx >= 0) {\r\n            return;\r\n        }\r\n        this.waiting.push(module_name);\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        while (this.running.size < ModuleManager.MAX_LOADER_THREAD && this.waiting.length > 0) {\r\n            const module = this.waiting.shift();\r\n            this.__startLoad(module);\r\n        }\r\n    }\r\n\r\n    private __startLoad(module_name: string): void {\r\n        let loader: ModuleLoader = Pool.acquire(ModuleLoader);\r\n        this.running.set(module_name, loader);\r\n        this.__addEvent(loader);\r\n        loader.load(module_name);\r\n    }\r\n\r\n    private __addEvent(target: ModuleLoader): void {\r\n        target.on(Event.COMPLETE, this.__eventHandler, this);\r\n        target.on(Event.ERROR, this.__eventHandler, this);\r\n        target.on(Event.PROGRESS, this.__eventHandler, this);\r\n    }\r\n\r\n    private __eventHandler(evt: Event): void {\r\n        let target: ModuleLoader = evt.target as ModuleLoader;\r\n        if (evt.type == Event.PROGRESS) {\r\n            ModuleManager.single.childProgress(evt.data, evt.progress);\r\n            return;\r\n        }\r\n        target.offAllEvent();\r\n        if (evt.type == Event.ERROR) {\r\n            this.running.delete(evt.data);\r\n            ModuleManager.single.childError(evt.data, evt.error);\r\n            return;\r\n        }\r\n        if (evt.type == Event.COMPLETE) {\r\n            this.running.delete(evt.data.module);\r\n            ModuleManager.single.childComplete(evt.data.module, evt.data.proxy);\r\n            target.reset();\r\n            Pool.release(ModuleLoader, target);\r\n        }\r\n    }\r\n\r\n    private static instance: ModuleQueue;\r\n    static get single(): ModuleQueue {\r\n        if (this.instance == null) {\r\n            this.instance = new ModuleQueue();\r\n        }\r\n        return this.instance;\r\n    }\r\n}", "import { ModuleManager } from \"./ModuleManager\";\r\nimport { ModuleQueue } from \"./ModuleQueue\";\r\n\r\n\r\n\r\n\r\nexport class ModuleRequest {\r\n    /**\r\n     * \u662F\u5426\u662F\u5B50\u670D\u52A1(\u5B50\u670D\u52A1\u5728\u52A0\u8F7D\u65F6\u4E0D\u5360\u7528\u52A0\u8F7D\u7EBF\u7A0B)\r\n     */\r\n    isSub: boolean = false;\r\n    modules: Array<string>;\r\n    private __progress: (progress: number) => void;\r\n    private __callback: (err: Error) => void;\r\n    private __loadedMap: Map<string, number>;\r\n\r\n    constructor(modules: Array<string>, progress?: (progress: number) => void, callback?: (err: Error) => void, isSub?: boolean) {\r\n        this.__loadedMap = new Map<string, number>();\r\n        this.isSub = isSub;\r\n        this.modules = modules;\r\n        this.__progress = progress;\r\n        this.__callback = callback;\r\n    }\r\n\r\n    load(): void {\r\n        this.__loadedMap.clear();\r\n        let isLoading: boolean = false;\r\n        for (let index = 0; index < this.modules.length; index++) {\r\n            const module_name = this.modules[index];\r\n            const module = ModuleManager.single.getModule(module_name);\r\n            if (module) {\r\n                this.__loadedMap.set(module_name, 1);\r\n            } else {\r\n                isLoading = true;\r\n                ModuleQueue.single.load(module_name, this.isSub);\r\n            }\r\n        }\r\n        if (!isLoading) {\r\n            this.__checkComplete();\r\n        }\r\n    }\r\n\r\n    childComplete(module_name: string): void {\r\n        this.__loadedMap.set(module_name, 1);\r\n        this.__checkComplete();\r\n    }\r\n\r\n    childError(module_name: string, err: Error): void {\r\n        if (this.__callback) {\r\n            this.__callback(err);\r\n        }\r\n    }\r\n\r\n    childProgress(module_name: string, progress: number): void {\r\n        this.__loadedMap.set(module_name, progress);\r\n        let totalProgress: number = this.loaded / this.modules.length;\r\n        if (this.__progress) {\r\n            this.__progress(totalProgress);\r\n        }\r\n    }\r\n\r\n    private __checkComplete(): void {\r\n        let progress: number = this.loaded / this.modules.length;\r\n        if (this.__progress) {\r\n            this.__progress(progress);\r\n        }\r\n        //\u5B8C\u6210\r\n        if (progress == 1 && this.__callback != null) {\r\n            this.__callback(null);\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    private get loaded(): number {\r\n        let loaded: number = 0;\r\n        for (let value of this.__loadedMap.values()) {\r\n            loaded += value;\r\n        }\r\n        return loaded;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.modules = null;\r\n        this.__progress = null;\r\n        this.__callback = null;\r\n    }\r\n}", "import { Logger } from \"../../loggers/Logger\";\r\n\r\n/**\r\n * http\r\n */\r\nexport class Http {\r\n\r\n    /**\r\n     * get\u8BF7\u6C42\r\n     * @param url \r\n     * @param param \r\n     * @param callback \r\n     * @param setRequestHeader \r\n     */\r\n    static get(url: string, param: Object, callback: (err?: Error, data?: any) => void, setRequestHeader?: (v: XMLHttpRequest) => void): void {\r\n        this.http(url, \"get\", param, callback, setRequestHeader);\r\n    }\r\n\r\n    /**\r\n     * post \u8BF7\u6C42\r\n     * @param url \r\n     * @param param \r\n     * @param callback \r\n     * @param setRequestHeader\r\n     */\r\n    static post(url: string, param: Object, callback: (err?: Error, data?: any) => void, setRequestHeader?: (v: XMLHttpRequest) => void): void {\r\n        this.http(url, \"post\", param, callback, setRequestHeader);\r\n    }\r\n\r\n    private static http(url: string, method: string, param: object, callback: (err?: Error, data?: any) => void, setRequestHeader?: (v: XMLHttpRequest) => void): void {\r\n        if (param) {\r\n            let s = \"?\";\r\n            for (let key in param) {\r\n                let p = this.isValidKey(key, param);\r\n                url += `${s}${key}=${p}`;\r\n                s = '&';\r\n            }\r\n        }\r\n        Logger.log(`http send:${url}`, Logger.TYPE.NET);\r\n        let request = new XMLHttpRequest();\r\n        if (method == \"get\") {\r\n            request.open(\"get\", url, true);\r\n        } else {\r\n            request.open(\"post\", url);\r\n        }\r\n        //\u8BF7\u6C42\u5934\u4FE1\u606F\u8BBE\u7F6E\r\n        if (setRequestHeader != null) {\r\n            setRequestHeader(request);\r\n        } else {\r\n            this.setRequestHeader(request);\r\n        }\r\n        request.onreadystatechange = () => {\r\n            console.log(\"url : \" + request.responseURL);\r\n            if (request.readyState == 4) {\r\n                let status = request.status;\r\n                let txt = request.responseText;\r\n                if (status >= 200 && status < 300) {\r\n                    Logger.log(`url:(${url}) result:${txt})`, Logger.TYPE.NET);\r\n                    callback(undefined, txt);\r\n                } else {\r\n                    Logger.log(`url:(${url}) request error. status:(${request.status})`, Logger.TYPE.NET);\r\n                    callback(new Error(`Http:${method}\u5931\u8D25:${url}`));\r\n                }\r\n            }\r\n        };\r\n        request.send();\r\n    }\r\n\r\n    private static isValidKey(key: string | number | symbol, object: object): key is keyof typeof object {\r\n        return key in object;\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6Ehttp\u5934\r\n     * @param request XMLHttpRequest\r\n     */\r\n    private static setRequestHeader(request: XMLHttpRequest): void {\r\n        request.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8;application/x-www-form-urlencoded;application/json;charset=UTF-8\");\r\n        request.setRequestHeader(\"Cache-Control\", \"no-store\");\r\n    }\r\n}", "import { IProtocol } from \"./IProtocol\";\r\nimport { ISocket } from \"./ISocket\";\r\nimport { ISocketManager } from \"./ISocketManager\";\r\nimport { Socket } from \"./Socket\";\r\n\r\n\r\n\r\n\r\nexport class SocketManagerImpl implements ISocketManager {\r\n\r\n    private __socketMap: Map<string, ISocket> = new Map<string, ISocket>();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n\r\n    initSocket(protocal: IProtocol, name?: string): ISocket {\r\n        if (this.__socketMap.has(name)) {\r\n            throw new Error(`socket ${name} is exist`);\r\n        }\r\n        if (protocal == null) {\r\n            throw new Error(\"protocal is null\");\r\n        }\r\n        let socket: ISocket = new Socket(protocal);\r\n        socket.name = name;\r\n        this.__socketMap.set(name, socket);\r\n        return socket;\r\n    }\r\n\r\n    /**\r\n     * socket\u662F\u5426\u5B58\u5728\r\n     * @param name \r\n     * @returns \r\n     */\r\n    hasSocket(name: string): boolean {\r\n        return this.__socketMap.has(name);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6307\u5B9A\u7C7B\u578B\u7684\u957F\u94FE\u63A5\r\n     * @param name \r\n     */\r\n    getSocket(name: string): ISocket {\r\n        if (!this.__socketMap.has(name)) {\r\n            throw new Error(`socket ${name} is not exist`);\r\n        }\r\n        return this.__socketMap.get(name);\r\n    }\r\n}", "import { Injector } from \"../../utils/Injector\";\r\nimport { IProtocol } from \"./IProtocol\";\r\nimport { ISocket } from \"./ISocket\";\r\nimport { ISocketManager } from \"./ISocketManager\";\r\nimport { SocketManagerImpl } from \"./SocketManagerImpl\";\r\n\r\n\r\nenum EventType {\r\n    SOCKET_CONNECTED = \"SOCKET_CONNECTED\",\r\n    SOCKET_ERROR = \"SOCKET_ERROR\",\r\n    SOCKET_CLOSE = \"SOCKET_CLOSE\",\r\n}\r\n\r\n/**\r\n * \u957F\u8FDE\u63A5\u7BA1\u7406\u5668\r\n */\r\nexport class SocketManager {\r\n\r\n    static KEY: string = \"SocketManager\";\r\n\r\n    /**\r\n     * sokcet\u4E8B\u4EF6\u7C7B\u578B\u679A\u4E3E\r\n     */\r\n    static EventType: typeof EventType = EventType;\r\n\r\n    private static __default_socket: string = \"GameSocket\";\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u9ED8\u8BA4socket\r\n     * @param type \r\n     */\r\n    static setDefaultSocket(type: string) {\r\n        this.__default_socket = type;\r\n    }\r\n\r\n    /**\r\n     * socket\u662F\u5426\u5B58\u5728\r\n     * @param name \r\n     * @returns \r\n     */\r\n    static hasSocket(name: string): boolean {\r\n        return this.impl.hasSocket(name);\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316socket\r\n     * @param name \r\n     * @param protocal \r\n     * @returns \r\n     */\r\n    static initSocket(protocal: IProtocol, name?: string): ISocket {\r\n        if (name == undefined) {\r\n            name = this.__default_socket;\r\n        }\r\n        if (name == undefined) {\r\n            throw new Error(\"\u8BF7\u5148\u8BBE\u7F6E\u9ED8\u8BA4socket\u7C7B\u578B\");\r\n        }\r\n        return this.impl.initSocket(protocal,name);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6307\u5B9A\u7C7B\u578B\u7684\u957F\u94FE\u63A5\r\n     * @param name \r\n     * @returns \r\n     */\r\n    static getSocket(name?: string): ISocket {\r\n        if (name == undefined) {\r\n            name = this.__default_socket;\r\n        }\r\n        if (name == undefined) {\r\n            throw new Error(\"\u8BF7\u5148\u8BBE\u7F6E\u9ED8\u8BA4socket\u7C7B\u578B\");\r\n        }\r\n        return this.impl.getSocket(name);\r\n    }\r\n\r\n    private static __impl: ISocketManager;\r\n    private static get impl(): ISocketManager {\r\n        if (this.__impl == null) {\r\n            this.__impl = Injector.getInject(this.KEY);\r\n        }\r\n        if (this.__impl == null) {\r\n            this.__impl = new SocketManagerImpl();\r\n        }\r\n        return this.__impl;\r\n    }\r\n}", "import { EventDispatcher } from \"../../events/EventDispatcher\";\r\nimport { Logger } from \"../../loggers/Logger\";\r\nimport { IProtocol } from \"./IProtocol\";\r\nimport { ISocket } from \"./ISocket\";\r\nimport { SocketManager } from \"./SocketManager\";\r\n\r\n\r\nexport class Socket extends EventDispatcher implements ISocket {\r\n    /**\u540D\u79F0 */\r\n    name: string;\r\n    /**\r\n     * \u6700\u5927\u5141\u8BB8\u9519\u8BEF\u6B21\u6570\r\n     */\r\n    static MAX_ERROR_COUNT: number = 3;\r\n    /**\r\n     * \u5F53\u524D\u9519\u8BEF\u6B21\u6570\r\n     */\r\n    private error_count: number = 0;\r\n\r\n    private is_conected: boolean = false;\r\n\r\n    web_socket: WebSocket;\r\n    message_protocol: IProtocol;\r\n    /**\r\n     * \u7F13\u5B58\u7684\u672A\u5904\u7406\u6D88\u606F\r\n     */\r\n    private cache_msgs: Map<number | string, any>;\r\n    constructor(message_parser: IProtocol) {\r\n        super();\r\n        if (message_parser == null) throw new Error(\"message_parser is null\");\r\n        this.cache_msgs = new Map();\r\n        this.message_protocol = message_parser;\r\n        this.message_protocol.parse_callback = this.onMessageParseCallback.bind(this);\r\n    }\r\n\r\n    getCacheMsg(code: number | string): any {\r\n        if (!this.cache_msgs.has(code)) return null;\r\n        let msg = this.cache_msgs.get(code);\r\n        this.cache_msgs.delete(code);\r\n        return msg;\r\n    }\r\n\r\n    isConected(): boolean {\r\n        return this.is_conected;\r\n    }\r\n\r\n    /**\r\n     * \u94FE\u63A5\r\n     * @param url \r\n     * @param binaryType \r\n     */\r\n    connect(url: string, binaryType: BinaryType = \"arraybuffer\"): void {\r\n        this.web_socket = new WebSocket(url,);\r\n        this.web_socket.binaryType = binaryType;\r\n        this.web_socket.onclose = this.onclose.bind(this);\r\n        this.web_socket.onerror = this.onerror.bind(this);\r\n        this.web_socket.onopen = this.onopen.bind(this);\r\n        this.web_socket.onmessage = this.onmessage.bind(this);\r\n        this.error_count = 0;\r\n    }\r\n\r\n    /**\r\n     * \u91CD\u65B0\u94FE\u63A5\r\n     * @returns \r\n     */\r\n    reconnect(): void {\r\n        const readyState = this.web_socket.readyState;\r\n        if (readyState == WebSocket.CONNECTING || readyState == WebSocket.OPEN) return;\r\n        //\u5173\u95ED\u4E4B\u524D\u7684\u94FE\u63A5\u5BF9\u8C61\r\n        if (this.web_socket) {\r\n            this.web_socket.close();\r\n            this.web_socket.onclose = null;\r\n            this.web_socket.onerror = null;\r\n            this.web_socket.onopen = null;\r\n            this.web_socket.onmessage = null;\r\n        }\r\n        this.web_socket = new WebSocket(this.web_socket.url);\r\n        this.web_socket.onclose = this.onclose.bind(this);\r\n        this.web_socket.onerror = this.onerror.bind(this);\r\n        this.web_socket.onopen = this.onopen.bind(this);\r\n        this.web_socket.onmessage = this.onmessage.bind(this);\r\n    }\r\n\r\n    /**\r\n     * \u5173\u95ED\r\n     */\r\n    close(): void {\r\n        this.web_socket.close();\r\n        this.is_conected = false;\r\n    }\r\n\r\n    private onopen(e: Event): void {\r\n        this.is_conected = true;\r\n        this.emit(SocketManager.EventType.SOCKET_CONNECTED);\r\n    }\r\n\r\n    /**\r\n     * \u53D1\u9001\u534F\u8BAE\r\n     * @param code \r\n     * @param data \r\n     */\r\n    send(code: number | string, data: any): void {\r\n        Logger.log(\"[\" + this.name + \"]\" + \"[C2S]\" + code + \"  =>\" + JSON.stringify(data), Logger.TYPE.NET);\r\n        this.web_socket.send(this.message_protocol.encode(code, data));\r\n    }\r\n\r\n    private onmessage(e: MessageEvent): void {\r\n        this.message_protocol.decode(e.data as ArrayBuffer);\r\n    }\r\n\r\n    private onMessageParseCallback(code: number | string, data: any): void {\r\n        Logger.log(\"[\" + this.name + \"]\" + \"[S2C]\" + code + \"    <=\" + JSON.stringify(data), Logger.TYPE.NET);\r\n        //\u6709\u4EBA\u76D1\u542C\u4E86\u8BE5\u6D88\u606F\r\n        if (this.hasEvent(code)) {\r\n            this.emit(code, data);\r\n        } else {\r\n            //\u7F13\u5B58\u8BE5\u6D88\u606F\r\n            console.log(this.name + \" \u68C0\u6D4B\u5230\u672A\u5904\u7406\u6D88\u606F:\" + code + \",\u5185\u90E8\u5C06\u7F13\u5B58\u8BE5\u6D88\u606F\");\r\n            this.cache_msgs.set(code, data);\r\n        }\r\n    }\r\n\r\n    private onclose(e: CloseEvent): void {\r\n        this.emit(SocketManager.EventType.SOCKET_CLOSE);\r\n    }\r\n\r\n    private onerror(e: Event): void {\r\n        this.is_conected = false;\r\n        this.error_count++;\r\n        if (this.error_count < Socket.MAX_ERROR_COUNT) {\r\n            this.reconnect();\r\n        } else {\r\n            this.emit(SocketManager.EventType.SOCKET_ERROR, null, new Error(this.name + \" socket \u94FE\u63A5\u9519\u8BEF!\"));\r\n        }\r\n    }\r\n}", "import { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { ITask } from \"./ITask\";\r\n\r\n\r\n/**\r\n * \u4EFB\u52A1\r\n */\r\nexport class Task extends EventDispatcher implements ITask {\r\n\r\n    /**\r\n     * \u5F00\u59CB\r\n     * @param data \r\n     */\r\n    start(data?: any): void {\r\n\r\n    }\r\n\r\n    addEventHandler(handler: (e: Event) => void, caller: any): void {\r\n        this.on(Event.PROGRESS, handler, caller);\r\n        this.on(Event.COMPLETE, handler, caller);\r\n        this.on(Event.ERROR, handler, caller);\r\n    }\r\n\r\n    removeEventHandler(handler: (e: Event) => void, caller: any): void {\r\n        this.off(Event.PROGRESS, handler, caller);\r\n        this.off(Event.COMPLETE, handler, caller);\r\n        this.off(Event.ERROR, handler, caller);\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6BC1\r\n     */\r\n    destroy(): boolean {\r\n        this.offAllEvent();\r\n        return super.destroy();\r\n    }\r\n}", "import { Event } from \"../events/Event\";\r\nimport { ITask } from \"./ITask\";\r\nimport { Task } from \"./Task\";\r\n\r\n\r\n/**\r\n * \u4EFB\u52A1\u961F\u5217\r\n */\r\nexport class TaskQueue extends Task {\r\n\r\n    private __taskList: Array<ITask>;\r\n    private __index: number = 0;\r\n    private __data: any;\r\n    constructor() {\r\n        super();\r\n        this.__taskList = [];\r\n    }\r\n\r\n    addTask(value: ITask | Array<ITask>): void {\r\n        if (Array.isArray(value)) {\r\n            for (let index = 0; index < value.length; index++) {\r\n                const element = value[index];\r\n                this.__addTask(element);\r\n            }\r\n        } else {\r\n            this.__addTask(value);\r\n        }\r\n    }\r\n\r\n    private __addTask(value: ITask): void {\r\n        if (this.__taskList.indexOf(value) >= 0) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\uFF01\");\r\n        }\r\n        this.__taskList.push(value);\r\n    }\r\n\r\n    removeTask(value: ITask): void {\r\n        let index: number = this.__taskList.indexOf(value);\r\n        if (index < 0) {\r\n            throw new Error(\"\u672A\u627E\u5230\u8981\u5220\u9664\u7684\u5185\u5BB9\uFF01\");\r\n        }\r\n        this.__taskList.splice(index, 1);\r\n    }\r\n\r\n    start(data?: any): void {\r\n        this.__data = data;\r\n        this.__index = 0;\r\n        this.__tryNext();\r\n    }\r\n\r\n    private __tryNext(): void {\r\n        if (this.__index < this.__taskList.length) {\r\n            let task: ITask = this.__taskList[this.__index];\r\n            task.on(Event.COMPLETE, this.__subTaskEventHandler, this);\r\n            task.on(Event.PROGRESS, this.__subTaskEventHandler, this);\r\n            task.on(Event.ERROR, this.__subTaskEventHandler, this);\r\n            task.start(this.__data);\r\n        } else {\r\n            //\u7ED3\u675F\r\n            this.emit(Event.COMPLETE);\r\n        }\r\n    }\r\n\r\n    private __subTaskEventHandler(e: Event): void {\r\n        if (e.type == Event.PROGRESS) {\r\n            let progress: number = (this.__index + e.progress) / this.__taskList.length;\r\n            this.emit(Event.PROGRESS, progress);\r\n            return;\r\n        }\r\n        e.target.offAllEvent();\r\n        if (e.type == Event.ERROR) {\r\n            this.emit(Event.ERROR, e.error);\r\n            return;\r\n        }\r\n        e.target.destroy();\r\n        this.__index++;\r\n        this.__tryNext();\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.__taskList.length = 0;\r\n        this.__index = 0;\r\n        return super.destroy();\r\n    }\r\n}", "import { Event } from \"../events/Event\";\r\nimport { ITask } from \"./ITask\";\r\nimport { Task } from \"./Task\";\r\n\r\n\r\n/**\r\n * \u4EFB\u52A1\u5E8F\u5217\uFF08\u5E76\u884C\uFF09\r\n */\r\nexport class TaskSequence extends Task {\r\n\r\n    private __taskList: Array<ITask> = new Array<ITask>();\r\n    private __index: number = 0;\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    addTask(value: ITask): void {\r\n        if (this.__taskList.indexOf(value) >= 0) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\uFF01\");\r\n        }\r\n        this.__taskList.push(value);\r\n    }\r\n\r\n    removeTask(value: ITask): void {\r\n        let index: number = this.__taskList.indexOf(value);\r\n        if (index < 0) {\r\n            throw new Error(\"\u627E\u4E0D\u5230\u8981\u5220\u9664\u7684\u5185\u5BB9!\");\r\n        }\r\n        this.__taskList.splice(index, 1);\r\n    }\r\n\r\n    start(data?: any): void {\r\n        for (let index = 0; index < this.__taskList.length; index++) {\r\n            const element = this.__taskList[index];\r\n            element.on(Event.COMPLETE, this.__subTaskEventHandler, this);\r\n            element.on(Event.ERROR, this.__subTaskEventHandler, this);\r\n            element.on(Event.PROGRESS, this.__subTaskEventHandler, this);\r\n            element.start(data);\r\n        }\r\n    }\r\n\r\n    private __subTaskEventHandler(e: Event): void {\r\n        if (e.type == Event.PROGRESS) {\r\n            this.emit(Event.PROGRESS, this.__index / this.__taskList.length);\r\n            return;\r\n        }\r\n        e.target.offAllEvent();\r\n        if (e.type == Event.ERROR) {\r\n            this.emit(Event.ERROR, e.error);\r\n            return;\r\n        }\r\n        this.__index++;\r\n        if (this.__index < this.__taskList.length) {\r\n            return;\r\n        }\r\n        e.target.destroy();\r\n        //\u5B8C\u6210\r\n        this.emit(Event.COMPLETE);\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.__taskList.length = 0;\r\n        this.__index = 0;\r\n        return super.destroy();\r\n    }\r\n}", "\r\n\r\n/**\r\n * bit\u4F4D\u64CD\u4F5C\r\n */\r\nexport class BitFlag {\r\n\r\n    private __flags: number = 0;\r\n\r\n    private __elements: Array<number>;\r\n\r\n    constructor() {\r\n        this.__elements = [];\r\n    }\r\n\r\n    reset(): void {\r\n        this.__flags = 0;\r\n    }\r\n\r\n    add(flag: number): void {\r\n        this.__flags |= flag;\r\n        if (this.__elements.indexOf(flag) < 0) {\r\n            this.__elements.push(flag)\r\n        }\r\n    }\r\n\r\n    remove(flag: number): void {\r\n        this.__flags ^= flag;\r\n        let index: number = this.__elements.indexOf(flag);\r\n        if (index >= 0) {\r\n            this.__elements.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\r\n     * @param flag \r\n     * @returns \r\n     */\r\n    has(flag: number): boolean {\r\n        return (this.__flags & flag) == flag;\r\n    }\r\n\r\n    /**\r\n     * \u4F4D\u7801\r\n     */\r\n    get flags(): number {\r\n        return this.__flags;\r\n    }\r\n\r\n    get elements(): Array<number> {\r\n        return this.__elements;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.__flags = 0;\r\n        this.__elements.length = 0;\r\n        this.__elements = null;\r\n    }\r\n\r\n\r\n    //======================================================\u9759\u6001\u5DE5\u5177\r\n    private static TYPES: Map<new () => any, number> = new Map<new () => any, number>();\r\n    private static BITS: Map<number, new () => any> = new Map<number, new () => any>();\r\n    private static TYPE_IDX: number = 0;\r\n\r\n    static getBit(value: new () => any): number {\r\n        if (this.TYPES.has(value)) {\r\n            return this.TYPES.get(value);\r\n        }\r\n        this.TYPE_IDX++;\r\n        let result = Math.pow(2, this.TYPE_IDX);\r\n        this.TYPES.set(value, result);\r\n        this.BITS.set(result, value);\r\n        return result;\r\n    }\r\n\r\n    static getType(bit: number): new () => any {\r\n        return this.BITS.get(bit);\r\n    }\r\n}", "import { IPoolable } from \"../pools/IPoolable\";\r\n\r\n/**\r\n * \u5904\u7406\u5668\r\n */\r\nexport class Handler implements IPoolable {\r\n\r\n    method?: Function;\r\n    caller: any;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    reset(): void {\r\n        this.method = null;\r\n        this.caller = null;\r\n    }\r\n    \r\n    destroy(): boolean {\r\n        this.reset();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u8FD0\u884C\r\n     * @param args \r\n     */\r\n    run(...args: any[]): any {\r\n        let result: any = null;\r\n        if (this.method) {\r\n            result = this.method.apply(this.caller, args);\r\n        } else {\r\n            throw new Error(\"Handler method is null!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u5224\u65AD\u662F\u5426\u76F8\u540C\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Handler): boolean {\r\n        if (this.method == value.method && this.caller == value.caller) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \u5224\u65AD\u662F\u5426\u76F8\u540C\r\n     * @param method \r\n     * @param caller \r\n     * @returns \r\n     */\r\n    equals(method: Function, caller?: any): boolean {\r\n        if (this.method == method && this.caller == caller) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}", "\r\n\r\n\r\n\r\nexport class StringUtils {\r\n\r\n    /**\r\n     * \u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u7A7A\r\n     * @param str \r\n     * @returns \r\n     */\r\n    static isEmpty(str: string): boolean {\r\n        return !str || str.length === 0;\r\n    }\r\n\r\n    /**\r\n     * \u5B57\u7B26\u8F6C\u4E8C\u7EF4\u6570\u7EC4\r\n     * @param str \r\n     * @returns \r\n     */\r\n    static str2NumArrList(str: string, separators: Array<string> = [\"|\", \",\"]): number[][] {\r\n        if (separators.length < 2) throw new Error(\"separators \u957F\u5EA6\u4E0D\u80FD\u5C0F\u4E8E2\");\r\n        if (!str) return []\r\n        let strArr: string[] = str.split(separators[0]);\r\n        let len: number = strArr.length;\r\n        let res: number[][] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let arr: number[] = strArr[i].split(separators[1]).map(item => Number(item));\r\n            res.push(arr);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * \u5B57\u7B26\u4E32\u8F6C\u4E8C\u7EF4\u6570\u7EC4\r\n     * @param str \r\n     * @param separators \r\n     * @returns \r\n     */\r\n    static str2StringList(str: string, separators: Array<string> = [\"|\", \",\"]): string[][] {\r\n        let strArr: string[] = str.split(separators[0]);\r\n        let len: number = strArr.length;\r\n        let res: string[][] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let arr: string[] = strArr[i].split(separators[1]);\r\n            res.push(arr);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * \u53C2\u6570\u66FF\u6362\r\n     *  @param  str\r\n     *  @param  rest\r\n     *  \r\n     *  @example\r\n     *\r\n     *  let str:string = \"\u4F60\u597D{},\u8FD9\u91CC\u662F:{}\";\r\n     *  console.log(StringUtil.substitute2(str, \"\u8748\u8748\",\"\u84DD\u661F\"));\r\n     *\r\n     *  // \u8F93\u51FA\u7ED3\u679C\u5982\u4E0B:\r\n     *  // \"\u4F60\u597D\u8748\u8748,\u8FD9\u91CC\u662F:\u84DD\u661F\"\r\n     */\r\n    static substitute(str: string, ...rest: any[]): string {\r\n        if (str == null) return '';\r\n\r\n        // Replace all of the parameters in the msg string.\r\n        let len: number = rest.length;\r\n        let args: any[];\r\n        if (len == 1 && rest[0] instanceof Array) {\r\n            args = rest[0];\r\n            len = args.length;\r\n        } else {\r\n            args = rest;\r\n        }\r\n        let idx = 0;\r\n        return str.replace(/{}/g, (_, index) => {\r\n            return args[idx++];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \u53C2\u6570\u66FF\u6362\r\n     *  @param  str\r\n     *  @param  rest\r\n     *  \r\n     *  @example\r\n     *\r\n     *  let str:string = \"here is some info '{0}' and {1}\";\r\n     *  console.log(StringUtil.substitute(str, 15.4, true));\r\n     *\r\n     *  // this will output the following string:\r\n     *  // \"here is some info '15.4' and true\"\r\n     */\r\n    static substitute2(str: string, ...rest: any[]): string {\r\n        if (str == null) return '';\r\n\r\n        // Replace all of the parameters in the msg string.\r\n        let len: number = rest.length;\r\n        let args: any[];\r\n        if (len == 1 && rest[0] instanceof Array) {\r\n            args = rest[0];\r\n            len = args.length;\r\n        } else {\r\n            args = rest;\r\n        }\r\n\r\n        for (let i: number = 0; i < len; i++) {\r\n            str = str.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), args[i]);\r\n        }\r\n\r\n        return str;\r\n    }\r\n}", "import { BaseConfigAccessor } from \"../configs/accessors/BaseConfigAccessor\";\r\nimport { ConfigManager } from \"../configs/ConfigManager\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\n\r\n\r\nexport class I18N {\r\n    /**\r\n     * \u591A\u8BED\u8A00\u8868\u540D\r\n     */\r\n    static fileName: string = \"language\";\r\n    /**\r\n     * \u5F53\u524D\u8BED\u8A00\r\n     */\r\n    static langenge: string = \"zh_CN\";\r\n    /**\r\n     * \u591A\u8BED\u8A00\u9879\u6570\u636E\r\n     */\r\n    static sheetItem: { key: string, value: string } = { key: \"id\", value: \"value\" };\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u8F6C\u6362\r\n     * @param value \r\n     * @param rest \r\n     * @returns \r\n     */\r\n    static tr(value: string, ...rest: any[]): string {\r\n        let langeValue: string;\r\n        let acc = ConfigManager.getAccessor(this.sheetName) as L18Acc;\r\n        if (!acc) {\r\n            //\u5982\u679C\u4E0D\u5B58\u5728\u5F53\u524D\u8BED\u8A00\uFF0C\u5219\u4F7F\u7528\u9ED8\u8BA4\u8BED\u8A00\r\n            acc = ConfigManager.getAccessor(this.defaultSheetName) as L18Acc;\r\n        }\r\n        if (acc) {\r\n            let sheetItem: any = acc.getOne(this.sheetItem.key, value);\r\n            if (sheetItem == null || rest == undefined) {\r\n                langeValue = value;\r\n            } else {\r\n                langeValue = sheetItem[this.sheetItem.value]\r\n            }\r\n        } else {\r\n            langeValue = value;\r\n        }\r\n        if (rest == null || rest == undefined || rest.length == 0) {\r\n            return langeValue;\r\n        }\r\n        return StringUtils.substitute(langeValue, rest);\r\n    }\r\n\r\n    /**\r\n     * \u591A\u8BED\u8A00\u8D44\u6E90\u8DEF\u5F84\r\n     * @param url \r\n     */\r\n    static tr_res(url: string): string {\r\n        return this.langenge + \"/\" + url;\r\n    }\r\n\r\n    static get sheetName(): string {\r\n        return this.fileName + \"/\" + this.langenge;\r\n    }\r\n\r\n    static get defaultSheetName(): string {\r\n        return this.fileName + \"/zh_CN\";\r\n    }\r\n}\r\n\r\n\r\nexport class L18Acc extends BaseConfigAccessor {\r\n\r\n    constructor() {\r\n        super();\r\n        this.addStorage([I18N.sheetItem.key]);\r\n    }\r\n}", "\r\n\r\nexport class MathUtils {\r\n\r\n    static readonly ZeroTolerance: number = 1e-3;\r\n    static readonly Angle90: number = Math.PI * 0.5;\r\n    static readonly Rad2Angle: number = 180 / Math.PI;\r\n    static readonly Angle2Rad: number = Math.PI / 180;\r\n\r\n    /**\r\n     * \u68C0\u6D4B\u662F\u5426\u76F8\u7B49\r\n     * @param a\r\n     * @param b\r\n     * @returns true \u76F8\u7B49 false\u4E0D\u76F8\u7B49\r\n     */\r\n    static equals(a: number, b: number): boolean {\r\n        return Math.abs(a - b) <= MathUtils.ZeroTolerance;\r\n    }\r\n\r\n    /**\r\n     * \u5F3A\u5236\u53D6\u6574\uFF0C\u53BB\u6389\u5C0F\u6570\u70B9\u540E\u7684\u6570\u5B57\r\n     * @param v \r\n     * @returns \r\n     */\r\n    static int(v: number): number {\r\n        return parseInt(v.toString(), 10);\r\n    }\r\n\r\n    /**\r\n     * \u6C422\u6761\u7EBF\u6BB5\u4E4B\u95F4\u7684\u4EA4\u70B9\r\n     * @param a \r\n     * @param b \r\n     * @param c \r\n     * @param d \r\n     * @param result \r\n     * @returns \r\n     */\r\n    static getIntersectionPoint(a: { x: number, y: number }, b: { x: number, y: number }, c: { x: number, y: number }, d: { x: number, y: number }, result?: { x: number, y: number }): { x: number, y: number } | null {\r\n        result = result || { x: 0, y: 0 };\r\n        // \u4E09\u89D2\u5F62abc \u9762\u79EF\u76842\u500D  \r\n        var area_abc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);\r\n\r\n        // \u4E09\u89D2\u5F62abd \u9762\u79EF\u76842\u500D  \r\n        var area_abd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x);\r\n\r\n        // \u9762\u79EF\u7B26\u53F7\u76F8\u540C\u5219\u4E24\u70B9\u5728\u7EBF\u6BB5\u540C\u4FA7,\u4E0D\u76F8\u4EA4 (\u5BF9\u70B9\u5728\u7EBF\u6BB5\u4E0A\u7684\u60C5\u51B5,\u672C\u4F8B\u5F53\u4F5C\u4E0D\u76F8\u4EA4\u5904\u7406);  \r\n        if (area_abc * area_abd >= 0) {\r\n            return null;\r\n        }\r\n\r\n        // \u4E09\u89D2\u5F62cda \u9762\u79EF\u76842\u500D  \r\n        var area_cda = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x);\r\n        // \u4E09\u89D2\u5F62cdb \u9762\u79EF\u76842\u500D  \r\n        // \u6CE8\u610F: \u8FD9\u91CC\u6709\u4E00\u4E2A\u5C0F\u4F18\u5316.\u4E0D\u9700\u8981\u518D\u7528\u516C\u5F0F\u8BA1\u7B97\u9762\u79EF,\u800C\u662F\u901A\u8FC7\u5DF2\u77E5\u7684\u4E09\u4E2A\u9762\u79EF\u52A0\u51CF\u5F97\u51FA.  \r\n        var area_cdb = area_cda + area_abc - area_abd;\r\n        if (area_cda * area_cdb >= 0) {\r\n            return null;\r\n        }\r\n\r\n        //\u8BA1\u7B97\u4EA4\u70B9\u5750\u6807  \r\n        var t = area_cda / (area_abd - area_abc);\r\n        var dx = t * (b.x - a.x),\r\n            dy = t * (b.y - a.y);\r\n        result.x = a.x + dx;\r\n        result.y = a.y + dy;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u70B9\u5230\u7EBF\u6BB5\u7684\u5782\u70B9\r\n     * @param px \r\n     * @param py \r\n     * @param sx \r\n     * @param sy \r\n     * @param ex \r\n     * @param ey \r\n     */\r\n    static getPerpendicularPoint(px: number, py: number, sx: number, sy: number, ex: number, ey: number, result?: { x: number, y: number }): { x: number, y: number } {\r\n        result = result || { x: 0, y: 0 };\r\n        let dx = ex - sx;\r\n        let dy = ey - sy;\r\n\r\n        let k = (ex - sx) * (px - sx) + (ey - sy) * (py - sy);\r\n        k /= dx * dx + dy * dy;\r\n        if (k >= 0 && k <= 1) {\r\n            result.x = sx + k * dx;\r\n            result.y = sy + k * dy;\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \u70B9\u5230\u7EBF\u6BB5\u7684\u8DDD\u79BB \r\n     * @param P3\r\n     * @param PA\r\n     * @param PB\r\n     * @return \r\n     */\r\n    static getNearestDistance(target: { x: number, y: number }, pa: { x: number, y: number }, pb: { x: number, y: number }): number {\r\n        let targetPoint = { x: 0, y: 0 };\r\n        let aPoint = { x: 0, y: 0 };\r\n        let bPoint = { x: 0, y: 0 };\r\n\r\n        targetPoint.x = target.x;\r\n        targetPoint.y = target.y;\r\n        aPoint.x = pa.x;\r\n        aPoint.y = pa.y;\r\n        bPoint.x = pb.x;\r\n        bPoint.y = pb.y;\r\n\r\n        var a: number, b: number, c: number;\r\n        a = this.distance(bPoint.x, bPoint.y, targetPoint.x, targetPoint.y);\r\n        if (a <= 0.00001)\r\n            return 0;\r\n        b = this.distance(aPoint.x, aPoint.y, targetPoint.x, targetPoint.y);\r\n        if (b <= 0.00001)\r\n            return 0;\r\n        c = this.distance(aPoint.x, aPoint.y, bPoint.x, bPoint.y);\r\n        if (c <= 0.00001)\r\n            return a;//\u5982\u679CPA\u548CPB\u5750\u6807\u76F8\u540C\uFF0C\u5219\u9000\u51FA\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u8DDD\u79BB   \r\n        //------------------------------   \r\n\r\n\r\n        if (a * a >= b * b + c * c)//--------\u56FE3--------   \r\n            return b;\r\n        if (b * b >= a * a + c * c)//--------\u56FE4-------   \r\n            return a;\r\n\r\n        //\u56FE1   \r\n        var l: number = (a + b + c) / 2;     //\u5468\u957F\u7684\u4E00\u534A   \r\n        var s: number = Math.sqrt(l * (l - a) * (l - b) * (l - c));  //\u6D77\u4F26\u516C\u5F0F\u6C42\u9762\u79EF\r\n        return 2 * s / c;\r\n    }\r\n\r\n    /**\r\n     * \u5411\u91CF\u70B9\u4E58\r\n     * @param ax \r\n     * @param ay \r\n     * @param bx \r\n     * @param by \r\n     * @returns   0 \u4E92\u76F8\u5782\u76F4 >0 \u5411\u91CF\u5939\u89D2\u5C0F\u4E8E90\u5EA6 <0\u5411\u91CF\u5939\u89D2\u5927\u4E8E90\u5EA6\r\n     */\r\n    static vectorDot(ax: number, ay: number, bx: number, by: number): number {\r\n        return ax * bx + ay * by;\r\n    }\r\n\r\n    /**\r\n     * \u5411\u91CF\u53C9\u4E58\r\n     * @param a \r\n     * @param b \r\n     * @param out \r\n     */\r\n    static vectorCross(ax: number, ay: number, bx: number, by: number): number {\r\n        return ax * by - ay * bx;\r\n    }\r\n\r\n    /**\r\n     * \u6C42\u4E24\u4E2A\u5411\u91CF\u4E4B\u95F4\u7684\u5939\u89D2\r\n     * @param av        \u5355\u4F4D\u5411\u91CF\r\n     * @param bv        \u5355\u4F4D\u5411\u91CF\r\n     */\r\n    static calculateAngle(ax: number, ay: number, bx: number, by: number): number {\r\n        //cos=a.b/(|a||b|);\r\n        return Math.acos(this.vectorDot(ax, ay, bx, by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by)));\r\n    }\r\n\r\n    /**\r\n    * \u6C42\u4E24\u70B9\u4E4B\u95F4\u8DDD\u79BB\r\n    * @param ax \r\n    * @param ay \r\n    * @param bx \r\n    * @param by \r\n    * @returns \r\n    */\r\n    static distance(ax: number, ay: number, bx: number, by: number): number {\r\n        const x: number = bx - ax;\r\n        const y: number = by - ay;\r\n        return Math.sqrt(x * x + y * y)\r\n    }\r\n\r\n    /**\r\n     * \u6C42\u8DDD\u79BB\u7684\u4E8C\u6B21\u65B9\r\n     * @param ax \r\n     * @param ay \r\n     * @param bx \r\n     * @param by \r\n     * @returns \r\n     */\r\n    static distanceSquared(ax: number, ay: number, bx: number, by: number): number {\r\n        const x: number = bx - ax;\r\n        const y: number = by - ay;\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\u5728\u5706\u5185\r\n     * @param x \r\n     * @param y \r\n     * @param ox \r\n     * @param oy \r\n     * @param r \r\n     * @returns \r\n     */\r\n    static inTheCircle(x: number, y: number, ox: number, oy: number, r: number): boolean {\r\n        let dis = this.distance(x, y, ox, oy);\r\n        if (dis < r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}", "\r\n\r\n\r\n/**\r\n * \u5BF9\u8C61\u5DE5\u5177\u7C7B\r\n */\r\nexport class ObjectUtils {\r\n\r\n    /**\r\n     * \u5C06source\u5BF9\u8C61\u5C5E\u6027\u62F7\u8D1D\u5230target\u5BF9\u8C61\r\n     * @param source \r\n     * @param target \r\n     */\r\n    static oto(source: any, target: any): void {\r\n        for (let key in source) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6DF1\u5EA6\u514B\u9686\r\n     * @param source \r\n     * @returns \r\n     */\r\n    static deepClone<T>(source: any): T {\r\n        if (!source || typeof source != \"object\")\r\n            return null;\r\n        var obj_str = JSON.stringify(source);\r\n        let result = JSON.parse(obj_str);\r\n        return result as T;\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u7406\u5BF9\u8C61\r\n     * @param obj \r\n     */\r\n    static clear(obj: any): void {\r\n        for (let key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}", "import { ConfigManager } from \"./configs/ConfigManager\";\r\nimport { LocalConfigLoader } from \"./configs/res/LocalConfigLoader\";\r\nimport { RemoteConfigLoader } from \"./configs/res/RemoteConfigLoader\";\r\nimport { Event } from \"./events/Event\";\r\nimport { IEnginePlugin } from \"./interfaces/IEnginePlugin\";\r\nimport { Res } from \"./res/Res\";\r\nimport { TickerManager } from \"./ticker/TickerManager\";\r\nimport { I18N, L18Acc } from \"./utils/I18N\";\r\n\r\n\r\n\r\n\r\n/**\r\n * \u5F15\u64CE\u5165\u53E3\r\n */\r\nexport class Engine {\r\n\r\n    private static plugins = new Map<string, IEnginePlugin>();\r\n    private static inited: boolean = false;\r\n\r\n    /**\r\n     * \u542F\u52A8\u5F15\u64CE\r\n     * @param plugins \r\n     * @param progress \r\n     * @param cb \r\n     */\r\n    static start(plugins: Array<IEnginePlugin>, progress: (v: number) => void, cb: (err: Error | null) => void): void {\r\n        if (this.inited) {\r\n            throw new Error(\"\u91CD\u590D\u542F\u52A8\u5F15\u64CE!\");\r\n        }\r\n        //\u914D\u7F6E\u8868\u52A0\u8F7D\u5668\r\n        Res.setLoader(Res.TYPE.CONFIG, LocalConfigLoader);\r\n        \r\n        /**\u9ED8\u8BA4\u8BED\u8A00\u914D\u7F6E\u8868\u5B58\u53D6\u5668 */\r\n        if (I18N.langenge != \"zh_CN\") {\r\n            ConfigManager.register(I18N.defaultSheetName, L18Acc);\r\n        }\r\n        ConfigManager.register(I18N.sheetName, L18Acc);\r\n\r\n        let setup_idx: number = 0;\r\n        let total_count = plugins.length;\r\n        for (let idx = 0; idx < plugins.length; idx++) {\r\n            const plugin = plugins[idx];\r\n            plugin.on(Event.PROGRESS, (e) => {\r\n                progress && progress((setup_idx + e.progress) / total_count);\r\n            }, this);\r\n            plugin.on(Event.ERROR, (e) => {\r\n                cb && cb(e.error!);\r\n                //\u5220\u9664\u6240\u6709\u4E8B\u4EF6\u76D1\u542C\r\n                plugin.offAllEvent();\r\n            }, this);\r\n            plugin.on(Event.COMPLETE, (e) => {\r\n                let target = e.target as IEnginePlugin;\r\n                target.offAllEvent();\r\n                setup_idx++;\r\n                if (setup_idx >= total_count) {\r\n                    cb && cb(null);\r\n                }\r\n            }, this);\r\n            //\u542F\u52A8\u6A21\u5757\r\n            plugin.start();\r\n            this.plugins.set(plugin.name, plugin);\r\n            this.inited = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u63D2\u4EF6\r\n     * @param name \r\n     * @returns \r\n     */\r\n    static getPlugin(name: string): IEnginePlugin | undefined {\r\n        return this.plugins.get(name);\r\n    }\r\n\r\n    /**\r\n     * \u5FC3\u8DF3\u9A71\u52A8\r\n     * @param dt \r\n     * @returns \r\n     */\r\n    static tick(dt: number): void {\r\n        if (!this.inited) {\r\n            return;\r\n        }\r\n        TickerManager.tick(dt);\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["Node", "assetManager", "assetManager", "index", "LogType", "assetManager", "bundle", "assetManager", "ResType", "value", "Node", "pres", "laters", "assetManager", "assetManager", "bundle", "data", "assetManager", "assetManager", "data", "SerDesMode", "index", "DEBUG", "DEBUG", "Node", "assetManager", "assetManager", "Node", "EventType"]
}
