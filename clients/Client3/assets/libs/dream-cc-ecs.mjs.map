{
  "version": 3,
  "sources": ["../src/core/ECSComponent.ts", "../src/core/ECSMatcher.ts", "../src/core/ECSStorage.ts", "../src/core/ECSWorld.ts", "../src/core/SparseSet.ts", "../src/core/ECSSystem.ts", "../src/camps/CampComponent.ts", "../src/transforms/TransformComponent.ts", "../src/nodes/ParentComponent.ts", "../src/nodes/AddToParentQueueSystem.ts", "../src/nodes/NodeComponent.ts", "../src/nodes/AddToParentSystem.ts", "../src/nodes/NodeSystem.ts", "../src/nodes/SizeComponent.ts", "../src/displays/DisplayComponent.ts", "../src/displays/GraphicsComponent.ts", "../src/datas/DataComponent.ts", "../src/links/LinkComponent.ts", "../src/links/LinkSystem.ts", "../src/displays/RendererRoot2DComponent.ts", "../src/levels/LevelStatus.ts", "../src/levels/Level.ts", "../src/levels/LevelManager.ts", "../src/levels/LevelMode.ts", "../src/levels/LevelModeScript.ts"],
  "sourcesContent": ["import { TickerManager } from \"dream-cc-core\";\r\nimport { ECSEntity } from \"./ECSEntity\";\r\nimport { ECSWorld } from \"./ECSWorld\";\r\nimport { IECSComponent } from \"./IECSComponent\";\r\n\r\n\r\n\r\n/**\r\n * \u7EC4\u4EF6\u62BD\u8C61\u7C7B\r\n */\r\nexport abstract class ECSComponent implements IECSComponent {\r\n\r\n    /**\u6240\u5C5E\u4E16\u754C */\r\n    world: ECSWorld;\r\n\r\n    /**\u6240\u5C5Eentity*/\r\n    entity: ECSEntity;\r\n\r\n    /**\u810F\u6570\u636E\u6807\u8BB0\u56DE\u8C03*/\r\n    dirtySignal: (() => void);\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u542F\u7528\u7EC4\u4EF6\r\n     */\r\n    enable(): void {\r\n\r\n    }\r\n\r\n    /**\u6807\u8BB0\u8BE5\u7EC4\u4EF6\u6570\u636E\u4E3A\u810F*/\r\n    markDirtied(): void {\r\n        TickerManager.callNextFrame(this.__nextFrame, this);\r\n    }\r\n\r\n\r\n    private __nextFrame(): void {\r\n        this.dirtySignal && this.dirtySignal();\r\n    }\r\n\r\n    /**\u91CD\u7F6E*/\r\n    reset(): void {\r\n        TickerManager.clearNextFrame(this.__nextFrame, this);\r\n        this.dirtySignal = null;\r\n        this.world = null;\r\n        this.entity = undefined;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.reset();\r\n        return true;\r\n    }\r\n}", "import { ECSEntity } from \"./ECSEntity\";\r\nimport { IECSComponent } from \"./IECSComponent\";\r\n\r\n/**\r\n * \u5339\u914D\u5668\r\n */\r\nexport class ECSMatcher {\r\n    /**\r\n     * \u5168\u90E8\u5305\u542B\u6216\u4EFB\u610F\u5305\u542B\r\n     */\r\n    matcher: MatcherAllOf | MatcherAnyOf | undefined = undefined;\r\n\r\n    /**\r\n     * \u53EF\u9009\u4EFB\u610F\u5305\u542B\r\n     */\r\n    matcherAnyOf: MatcherAnyOf | undefined = undefined;\r\n\r\n    /**\r\n     * \u4E0D\u80FD\u5305\u542B\u7684\r\n     */\r\n    matcherNoneOf: MatcherNoneOf | undefined = undefined;\r\n\r\n    /**\r\n     * \u7F16\u7EC4\u6240\u5339\u914D\u7684\u5143\u7D20(\u5185\u90E8\u63A5\u53E3)\r\n     */\r\n    private __entitys: Set<ECSEntity> = new Set<ECSEntity>();\r\n\r\n    /**\r\n     * \u5173\u8054\u7EC4\u4EF6\r\n     */\r\n    _dependencies = new Set<new () => IECSComponent>();\r\n\r\n    constructor(allOrAny: MatcherAllOf | MatcherAnyOf, matcherAnyOf?: MatcherAllOf | MatcherAnyOf, none?: MatcherNoneOf) {\r\n        this.matcher = allOrAny;\r\n        this.matcherAnyOf = matcherAnyOf;\r\n        this.matcherNoneOf = none;\r\n        for (let index = 0; index < allOrAny.types.length; index++) {\r\n            const type = allOrAny.types[index];\r\n            this._dependencies.add(type);\r\n        }\r\n        if (matcherAnyOf) {\r\n            for (let index = 0; index < matcherAnyOf.types.length; index++) {\r\n                const type = matcherAnyOf.types[index];\r\n                this._dependencies.add(type);\r\n            }\r\n        }\r\n        if (none) {\r\n            for (let index = 0; index < none.types.length; index++) {\r\n                const type = none.types[index];\r\n                this._dependencies.delete(type);\r\n            }\r\n        }\r\n    }\r\n\r\n    get entitys(): Set<ECSEntity> {\r\n        return this.__entitys;\r\n    }\r\n\r\n    has(entity: ECSEntity): boolean {\r\n        return this.__entitys.has(entity);\r\n    }\r\n\r\n    add(entity: ECSEntity): void {\r\n        this.__entitys.add(entity);\r\n    }\r\n\r\n    remove(entity: ECSEntity): void {\r\n        this.__entitys.delete(entity);\r\n    }\r\n\r\n    clear(): void {\r\n        this.__entitys.clear();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.matcher = undefined;\r\n        this.matcherNoneOf = undefined;\r\n        this.__entitys = null;\r\n        this._dependencies.clear();\r\n        this._dependencies = null;\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * \u5339\u914D\u5668\r\n */\r\nexport class Matcher {\r\n\r\n    types: Array<new () => IECSComponent>;\r\n\r\n    constructor(types: Array<new () => IECSComponent>) {\r\n        this.types = types;\r\n    }\r\n}\r\n\r\n/**\r\n * \u5FC5\u987B\u6240\u6709\u6210\u7ACB\r\n */\r\nexport class MatcherAllOf extends Matcher {\r\n\r\n}\r\n\r\n/**\r\n * \u4EFB\u610F\u4E00\u4E2A\u6210\u7ACB\r\n */\r\nexport class MatcherAnyOf extends Matcher {\r\n\r\n}\r\n\r\n/**\r\n * \u4E0D\u80FD\u5305\u542B\r\n */\r\nexport class MatcherNoneOf extends Matcher {\r\n\r\n}", "import { Dictionary, IPoolable, Pool } from \"dream-cc-core\";\r\nimport { ECSEntity } from \"./ECSEntity\";\r\nimport { ECSWorld } from \"./ECSWorld\";\r\nimport { SparseSet } from \"./SparseSet\";\r\n\r\nexport class ECSStorage<T extends IPoolable> {\r\n\r\n    private __uidMapping: Dictionary<ECSEntity, number>;\r\n    private __values: Map<new () => any, Array<T | null>>;\r\n    private __entitySets: Array<Set<new () => T>>;\r\n    private __poolRecord: Set<new () => T>;\r\n    private __sparseSet: SparseSet;\r\n    private __freelist: Array<number>;\r\n    private __entityIndex: number = 0;\r\n\r\n    constructor(maxCount: number) {\r\n        this.__uidMapping = new Dictionary<ECSEntity, number>();\r\n        this.__sparseSet = new SparseSet(maxCount);\r\n        this.__poolRecord = new Set<new () => T>();\r\n        this.__values = new Map<new () => any, Array<T | null>>();\r\n        this.__entitySets = new Array<Set<new () => T>>(maxCount);\r\n        this.__freelist = [];\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\r\n     * @param id \r\n     */\r\n    add(id: ECSEntity): void {\r\n        if (this.__uidMapping.has(id)) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0:\" + id)\r\n        }\r\n        let entity: number;\r\n        if (this.__freelist.length > 0) {\r\n            entity = this.__freelist.shift();\r\n        } else {\r\n            entity = this.__entityIndex;\r\n            this.__entityIndex++;\r\n        }\r\n        // console.log(\"\u6DFB\u52A0entity:\", id, entity);\r\n        this.__uidMapping.set(id, entity);\r\n        this.__sparseSet.add(entity);\r\n        const idx = this.__sparseSet.getPackedIdx(entity);\r\n        if (this.__entitySets[idx] == null) {\r\n            this.__entitySets[idx] = new Set<new () => T>();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\r\n     * @param id \r\n     * @returns \r\n     */\r\n    has(id: ECSEntity): boolean {\r\n        return this.__uidMapping.has(id);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\r\n     * @param id \r\n     * @returns \r\n     */\r\n    remove(id: ECSEntity): void {\r\n        if (!this.__uidMapping.has(id)) {\r\n            throw new Error(id + \"\u4E0D\u5B58\u5728!\");\r\n        }\r\n        let entity = this.__uidMapping.get(id);\r\n        // console.log(\"\u5220\u9664entity:\", id, entity);\r\n        let lastEntity = this.__sparseSet.lastEntity;\r\n        const deleteIdx = this.__sparseSet.getPackedIdx(entity);\r\n        const lastIdx = this.__sparseSet.getPackedIdx(lastEntity);\r\n        //\u5220\u9664\u5173\u8054\u503C\r\n        let values = Array.from(this.getEntitySet(id));\r\n        //\u6392\u5E8F\r\n        if (ECSWorld.COMPONENT_PRIORITY) {\r\n            values.sort((a, b) => {\r\n                const a_p = ECSWorld.COMPONENT_PRIORITY(a);\r\n                const b_p = ECSWorld.COMPONENT_PRIORITY(b);\r\n                return a_p - b_p;\r\n            });\r\n        }\r\n        for (let i = 0; i < values.length; i++) {\r\n            const com_type = values[i];\r\n            this.removeValue(id, com_type);\r\n        }\r\n        //\u5982\u679C\u5220\u9664\u7684\u5185\u5BB9\u4E0D\u5728\u672B\u5C3E\uFF0C\u5219\u5C06\u672B\u5C3E\u5185\u5BB9\u79FB\u52A8\u5230\u5220\u9664\u4F4D\u7F6E\r\n        if (deleteIdx != lastIdx) {\r\n            let last_set = this.__entitySets[lastIdx];\r\n            if (last_set) {\r\n                for (const type of last_set) {\r\n                    const list = this.__values.get(type);\r\n                    if (list) {\r\n                        list[deleteIdx] = list[lastIdx];\r\n                        list[lastIdx] = null;\r\n                        this.__entitySets[deleteIdx].add(type);\r\n                    }\r\n                }\r\n                last_set.clear();\r\n            }\r\n        }\r\n        this.__uidMapping.delete(id);\r\n        this.__sparseSet.remove(entity);\r\n        this.__freelist.push(entity);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\r\n     * @param id \r\n     * @param type \r\n     * @returns \r\n     */\r\n    getValue(id: ECSEntity, type: new () => T): T | null {\r\n        let entity = this.__uidMapping.get(id);\r\n        let pIdx = this.__sparseSet.getPackedIdx(entity);\r\n        if (pIdx == this.__sparseSet.invalid) {\r\n            return null;\r\n        }\r\n        let list = this.__values.get(type);\r\n        if (list == null || list.length == 0 || pIdx >= list.length) {\r\n            return null;\r\n        }\r\n        return list[pIdx] as T;\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\r\n     * @param id \r\n     * @param type \r\n     * @returns \r\n     */\r\n    addValue(id: ECSEntity, type: new () => T): T {\r\n        if (!this.__uidMapping.has(id)) {\r\n            throw new Error(id + \"\u5BF9\u8C61\u4E0D\u5B58\u5728\uFF01\");\r\n        }\r\n        let entity = this.__uidMapping.get(id);\r\n        // console.log(\"\u6DFB\u52A0\u7EC4\u4EF6\uFF1A\", id, entity, egret.getQualifiedClassName(type));\r\n        if (!this.__sparseSet.contains(entity)) throw new Error(\"\u4E0D\u5B58\u5728:\" + id);\r\n        const pIdx = this.__sparseSet.getPackedIdx(entity);\r\n        let list = this.__values.get(type);\r\n        if (list == null) {\r\n            list = new Array<T>(this.__sparseSet.maxCount);\r\n            this.__values.set(type, list);\r\n        }\r\n        if (list[pIdx] != null) {\r\n            throw new Error(id + \"=>\u91CD\u590D\u6DFB\u52A0:\" + type);\r\n        }\r\n        this.__poolRecord.add(type);//\u8BB0\u5F55\u5206\u914D\u7C7B\u578B\r\n        let result = list[pIdx] = Pool.acquire(type);\r\n        //\u589E\u52A0\u7EC4\u4EF6\u6807\u8BB0\r\n        let entitySet = this.__entitySets[pIdx];\r\n        entitySet.add(type);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542BValue\r\n     * @param id \r\n     * @param type \r\n     */\r\n    hasValue(id: ECSEntity, type: new () => T): boolean {\r\n        if (!this.__uidMapping.has(id)) {\r\n            return false;\r\n        }\r\n        let entity = this.__uidMapping.get(id);\r\n        let pIdx = this.__sparseSet.getPackedIdx(entity);\r\n        let list = this.__values.get(type);\r\n        if (list == null) {\r\n            return false;\r\n        }\r\n        if (list[pIdx] == null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\r\n     * @param id \r\n     * @param type \r\n     * @returns \r\n     */\r\n    removeValue(id: ECSEntity, type: new () => T): T {\r\n        if (!this.__uidMapping.has(id)) {\r\n            throw new Error(id + \"\u4E0D\u5B58\u5728:\");\r\n        }\r\n        let entity = this.__uidMapping.get(id);\r\n        // console.log(\"\u5220\u9664\u7EC4\u4EF6\uFF1A\",id,entity,egret.getQualifiedClassName(type));\r\n        let pIdx = this.__sparseSet.getPackedIdx(entity);\r\n        let list = this.__values.get(type);\r\n        if (list == null || list.length == 0) {\r\n            throw new Error(id + \"=>\u4E0A\u627E\u4E0D\u5230\u8981\u5220\u9664\u7684\u5173\u8054\u5BF9\u8C61:\" + type);\r\n        }\r\n        let result = list[pIdx] as T;\r\n        list[pIdx] = null;\r\n        Pool.release(type, result);\r\n        //\u5220\u9664\u7EC4\u4EF6\u6807\u8BB0\r\n        let entitySet = this.__entitySets[pIdx];\r\n        entitySet.delete(type);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u6839\u636E\u7C7B\u578B\u83B7\u53D6\u5217\u8868\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getValues(type: new () => T): Array<T> {\r\n        return Pool.getUsing(type);\r\n    }\r\n\r\n    getEntitySet(id: ECSEntity): Set<new () => T> | null {\r\n        if (!this.__uidMapping.has(id)) {\r\n            return null;\r\n        }\r\n        let entity = this.__uidMapping.get(id);\r\n        let pIdx = this.__sparseSet.getPackedIdx(entity);\r\n        return this.__entitySets[pIdx];\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u7406\r\n     */\r\n    clear(): void {\r\n        this.__entityIndex = 0;\r\n        let ids = this.__uidMapping.getKeys();\r\n        while (ids.length > 0) {\r\n            this.remove(ids.shift() as ECSEntity);\r\n        }\r\n        this.__values.clear();\r\n        this.__freelist.splice(0, this.__freelist.length);\r\n    }\r\n\r\n    /**\u9500\u6BC1 */\r\n    destroy(): void {\r\n        this.__entitySets.splice(0, this.__entitySets.length);\r\n        this.__uidMapping.clear();\r\n        this.__uidMapping = null;\r\n        this.__sparseSet.destroy();\r\n        this.__sparseSet = null;\r\n        for (const element of this.__poolRecord) {\r\n            Pool.destroy(element);\r\n        }\r\n        this.__poolRecord.clear();\r\n        this.__poolRecord = null;\r\n\r\n        this.__values.clear();\r\n        this.__values = null;\r\n    }\r\n\r\n    /**\u65E0\u6548\u503C */\r\n    get invalid(): number {\r\n        return this.__sparseSet.invalid;\r\n    }\r\n\r\n    getIDList(result?: Array<ECSEntity>): Array<ECSEntity> {\r\n        result = result || [];\r\n        this.__uidMapping.getKeys(result);\r\n        return result;\r\n    }\r\n\r\n    get values(): Map<new () => any, Array<T | null>> {\r\n        return this.__values;\r\n    }\r\n}", "import { Dictionary } from \"dream-cc-core\";\r\nimport { ECSEntity } from \"./ECSEntity\";\r\nimport { ECSMatcher, Matcher, MatcherAllOf, MatcherAnyOf } from \"./ECSMatcher\";\r\nimport { ECSStorage } from \"./ECSStorage\";\r\nimport { ECSSystem } from \"./ECSSystem\";\r\nimport { IECSComponent } from \"./IECSComponent\";\r\n\r\n/**\r\n * \u4E16\u754C\r\n */\r\nexport class ECSWorld {\r\n\r\n    /**\u7EC4\u4EF6\u4F18\u5148\u7EA7\uFF08\u7528\u4E8E\u63A7\u5236entity\u5220\u9664\u65F6component\u9500\u6BC1\u7684\u8C03\u7528\u4F18\u5148\u7EA7\uFF09 */\r\n    static COMPONENT_PRIORITY: (com_type: new () => any) => number;\r\n\r\n    static HELP_SYSTEM_LIST: Array<new () => ECSSystem> = [];\r\n\r\n    static HELP_ENTITY_LIST: Array<ECSEntity> = [];\r\n\r\n    private __maxCount: number;\r\n\r\n    /**\u7B49\u5F85\u5220\u9664\u7684entity*/\r\n    private __waitFree: Array<ECSEntity> = [];\r\n\r\n    private __storage: ECSStorage<IECSComponent>;\r\n    private __systems: Dictionary<new () => ECSSystem, ECSSystem>;\r\n\r\n    /**\u7EC4\u4EF6\u5173\u8054\u7684\u7CFB\u7EDF */\r\n    private __componentSystems: Map<new () => IECSComponent, Array<ECSSystem>>;\r\n\r\n    /**\u7CFB\u7EDF\u6392\u5E8F */\r\n    private __system_priority: (sys: ECSSystem) => number;\r\n\r\n    /**\u6807\u8BB0\u7CFB\u7EDF\u9700\u8981\u6392\u5E8F */\r\n    private __need_sort_systems: boolean = false;\r\n    /**\r\n     * \u5F53\u524D\u5220\u9664\u6B63\u5728\u5220\u9664\u7684entity\r\n     */\r\n    private __currentRemoveEntity: ECSEntity | null = null;\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     * @param maxCount \r\n     */\r\n    constructor(maxCount: number) {\r\n        this.__maxCount = maxCount;\r\n        this.__storage = new ECSStorage<IECSComponent>(this.__maxCount);\r\n        this.__systems = new Dictionary<new () => ECSSystem, ECSSystem>();\r\n        this.__componentSystems = new Map<new () => IECSComponent, Array<ECSSystem>>();\r\n    }\r\n\r\n    /**\u7CFB\u7EDF\u6392\u5E8F\uFF08\u7528\u4E8E\u63A7\u5236system.tick\u7684\u8C03\u7528\u987A\u5E8F\uFF09 */\r\n    set system_priority(fn: (sys_type: ECSSystem) => number) {\r\n        this.__system_priority = fn;\r\n        if (this.__system_priority) {\r\n            this.__need_sort_systems = true;\r\n        }\r\n    }\r\n\r\n    get system_priority(): (sys: ECSSystem) => number {\r\n        return this.__system_priority;\r\n    }\r\n\r\n    /**\r\n     * \u5FC3\u8DF3\r\n     * @param dt \r\n     */\r\n    tick(dt: number): void {\r\n        //\u7CFB\u7EDF\r\n        const systems = this.__systems.elements;\r\n        //\u6392\u5E8F\r\n        if (this.__need_sort_systems && this.__system_priority) {\r\n            systems.sort((a, b) => {\r\n                return this.__system_priority(a) - this.__system_priority(b);\r\n            });\r\n            this.__need_sort_systems = false;\r\n        }\r\n        //\u5220\u9664\r\n        for (let index = 0; index < this.__waitFree.length; index++) {\r\n            const id = this.__waitFree[index];\r\n            this.__currentRemoveEntity = id;\r\n            this.__removeEntity(id);\r\n        }\r\n        this.__currentRemoveEntity = null;\r\n        this.__waitFree.splice(0, this.__waitFree.length);\r\n        for (let index = 0; index < systems.length; index++) {\r\n            const sys = systems[index];\r\n            sys.tick(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u521B\u5EFA\r\n     */\r\n    createEntity(entity: ECSEntity): void {\r\n        //\u5982\u679C\u8981\u521B\u5EFA\u7684entity\u5728\u7B49\u5F85\u5220\u9664\u5217\u8868\u4E2D\u65F6\r\n        let findex = this.__waitFree.indexOf(entity);\r\n        if (findex >= 0) {\r\n            //\u5220\u9664entity;\r\n            this.__waitFree.splice(findex, 1);\r\n            this.__removeEntity(entity);\r\n        }\r\n        //\u521B\u5EFAentity\r\n        this.__storage && this.__storage.add(entity);\r\n    }\r\n\r\n    /**\r\n     * \u67E5\u8BE2\u662F\u5426\u5305\u542Bentity\r\n     * @param entity \r\n     * @returns \r\n     */\r\n    hasEntity(entity: ECSEntity): boolean {\r\n        //\u5982\u679C\u5728\u7B49\u5F85\u5220\u9664\u5217\u8868\u4E2D\r\n        if (this.__waitFree.indexOf(entity) >= 0) {\r\n            return false;\r\n        }\r\n        return this.__storage.has(entity);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664entity\r\n     * @param entity \r\n     * @returns \r\n     */\r\n    removeEntity(entity: ECSEntity): void {\r\n        if (!this.__storage.has(entity)) {\r\n            throw new Error(entity + \" entity\u4E0D\u5B58\u5728\");\r\n        }\r\n        const index = this.__waitFree.indexOf(entity);\r\n        if (index >= 0) {\r\n            return;\r\n        }\r\n        this.__waitFree.push(entity);\r\n    }\r\n\r\n    /**\r\n    * \u7ACB\u523B\u5220\u9664entity\r\n    * @param entity \r\n    */\r\n    private __removeEntity(entity: ECSEntity): void {\r\n        if (!this.__storage.has(entity)) {\r\n            throw new Error(entity + \" entity\u4E0D\u5B58\u5728\");\r\n        }\r\n        let com_set = this.__storage.getEntitySet(entity);\r\n        let com_list = Array.from(com_set);\r\n        //\u5220\u9664\r\n        this.__storage.remove(entity);\r\n        //\u4ECE\u76F8\u5173\u7CFB\u7EDF\u5339\u914D\u8BB0\u5F55\u4E2D\u5220\u9664\r\n        if (com_list.length > 0) {\r\n            for (let index = 0; index < com_list.length; index++) {\r\n                const com_type = com_list[index];\r\n                let sys_list = this.__componentSystems.get(com_type);\r\n                if (sys_list) {\r\n                    for (let index = 0; index < sys_list.length; index++) {\r\n                        const sys = sys_list[index];\r\n                        if (sys.hasEntity(entity)) {\r\n                            sys.removeEntity(entity);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u7EC4\u4EF6\r\n     * @param entity\r\n     * @param type\r\n     * @returns\r\n     */\r\n    addComponent<T extends IECSComponent>(entity: ECSEntity, type: new () => T): T {\r\n        if (entity == this.__currentRemoveEntity) {\r\n            throw new Error(\"\u5220\u9664\u65F6\u6DFB\u52A0\u7EC4\u4EF6\");\r\n        }\r\n        let result = this.__storage.addValue(entity, type);\r\n        result.dirtySignal = () => {\r\n            this.__componentDirty(entity, type);\r\n        }\r\n        //\u8BB0\u5F55\u6240\u5C5E\r\n        result.entity = entity;\r\n        result.world = this;\r\n        result.enable();\r\n        this.__matcher(result.entity, false, true);\r\n        return result as T;\r\n    }\r\n\r\n    /**\r\n     * \u67E5\u8BE2entity\u662F\u5426\u5305\u542B\u7EC4\u4EF6 \r\n     * @param entity \r\n     * @param type \r\n     * @param check_instance    \u662F\u5426\u68C0\u67E5\u7EE7\u627F\u5173\u7CFB\r\n     * @returns \r\n     */\r\n    hasComponent<T extends IECSComponent>(entity: ECSEntity, type: new () => T): boolean {\r\n        let instance_type = this.__getComponentType(entity, type);\r\n        let result = this.__storage.hasValue(entity, instance_type);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u7EC4\u4EF6\r\n     * @param entity \r\n     * @param type \r\n     * @returns \r\n     */\r\n    removeComponent<T extends IECSComponent>(entity: ECSEntity, type: new () => T): T {\r\n        let instance_type = this.__getComponentType(entity, type);\r\n        let result = this.__storage.removeValue(entity, instance_type);\r\n        this.__matcher(entity, false, true);\r\n        return result as T;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664entity\u4E0A\u7684\u6240\u6709\u7EC4\u4EF6\r\n     * @param entity \r\n     */\r\n    removeComponents(entity: ECSEntity): void {\r\n        let entity_coms = this.__storage.getEntitySet(entity);\r\n        if (!entity_coms) return;\r\n        let elements = Array.from(entity_coms);\r\n        for (let index = 0; index < elements.length; index++) {\r\n            const com_type = elements[index];\r\n            this.removeComponent(entity, com_type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7EC4\u4EF6\u5728entity\u4E0A\u7684\u5B9E\u4F8B\u7C7B\u578B\r\n     * @param entity \r\n     * @param type \r\n     * @returns \r\n     */\r\n    private __getComponentType(entity: ECSEntity, type: new () => IECSComponent): new () => IECSComponent {\r\n        if (this.__storage.hasValue(entity, type)) {\r\n            return type;\r\n        }\r\n        let entity_coms = this.__storage.getEntitySet(entity);\r\n        if (!entity_coms) return type;\r\n        for (const com_type of entity_coms) {\r\n            const com = this.__storage.getValue(entity, com_type);\r\n            if (com instanceof type) {\r\n                return com_type;\r\n            }\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u7EC4\u4EF6\r\n     * @param entity \r\n     * @param type \r\n     * @returns \r\n     */\r\n    removeComponentIf<T extends IECSComponent>(entity: ECSEntity, type: new () => T): T | null {\r\n        let instance_type = this.__getComponentType(entity, type) || type;\r\n        if (this.hasComponent(entity, instance_type)) {\r\n            let result = this.__storage.removeValue(entity, instance_type);\r\n            this.__matcher(entity, false, true);\r\n            return result as T;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u7EC4\u4EF6\u5B9E\u4F8B\u8FDB\u884C\u5220\u9664\r\n     * @param entity \r\n     * @param com \r\n     * @returns \r\n     */\r\n    removeComponentBy<T extends IECSComponent>(entity: ECSEntity, com: IECSComponent): T {\r\n        let type = com[\"constructor\"] as new () => T;\r\n        let instance_type = this.__getComponentType(entity, type) || type;\r\n        let result = this.__storage.removeValue(entity, instance_type);\r\n        this.__matcher(entity, false, true);\r\n        return result as T;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7EC4\u4EF6\r\n     * @param entity \r\n     * @param type \r\n     * @returns \r\n     */\r\n    getComponent<T extends IECSComponent>(entity: ECSEntity, type: new () => T): T | null {\r\n        let instance_type = this.__getComponentType(entity, type) || type;\r\n        let result = this.__storage.getValue(entity, instance_type);\r\n        return result as T;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6entity\u4E0A\u67D0\u4E2A\u7C7B\u578B\u7EC4\u4EF6\u7684\u5217\u8868\r\n     * @param entity \r\n     * @param type \r\n     * @returns \r\n     */\r\n    getComponentList<T extends IECSComponent>(entity: ECSEntity, type: new () => T): Array<T> {\r\n        let result: Array<T> = [];\r\n        //\u5224\u65AD\u5F53\u524Dentity\u4E0B\u6240\u6709\u7EC4\u4EF6\u662F\u5426\u6709\u7EC4\u4EF6\u662F\u7EE7\u627F\u4E0E\u6307\u5B9A\u7C7B\u578B\u7684\u5B50\u7C7B\u3002\r\n        let entitySet = this.__storage.getEntitySet(entity);\r\n        if (entitySet == null) return result;\r\n        for (const com_type of entitySet) {\r\n            const com = this.__storage.getValue(entity, com_type);\r\n            if (com instanceof type) {\r\n                result.push(com);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u901A\u8FC7\u7C7B\u578B\u83B7\u53D6\u7EC4\u4EF6\u5217\u8868\r\n     * @param type \r\n     * @param check_instance \u662F\u5426\u5F00\u542Finstanceof\u68C0\u6D4B\uFF0C\u9ED8\u8BA4\u5173\u95ED\r\n     * @returns \r\n     */\r\n    getComponents<T extends IECSComponent>(type: new () => T, check_instance: boolean = false): Array<T> {\r\n        if (!check_instance) {\r\n            return this.__storage.getValues(type) as Array<T>;\r\n        }\r\n        let result: Array<T> = [];\r\n        let types: Array<new () => IECSComponent> = [];\r\n        let list = this.__storage.values.keys();\r\n        for (const com_type of list) {\r\n            const com_list = this.__storage.values.get(com_type);\r\n            //\u5224\u65AD\u5F53\u524Dentity\u4E0B\u6240\u6709\u7EC4\u4EF6\u662F\u5426\u6709\u7EC4\u4EF6\u662F\u7EE7\u627F\u4E0E\u6307\u5B9A\u7C7B\u578B\u7684\u5B50\u7C7B\u3002\r\n            if (com_list.length > 0) {\r\n                for (let i = 0; i < com_list.length; i++) {\r\n                    const element = com_list[i];\r\n                    if (element instanceof type) {\r\n                        types.push(com_type);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let index = 0; index < types.length; index++) {\r\n            const element = types[index];\r\n            result = result.concat(this.__storage.getValues(element) as Array<T>);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7EC4\u4EF6\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u6DFB\u52A0\r\n     * @param entity \r\n     * @param type \r\n     * @returns \r\n     */\r\n    getAddComponent<T extends IECSComponent>(entity: ECSEntity, type: new () => T): T {\r\n        if (this.__storage.hasValue(entity, type)) {\r\n            return this.getComponent(entity, type);\r\n        }\r\n        return this.addComponent(entity, type);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u591A\u4E2A\u7CFB\u7EDF\r\n     * @param sys_list \r\n     */\r\n    addSystems(sys: Array<new () => ECSSystem>): void {\r\n        for (let i = 0; i < sys.length; i++) {\r\n            this.addSystem(sys[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u7CFB\u7EDF \r\n     */\r\n    addSystem(sysClass: new () => ECSSystem): void {\r\n        if (this.__systems.has(sysClass)) {\r\n            return;\r\n        }\r\n        const sys = new sysClass();\r\n        sys.setWorld(this);\r\n        this.__systems.set(sysClass, sys);\r\n        //\u6DFB\u52A0\u4F9D\u8D56\r\n        let list = sys._matcher._dependencies;\r\n        for (const com_type of list) {\r\n            let systems: Array<ECSSystem>;\r\n            if (!this.__componentSystems.has(com_type)) {\r\n                systems = [];\r\n                this.__componentSystems.set(com_type, systems);\r\n            } else {\r\n                systems = this.__componentSystems.get(com_type);\r\n            }\r\n            if (systems.indexOf(sys) < 0) {\r\n                systems.push(sys);\r\n            }\r\n        }\r\n        //\u6309\u7167\u7F16\u7EC4\u89C4\u5219\u5339\u914D\r\n        this.__matcherAll(sys);\r\n        this.__need_sort_systems = true;\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\u8BE5\u7CFB\u7EDF\r\n     * @param key \r\n     * @returns \r\n     */\r\n    hasSystem(key: new () => ECSSystem): boolean {\r\n        return this.__systems.has(key);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u7CFB\u7EDF\r\n     * @param key \r\n     * @returns \r\n     */\r\n    getSystem(key: new () => ECSSystem): ECSSystem | undefined {\r\n        return this.__systems.get(key);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u7CFB\u7EDF\r\n     * @param value \r\n     */\r\n    removeSystem(value: ECSSystem): void {\r\n        const sysClass = value.constructor as new () => ECSSystem;\r\n        if (!this.__systems.has(sysClass)) {\r\n            throw new Error(\"\u627E\u4E0D\u5230\u8981\u5220\u9664\u7684\u7CFB\u7EDF\");\r\n        }\r\n        let sys = this.__systems.delete(sysClass);\r\n        //\u6DFB\u52A0\u4F9D\u8D56\r\n        let list = sys._matcher._dependencies;\r\n        for (const com_type of list) {\r\n            const systems = this.__componentSystems.get(com_type);\r\n            const index = systems.indexOf(sys);\r\n            if (index >= 0) {\r\n                systems.splice(index, 1);\r\n            }\r\n        }\r\n        value.setWorld(null);\r\n        value.destory();\r\n        this.__need_sort_systems = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * \u6E05\u7406\u6240\u6709\u5143\u7D20\r\n     */\r\n    clearAll(): void {\r\n        this.__waitFree.splice(0, this.__waitFree.length);\r\n        this.__storage.clear();\r\n        const systems = this.__systems.elements;\r\n        for (let index = 0; index < systems.length; index++) {\r\n            const sys = systems[index];\r\n            sys.destory();\r\n        }\r\n        this.__systems.clear();\r\n        this.__componentSystems.clear();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clearAll();\r\n        this.__waitFree.splice(0, this.__waitFree.length);\r\n        this.__waitFree = null;\r\n        this.__storage.destroy();\r\n        this.__storage = null;\r\n        this.__systems = null;\r\n    }\r\n\r\n    /**\u6807\u8BB0\u7EC4\u4EF6\u810F\u4E86 */\r\n    private __componentDirty<T extends IECSComponent>(entity: ECSEntity, type: new () => T): void {\r\n        let systems = this.__componentSystems.get(type);\r\n        this.__matcher(entity, true, false, systems);\r\n    }\r\n\r\n    /**\u5C06\u6240\u6709entity\u8DDF\u7CFB\u7EDF\u8FDB\u884C\u5339\u914D */\r\n    private __matcherAll(sys: ECSSystem): void {\r\n        ECSWorld.HELP_ENTITY_LIST.splice(0, ECSWorld.HELP_ENTITY_LIST.length);\r\n        let list = this.__storage.getIDList(ECSWorld.HELP_ENTITY_LIST);\r\n        for (let index = 0; index < list.length; index++) {\r\n            const id = list[index];\r\n            if (this.__matcherEntity(sys._matcher, id)) {\r\n                sys.addEntity(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    private __matcher(id: ECSEntity, useDirty: boolean, all: boolean = false, p_systems?: Array<ECSSystem>): void {\r\n        if (!this.__systems) return;\r\n        const systems = p_systems || this.__systems.elements;\r\n        for (let index = 0; index < systems.length; index++) {\r\n            const sys = systems[index];\r\n            if (sys.useDirty == useDirty || all) {\r\n                if (this.__matcherEntity(sys._matcher, id)) {\r\n                    if (!sys.hasEntity(id)) {\r\n                        sys.addEntity(id);\r\n                    }\r\n                } else {\r\n                    if (sys.hasEntity(id)) {\r\n                        sys.removeEntity(id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private __matcherEntity(matcher: ECSMatcher, entity: ECSEntity): boolean {\r\n        let mainMatcher: boolean = this.__matcherComponents(matcher.matcher!, entity);\r\n        let anyMatcher: boolean = matcher.matcherAnyOf == undefined ? true : this.__matcherComponents(matcher.matcherAnyOf, entity);\r\n        let noneMatcher = matcher.matcherNoneOf == undefined ? true : this.__matcherComponents(matcher.matcherNoneOf, entity);\r\n        return mainMatcher && anyMatcher && noneMatcher;\r\n    }\r\n\r\n    private __matcherComponents(matcher: Matcher, entity: ECSEntity): boolean {\r\n        if (matcher instanceof MatcherAllOf) {\r\n            for (let index = 0; index < matcher.types.length; index++) {\r\n                const comType = matcher.types[index];\r\n                if (!this.hasComponent(entity, comType)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else if (matcher instanceof MatcherAnyOf) {\r\n            for (let index = 0; index < matcher.types.length; index++) {\r\n                const comType = matcher.types[index];\r\n                if (this.hasComponent(entity, comType)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        //\u6392\u9664\r\n        for (let index = 0; index < matcher.types.length; index++) {\r\n            const comType = matcher.types[index];\r\n            if (this.hasComponent(entity, comType)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}", "\r\n\r\n/**\r\n * \u7A00\u758F\u96C6\u5408\r\n */\r\nexport class SparseSet {\r\n\r\n    /**\u65E0\u6548\u503C */\r\n    invalid: number = 0;\r\n    private __maxCount: number = 0;\r\n    private __packed: Uint32Array;\r\n    private __index: number = 0;\r\n    private __sparse: Uint32Array;\r\n\r\n    constructor(maxCount: number) {\r\n        this.__maxCount = this.invalid = maxCount;\r\n        this.__packed = new Uint32Array(this.__maxCount);\r\n        this.__packed.fill(this.invalid);\r\n        this.__sparse = new Uint32Array(this.__maxCount);\r\n        this.__sparse.fill(this.invalid);\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\r\n     * @param id \r\n     */\r\n    add(id: number): void {\r\n        if (id >= this.invalid) {\r\n            throw new Error(\"\u8D85\u51FA\u6700\u5927\u7D22\u5F15:\" + id + \"/\" + this.invalid)\r\n        }\r\n        this.__packed[this.__index] = id;\r\n        this.__sparse[id] = this.__index;\r\n        this.__index++;\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\r\n     * @param id \r\n     * @returns \r\n     */\r\n    contains(id: number): boolean {\r\n        if (id >= this.__sparse.length) {\r\n            return false;\r\n        }\r\n        if (this.__sparse[id] == this.invalid) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\r\n     * @param id \r\n     */\r\n    remove(id: number): void {\r\n        if (id >= this.__maxCount) {\r\n            throw new Error(\"\u8D85\u51FA\u8303\u56F4\");\r\n        }\r\n        let delete_packIdx = this.__sparse[id];\r\n        let lastIdx = this.__index - 1;\r\n        if (this.length == 1 || delete_packIdx == lastIdx) {\r\n            this.__packed[lastIdx] = this.invalid;\r\n            this.__sparse[id] = this.invalid;\r\n        } else {\r\n            let swap_id = this.__packed[lastIdx];\r\n            this.__packed[delete_packIdx] = swap_id;\r\n            this.__sparse[id] = this.invalid;\r\n            this.__sparse[swap_id] = delete_packIdx;\r\n            this.__packed[lastIdx] = this.invalid;\r\n        }\r\n        this.__index--;\r\n    }\r\n\r\n    /**\r\n     * \u6E05\u9664\u6240\u6709\r\n     */\r\n    clear(): void {\r\n        this.__packed.fill(this.invalid);\r\n        this.__sparse.fill(this.invalid);\r\n        this.__index = 0;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.__packed = null;\r\n        this.__sparse = null;\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6packed\u7684\u7D22\u5F15\u503C\r\n     * @param id \r\n     * @returns \r\n     */\r\n    getPackedIdx(id: number): number {\r\n        if (id >= this.__sparse.length) {\r\n            return this.invalid;\r\n        }\r\n        if (this.__sparse[id] == this.invalid) {\r\n            return this.invalid;\r\n        }\r\n        //\u627E\u5230\u5728packed\u4E2D\u7684\u7D22\u5F15\u4F4D\u7F6E\r\n        const pIdx = this.__sparse[id];\r\n        return pIdx;\r\n    }\r\n\r\n    /**\r\n     * \u6700\u540E\u4E00\u4E2Aentity\r\n     */\r\n    get lastEntity(): number {\r\n        return this.__packed[this.__index - 1];\r\n    }\r\n\r\n    get packed(): Uint32Array {\r\n        return this.__packed;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.__index;\r\n    }\r\n\r\n    get maxCount(): number {\r\n        return this.__maxCount;\r\n    }\r\n}", "import { ECSEntity } from \"./ECSEntity\";\r\nimport { ECSMatcher, MatcherAllOf, MatcherAnyOf, MatcherNoneOf } from \"./ECSMatcher\";\r\nimport { ECSWorld } from \"./ECSWorld\";\r\n\r\n/**\r\n * \u7CFB\u7EDF\r\n */\r\nexport abstract class ECSSystem {\r\n\r\n    private static HELP_ENTITY_LIST: Array<ECSEntity> = [];\r\n\r\n    /**\u662F\u5426\u4F7F\u7528\u810F\u6570\u636E*/\r\n    useDirty: boolean = false;\r\n\r\n    /**\u5339\u914D\u5668 */\r\n    _matcher: ECSMatcher;\r\n\r\n    /**\u6240\u5C5E\u4E16\u754C */\r\n    private __world: ECSWorld | null = null;\r\n\r\n    /**\r\n     * \u7CFB\u7EDF\r\n     * @param allOrAny  \u5339\u914D\u6240\u6709\u6216\u4EFB\u610F\u4E00\u4E2A \r\n     * @param none      \u4E0D\u80FD\u5305\u542B\r\n     * @param useDirty  \u662F\u5426\u4F7F\u7528\u810F\u6570\u636E\u673A\u5236\r\n     */\r\n    constructor(allOrAny: MatcherAllOf | MatcherAnyOf, matcherAnyOf?: MatcherAnyOf, none?: MatcherNoneOf, useDirty: boolean = false) {\r\n        this._matcher = new ECSMatcher(allOrAny, matcherAnyOf, none);\r\n        this.useDirty = useDirty;\r\n    }\r\n\r\n    /**\u8BBE\u7F6E\u6240\u5C5E\u4E16\u754C */\r\n    setWorld(v: ECSWorld): void {\r\n        this.__world = v;\r\n    }\r\n\r\n    /**\u5FC3\u8DF3 */\r\n    tick(dt: number): void {\r\n        if (this._matcher.entitys.size == 0) return;\r\n        this.$tick(this._matcher.entitys, dt);\r\n        if (this.useDirty) {\r\n            this._matcher.clear();\r\n        }\r\n    }\r\n\r\n    hasEntity(entity: ECSEntity): boolean {\r\n        return this._matcher.has(entity);\r\n    }\r\n\r\n    removeEntity(entity: ECSEntity): void {\r\n        this._matcher.remove(entity);\r\n    }\r\n\r\n    addEntity(entity: ECSEntity): void {\r\n        this._matcher.add(entity);\r\n    }\r\n\r\n    /**\u6240\u5C5E\u4E16\u754C */\r\n    get world(): ECSWorld {\r\n        return this.__world!;\r\n    }\r\n\r\n    protected $tick(entitys: Set<ECSEntity>, dt: number): void {\r\n\r\n    }\r\n\r\n    /**\u9500\u6BC1 */\r\n    destory(): void {\r\n        this.__world = null;\r\n        this._matcher = null;\r\n    }\r\n}", "import { ECSComponent } from \"../core/ECSComponent\";\r\n\r\n\r\n/**\r\n * \u9635\u8425\u57FA\u7840\u7C7B\r\n */\r\nexport class CampComponent extends ECSComponent {\r\n    /**\r\n     * \u9635\u8425\r\n     */\r\n    camp: number = 0;\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "import { Quat, Vec3 } from \"cc\";\r\nimport { ECSComponent } from \"../core/ECSComponent\";\r\n\r\n\r\n/**\r\n * \u53D8\u6362\u7EC4\u4EF6\r\n */\r\nexport class TransformComponent extends ECSComponent {\r\n\r\n    /**\r\n     * \u662F\u5426\u7FFB\u8F6CY\u8F74\r\n     */\r\n    static YAxisFlip: boolean = true;\r\n\r\n    private __position: Vec3;\r\n    private __rotation: Quat;\r\n    private __angle: Vec3;\r\n    private __scale: Vec3;\r\n    private __direction: Vec3;\r\n\r\n    constructor() {\r\n        super();\r\n        this.__position = new Vec3();\r\n        this.__rotation = new Quat();\r\n        this.__angle = new Vec3();\r\n        this.__scale = new Vec3(1, 1, 1);\r\n        //\u9ED8\u8BA4\u671D\u5411z\u8F74\r\n        this.__direction = new Vec3(1, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u671D\u5411\r\n     * @param x \r\n     * @param y \r\n     * @param z \r\n     */\r\n    setDirection(x?: number, y?: number, z?: number): void {\r\n        let changed: boolean = false;\r\n        if (x != undefined && this.__direction.x != x) {\r\n            this.__direction.x = x;\r\n            changed = true;\r\n        }\r\n        if (y != undefined && this.__direction.y != y) {\r\n            this.__direction.y = y;\r\n            changed = true;\r\n        }\r\n        if (z != undefined && this.__direction.z != z) {\r\n            this.__direction.z = z;\r\n            changed = true;\r\n        }\r\n        if (changed) {\r\n            this.markDirtied();\r\n        }\r\n    }\r\n\r\n    get direction(): Vec3 {\r\n        return this.__direction;\r\n    }\r\n\r\n    setPosition(x?: number, y?: number, z?: number): void {\r\n        let changed: boolean = false;\r\n        if (x != undefined && this.__position.x != x) {\r\n            this.__position.x = x;\r\n            changed = true;\r\n        }\r\n        if (y != undefined && this.__position.y != y) {\r\n            this.__position.y = y;\r\n            changed = true;\r\n        }\r\n        if (z != undefined && this.__position.z != z) {\r\n            this.__position.z = z;\r\n            changed = true;\r\n        }\r\n        if (changed) {\r\n            this.markDirtied();\r\n        }\r\n    }\r\n\r\n    get x(): number {\r\n        return this.__position.x;\r\n    }\r\n\r\n    set x(v: number) {\r\n        if (this.__position.x == v) return;\r\n        this.__position.x = v;\r\n        this.markDirtied();\r\n    }\r\n\r\n    get y(): number {\r\n        return this.__position.y;\r\n    }\r\n\r\n    set y(v: number) {\r\n        if (this.__position.y == v) return;\r\n        this.__position.y = v;\r\n        this.markDirtied();\r\n    }\r\n\r\n    get z(): number {\r\n        return this.__position.z;\r\n    }\r\n\r\n    set z(v: number) {\r\n        if (this.__position.z == v) return;\r\n        this.__position.z = v;\r\n        this.markDirtied();\r\n    }\r\n\r\n    get position(): Vec3 {\r\n        return this.__position;\r\n    }\r\n\r\n    set position(v: Vec3) {\r\n        if (this.__position.equals(v)) return;\r\n        this.__position.set(v);\r\n        this.markDirtied();\r\n    }\r\n\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u65CB\u8F6C\u89D2\u5EA6(0-360)\r\n     * @param x \r\n     * @param y \r\n     * @param z \r\n     */\r\n    setAngle(x: number, y?: number, z?: number): void {\r\n        let changed: boolean = false;\r\n        if (x != undefined && this.__angle.x != x) {\r\n            this.__angle.x = x;\r\n            changed = true;\r\n        }\r\n        if (y != undefined && this.__angle.y != y) {\r\n            this.__angle.y = y;\r\n            changed = true;\r\n        }\r\n        if (z != undefined && this.__angle.z != z) {\r\n            this.__angle.z = z;\r\n            changed = true;\r\n        }\r\n        if (changed) {\r\n            Quat.fromEuler(this.__rotation, this.__angle.x, this.__angle.y, this.__angle.z);\r\n            this.markDirtied();\r\n        }\r\n    }\r\n\r\n    get rotation(): Quat {\r\n        return this.__rotation;\r\n    }\r\n\r\n    set rotation(v: Quat) {\r\n        if (this.__rotation.equals(v)) return;\r\n        this.__rotation.set(v);\r\n        this.markDirtied();\r\n    }\r\n\r\n    /**\r\n     * \u8BBE\u7F6E\u7F29\u653E\u6BD4\u4F8B\r\n     * @param x \r\n     * @param y \r\n     * @param z \r\n     */\r\n    setScale(x?: number, y?: number, z?: number): void {\r\n        let changed = false;\r\n        if (x != undefined && this.__angle.x != x) {\r\n            this.__scale.x = x;\r\n            changed = true;\r\n        }\r\n        if (y != undefined && this.__angle.y != y) {\r\n            this.__scale.y = y;\r\n            changed = true;\r\n        }\r\n        if (z != undefined && this.__angle.z != z) {\r\n            this.__scale.z = z;\r\n            changed = true;\r\n        }\r\n        if (changed) {\r\n            this.markDirtied()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u7F29\u653E\u6BD4\u4F8B\r\n     */\r\n    set scale(v: Vec3) {\r\n        if (this.__scale.equals(v)) return;\r\n        this.__scale.set(v);\r\n        this.markDirtied();\r\n    }\r\n\r\n    get scale(): Vec3 {\r\n        return this.__scale;\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        this.__direction.set(0, 0, 0);\r\n        this.__position.set(0, 0, 0);\r\n        this.__angle.set(0, 0, 0);\r\n        this.__rotation.set(0, 0, 0, 1);\r\n        this.__scale.set(1, 1, 1);\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { ECSComponent } from \"../core/ECSComponent\";\r\nimport { ECSEntity } from \"../core/ECSEntity\";\r\n\r\n/**\r\n * \u8BBE\u7F6E\u7236\u8282\u70B9\u7EC4\u4EF6\r\n */\r\nexport class ParentComponent extends ECSComponent {\r\n\r\n    private __parent: ECSEntity | Node | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    set parent(v: ECSEntity | Node | null) {\r\n        if (this.__parent === v) return;\r\n        this.__parent = v;\r\n        this.markDirtied();\r\n    }\r\n\r\n    get parent(): ECSEntity | Node | null {\r\n        return this.__parent;\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        this.parent = null;\r\n    }\r\n}", "\r\n\r\nimport { ParentComponent } from \"./ParentComponent\";\r\nimport { Node } from \"cc\";\r\nimport { NodeComponent } from \"./NodeComponent\";\r\nimport { ECSSystem } from \"../core/ECSSystem\";\r\nimport { ECSEntity } from \"../core/ECSEntity\";\r\nimport { MatcherAllOf } from \"../core/ECSMatcher\";\r\n\r\n\r\n\r\nexport class AddToParentQueueSystem extends ECSSystem {\r\n\r\n    private nodes: Set<ECSEntity>;\r\n\r\n    private frame_count: number = Number.MAX_VALUE;\r\n\r\n    constructor() {\r\n        super(\r\n            new MatcherAllOf([\r\n                ParentComponent,\r\n            ]),\r\n            undefined,\r\n            undefined,\r\n            true\r\n        );\r\n        this.nodes = new Set();\r\n    }\r\n\r\n    tick(dt: number): void {\r\n        super.tick(dt);\r\n        if (this.nodes.size > 0) {\r\n            let count = Math.min(this.frame_count, this.nodes.size);\r\n            let itr = this.nodes.values();\r\n            let index: number = 0;\r\n            while (index < count) {\r\n                const entity = itr.next().value as ECSEntity;\r\n                this.nodes.delete(entity);\r\n                if (this.world.hasEntity(entity)) {\r\n                    const parent_com = this.world.getComponent(entity, ParentComponent)!;\r\n                    const node_com = this.world.getComponent(entity, NodeComponent)!;\r\n                    if (parent_com.parent == null) {\r\n                        continue;\r\n                    }\r\n                    if (parent_com.parent instanceof Node) {\r\n                        parent_com.parent.addChild(node_com);\r\n                    } else {\r\n                        let parent_node = this.world.getComponent(parent_com.parent, NodeComponent)!;\r\n                        parent_node.addChild(node_com);\r\n                    }\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected $tick(entitys: Set<ECSEntity>, dt: number): void {\r\n        for (const entity of entitys) {\r\n            this.nodes.add(entity);\r\n        }\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { ECSEntity } from \"../core/ECSEntity\";\r\nimport { ECSWorld } from \"../core/ECSWorld\";\r\nimport { IECSComponent } from \"../core/IECSComponent\";\r\nimport { TickerManager } from \"dream-cc-core\";\r\n\r\n\r\n\r\n\r\nexport class NodeComponent extends Node implements IECSComponent {\r\n\r\n    world: ECSWorld | null = null;\r\n    entity: ECSEntity | null = null;\r\n    dirtySignal: (() => void) | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    enable(): void {\r\n        this.name = this.entity.toString();\r\n    }\r\n\r\n    markDirtied(): void {\r\n        TickerManager.callNextFrame(this.nextFrame, this);\r\n    }\r\n\r\n    private nextFrame(): void {\r\n        this.dirtySignal && this.dirtySignal();\r\n    }\r\n\r\n    reset(): void {\r\n        TickerManager.clearNextFrame(this.nextFrame, this);\r\n        this.dirtySignal = null;\r\n        this.world = null;\r\n        this.entity = -1;\r\n        this.active = true;\r\n        this.setPosition(0, 0, 0);\r\n        this.setScale(1, 1, 1);\r\n        this.setRotationFromEuler(0, 0, 0);\r\n        //\u4ECE\u7236\u8282\u70B9\u4E2D\u5220\u9664\r\n        if (this.parent) {\r\n            this.removeFromParent();\r\n        }\r\n        //\u6E05\u7406\u81EA\u8EAB\u5185\u5BB9\r\n        this.removeAllChildren();\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { NodeComponent } from \"./NodeComponent\";\r\nimport { ParentComponent } from \"./ParentComponent\";\r\nimport { MatcherAllOf } from \"../core/ECSMatcher\";\r\nimport { ECSSystem } from \"../core/ECSSystem\";\r\nimport { ECSEntity } from \"../core/ECSEntity\";\r\n\r\n\r\n\r\n/**\r\n * \u6DFB\u52A0\u5230\u7236\u8282\u70B9\u7CFB\u7EDF\r\n */\r\nexport class AddToParentSystem extends ECSSystem {\r\n    \r\n    constructor() {\r\n        super(\r\n            new MatcherAllOf([\r\n                ParentComponent,\r\n            ]),\r\n            undefined,\r\n            undefined,\r\n            true\r\n        );\r\n    }\r\n\r\n    protected $tick(entitys: Set<ECSEntity>, dt: number): void {\r\n        for (const entity of entitys) {\r\n            const parent_com = this.world.getComponent(entity, ParentComponent)!;\r\n            const node_com = this.world.getComponent(entity, NodeComponent)!;\r\n            if (parent_com.parent == null) {\r\n                continue;\r\n            }\r\n            if (parent_com.parent instanceof Node) {\r\n                parent_com.parent.addChild(node_com);\r\n            } else {\r\n                let parent_node_com = this.world.getComponent(parent_com.parent, NodeComponent)!;\r\n                parent_node_com.addChild(node_com);\r\n            }\r\n        }\r\n    }\r\n}", "import { ECSEntity } from \"../core/ECSEntity\";\r\nimport { MatcherAllOf } from \"../core/ECSMatcher\";\r\nimport { ECSSystem } from \"../core/ECSSystem\";\r\nimport { NodeComponent } from \"./NodeComponent\";\r\nimport { TransformComponent } from \"../transforms/TransformComponent\";\r\n\r\n\r\nexport class NodeSystem extends ECSSystem {\r\n\r\n    constructor() {\r\n        super(\r\n            new MatcherAllOf([\r\n                NodeComponent,\r\n                TransformComponent\r\n            ]),\r\n            undefined,\r\n            undefined,\r\n            true//\u4F7F\u7528\u810F\u6570\u636E\r\n        );\r\n    }\r\n\r\n    protected $tick(entitys: Set<ECSEntity>, dt: number): void {\r\n        for (const entity of entitys) {\r\n            const node_com = this.world.getComponent(entity, NodeComponent)!;\r\n            const trans_com = this.world.getComponent(entity, TransformComponent)!;\r\n            //\u65CB\u8F6C\r\n            node_com.setRotation(trans_com.rotation);\r\n            //\u5E73\u79FB\r\n            if (TransformComponent.YAxisFlip) {\r\n                node_com.setPosition(trans_com.position.x, trans_com.position.y * -1, trans_com.position.z);\r\n            } else {\r\n                node_com.setPosition(trans_com.position);\r\n            }\r\n            //\u7F29\u653E\r\n            node_com.setScale(trans_com.scale);\r\n        }\r\n    }\r\n}", "import { Vec3 } from \"cc\";\r\nimport { ECSComponent } from \"../core/ECSComponent\";\r\n\r\n\r\n/**\r\n * \u5927\u5C0F\u8BB0\u5F55\u7EC4\u4EF6(\u53EA\u7528\u4E8E\u8BB0\u5F55\u5927\u5C0F)\r\n */\r\nexport class SizeComponent extends ECSComponent {\r\n\r\n    private __size: Vec3 = new Vec3(1, 1, 1);\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    setSize(w: number, h: number): void {\r\n        this.__size.x = w;\r\n        this.__size.y = h;\r\n        this.markDirtied();\r\n    }\r\n    \r\n    set width(v: number) {\r\n        if (this.__size.x === v) return;\r\n        this.__size.x = v;\r\n        this.markDirtied();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.__size.x;\r\n    }\r\n\r\n    set height(v: number) {\r\n        if (this.__size.y === v) return;\r\n        this.__size.y = v;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.__size.y;\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        this.__size.set(1, 1, 1);\r\n    }\r\n}", "import { ECSComponent } from \"../core/ECSComponent\";\r\nimport { NodeComponent } from \"../nodes/NodeComponent\";\r\nimport { Node } from \"cc\";\r\n\r\n\r\n\r\n\r\n/**\r\n * \u663E\u793A\u7EC4\u4EF6\r\n */\r\nexport class DisplayComponent extends ECSComponent {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    enable(): void {\r\n        //\u5982\u679C\u6CA1\u6709\u8282\u70B9\u7EC4\u4EF6\r\n        if (!this.world!.hasComponent(this.entity!, NodeComponent)) {\r\n            this.world?.addComponent(this.entity!, NodeComponent);\r\n        }\r\n    }\r\n    \r\n    reset(): void {\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * \u8282\u70B9\r\n     */\r\n    get node(): Node | null {\r\n        if (this.world && this.entity) {\r\n            let node_com = this.world?.getComponent(this.entity!, NodeComponent)!;\r\n            return node_com;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    set name(v: string) {\r\n        this.node && (this.node.name = v);\r\n    }\r\n\r\n    get name(): string {\r\n        return this.node?.name || \"\";\r\n    }\r\n}", "import { Graphics } from \"cc\";\r\nimport { DisplayComponent } from \"./DisplayComponent\";\r\n\r\n\r\n/**\r\n * \u7ED8\u753B\u7EC4\u4EF6\r\n */\r\nexport class GraphicsComponent extends DisplayComponent {\r\n\r\n    private __graphics: Graphics;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    enable(): void {\r\n        super.enable();\r\n        this.__graphics = this.node.addComponent(Graphics);\r\n    }\r\n\r\n    get graphics(): Graphics {\r\n        return this.__graphics;\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        if (this.__graphics) {\r\n            this.__graphics.destroy();\r\n            this.__graphics = null;\r\n        }\r\n    }\r\n}", "import { ECSComponent } from \"../core/ECSComponent\";\r\n\r\n\r\n\r\nexport class DataComponent extends ECSComponent {\r\n\r\n    private __data: any;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        this.__data = null;\r\n    }\r\n\r\n    set data(v: any) {\r\n        if (this.__data == v) return;\r\n        this.__data = v;\r\n        this.markDirtied();\r\n    }\r\n\r\n    get data(): any {\r\n        return this.__data;\r\n    }\r\n}", "import { ECSComponent } from \"../core/ECSComponent\";\nimport { ECSEntity } from \"../core/ECSEntity\";\n\n/**\n * \u94FE\u63A5\u7EC4\u4EF6\n */\nexport class LinkComponent extends ECSComponent {\n  /**\u94FE\u63A5\u76EE\u6807 */\n  target?: ECSEntity;\n  constructor() {\n    super();\n  }\n}\n", "\nimport { ECSEntity } from \"../core/ECSEntity\";\nimport { MatcherAllOf } from \"../core/ECSMatcher\";\nimport { ECSSystem } from \"../core/ECSSystem\";\nimport { TransformComponent } from \"../transforms/TransformComponent\";\nimport { LinkComponent } from \"./LinkComponent\";\n\nexport class LinkSystem extends ECSSystem {\n  constructor() {\n    super(new MatcherAllOf([LinkComponent, TransformComponent]));\n  }\n\n  protected $tick(entitys: Set<ECSEntity>, dt: number): void {\n    for (let entity of entitys) {\n      const link_com = this.world.getComponent(entity, LinkComponent);\n      const trans = this.world.getComponent(entity, TransformComponent);\n      if (link_com.target) {\n        const target_trans = this.world.getComponent(\n          link_com.target,\n          TransformComponent,\n        );\n        trans.setPosition(target_trans.x, target_trans.y, target_trans.z);\n      }\n    }\n  }\n}\n", "import { RenderRoot2D } from \"cc\";\r\nimport { DisplayComponent } from \"./DisplayComponent\";\r\n\r\n\r\n\r\n\r\n/**\r\n * 3D\u4E16\u754C\u4E2D\u76842D\u6E32\u67D3\u7EC4\u4EF6\r\n */\r\nexport class RendererRoot2DComponent extends DisplayComponent {\r\n\r\n    private __root2D: RenderRoot2D;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    enable(): void {\r\n        super.enable();\r\n        this.__root2D = this.node.addComponent(RenderRoot2D);\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        if (this.__root2D) {\r\n            this.__root2D.destroy();\r\n            this.__root2D = null;\r\n        }\r\n    }\r\n}", "import { IDestroyable } from \"dream-cc-core\";\r\n\r\n\r\n\r\n/**\r\n * \u5173\u5361\u72B6\u6001\u6570\u636E\u5B58\u653E\r\n */\r\nexport class LevelStatus implements IDestroyable {\r\n\r\n    private __status: Map<any, any>;\r\n\r\n    constructor() {\r\n        this.__status = new Map<any, any>();\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6570\u636E\r\n     * @param key \r\n     * @returns \r\n     */\r\n    get<T>(key: any): T {\r\n        return this.__status.get(key) as T;\r\n    }\r\n\r\n    /**\r\n     * \u662F\u5426\u5305\u542B\u6570\u636E\r\n     * @param key \r\n     * @returns \r\n     */\r\n    has(key:any):boolean{\r\n        return this.__status.has(key);\r\n    }\r\n    \r\n    /**\r\n     * \u8BBE\u7F6E\u6570\u636E\r\n     * @param key \r\n     * @param value \r\n     */\r\n    set(key: any, value: any): void {\r\n        this.__status.set(key, value);\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u6570\u636E\r\n     */\r\n    delete(key: any): void {\r\n        this.__status.delete(key);\r\n    }\r\n\r\n    clear(): void {\r\n        this.__status.clear();\r\n    }\r\n\r\n    destroy(): boolean {\r\n        this.clear();\r\n        this.__status = null;\r\n        return true;\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { LevelMode } from \"./LevelMode\";\r\nimport { LevelStatus } from \"./LevelStatus\";\r\nimport { Event, EventDispatcher } from \"dream-cc-core\";\r\nimport { ECSWorld } from \"../core/ECSWorld\";\r\n\r\n\r\n/**\r\n * \u5173\u5361\r\n */\r\nexport class Level extends EventDispatcher {\r\n    /**\r\n     * \u5173\u5361\u4E16\u754CKEY\r\n     */\r\n    key: string;\r\n    private __status: LevelStatus;\r\n    private __world_root: Node;\r\n    private __world: ECSWorld;\r\n    private __mode: LevelMode;\r\n    private __entered: boolean = false;\r\n    constructor() {\r\n        super();\r\n        this.__status = new LevelStatus();\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     * @param root \r\n     * @param entity_max_count  \u6700\u5927\u5B9E\u4F53\u6570\u91CF\r\n     */\r\n    init(root: Node, entity_max_count: number = 1024): void {\r\n        let old = this.__world;\r\n        if (old) {\r\n            old.clearAll();\r\n            old.destroy();\r\n        }\r\n        this.__world = new ECSWorld(entity_max_count);\r\n        this.__world_root = root;\r\n    }\r\n\r\n    /**\r\n     * \u8FDB\u5165\u5173\u5361\r\n     * @param mode          \u73A9\u6CD5\u6A21\u5F0F\r\n     * @param mode_data     \u73A9\u6CD5\u6570\u636E\r\n     */\r\n    enter(mode: LevelMode, ...mode_data: any[]): void {\r\n        let old = this.__mode;\r\n        if (old) {\r\n            old.destroy();\r\n            this.world.clearAll();\r\n        }\r\n        this.__mode = mode;\r\n        this.__mode.level = this;\r\n        this.__mode.on(Event.COMPLETE, this.__enterComplete, this);\r\n        this.__mode.init(...mode_data);\r\n    }\r\n\r\n    private __enterComplete(e: Event): void {\r\n        this.__mode.off(Event.COMPLETE, this.__enterComplete, this);\r\n        this.__entered = true;\r\n    }\r\n\r\n    /**\r\n     * \u5173\u5361\u5FC3\u8DF3\u7EDF\u4E00\u63A5\u53E3\r\n     * @param dt \r\n     */\r\n    tick(dt: number): void {\r\n        if (this.__entered) {\r\n            this.__world.tick(dt);\r\n            this.__mode.tick(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u9000\u51FA\u5173\u5361\r\n     */\r\n    exit(): void {\r\n        this.__entered = false;\r\n        //\u6E05\u7406\u4E16\u754C\u4E2D\u7684\u6240\u6709\u5185\u5BB9\r\n        this.__world.clearAll();\r\n        //\u9500\u6BC1\u6A21\u5F0F\r\n        this.__mode.destroy();\r\n        this.__mode = null;\r\n        this.status.clear();\r\n    }\r\n\r\n    /**\r\n     * \u6839\u8282\u70B9\r\n     */\r\n    get root(): Node {\r\n        return this.__world_root;\r\n    }\r\n\r\n    /**\r\n     * \u4E16\u754C\r\n     */\r\n    get world(): ECSWorld {\r\n        return this.__world;\r\n    }\r\n\r\n    /**\r\n     * \u6A21\u5F0F\r\n     */\r\n    get mode(): LevelMode {\r\n        return this.__mode;\r\n    }\r\n\r\n    /**\r\n     * \u72B6\u6001(\u7528\u4E8E\u8BB0\u5F55\u4E00\u4E0B\u5BF9\u4E8E\u5173\u5361\u4E2D\u7684\u4E00\u4E9B\"\u5168\u5C40\"\u72B6\u6001\u4FE1\u606F)\")\r\n     */\r\n    get status(): LevelStatus {\r\n        return this.__status;\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { Level } from \"./Level\";\r\nimport { LevelMode } from \"./LevelMode\";\r\nimport { TickerManager } from \"dream-cc-core\";\r\n\r\n\r\n\r\n\r\nexport class LevelManager {\r\n\r\n    private __levels: Map<string, Level>;\r\n\r\n    constructor() {\r\n        this.__levels = new Map<string, Level>();\r\n        TickerManager.addTicker(this);\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\u5173\u5361\r\n     * @param key \r\n     * @param root \r\n     * @param max_count \r\n     */\r\n    initLevel(key: string, root: Node, max_count: number = 1024): Level {\r\n        if (this.__levels.has(key)) {\r\n            throw new Error(`\u5173\u5361[${key}]\u5DF2\u5B58\u5728`);\r\n        }\r\n        let level = new Level();\r\n        level.key = key;\r\n        level.init(root, max_count);\r\n        this.__levels.set(key, level);\r\n        return level;\r\n    }\r\n\r\n    /**\r\n     * \u5173\u5361\u662F\u5426\u5B58\u5728\r\n     * @param key \r\n     * @returns \r\n     */\r\n    hasLevel(key: string): boolean {\r\n        return this.__levels.has(key);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u5173\u5361\u5B9E\u4F8B\r\n     * @param key \r\n     * @returns \r\n     */\r\n    getLevel(key: string): Level {\r\n        return this.__levels.get(key);\r\n    }\r\n\r\n    /**\r\n     * \u8FDB\u5165\u5173\u5361\r\n     * @param key \r\n     * @param mode \r\n     * @param data \r\n     */\r\n    enter(key: string, mode: LevelMode, ...data: any[]): void {\r\n        if (!this.__levels.has(key)) {\r\n            throw new Error(`\u5173\u5361[${key}]\u4E0D\u5B58\u5728`);\r\n        }\r\n        let level = this.__levels.get(key);\r\n        level.enter(mode, ...data);\r\n    }\r\n\r\n    /**\r\n     * \u5FC3\u8DF3\r\n     * @param dt \r\n     */\r\n    tick(dt: number): void {\r\n        let elements = this.__levels.values();\r\n        for (const element of elements) {\r\n            element.tick(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u9000\u51FA\u5173\u5361\r\n     * @param key \r\n     */\r\n    exit(key: string): void {\r\n        if (!this.__levels.has(key)) {\r\n            throw new Error(`\u5173\u5361[${key}]\u4E0D\u5B58\u5728`);\r\n        }\r\n        let level = this.__levels.get(key);\r\n        level.exit();\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6BC1\u5173\u5361\r\n     * @param key \r\n     */\r\n    destroy(key: string): void {\r\n        if (!this.__levels.has(key)) {\r\n            throw new Error(`\u5173\u5361[${key}]\u4E0D\u5B58\u5728`);\r\n        }\r\n        let level = this.__levels.get(key);\r\n        level.destroy();\r\n        this.__levels.delete(key);\r\n    }\r\n\r\n    private static __instance: LevelManager;\r\n    /**\r\n     * \u5355\u4F8B\r\n     */\r\n    static get single(): LevelManager {\r\n        if (this.__instance == null) {\r\n            this.__instance = new LevelManager();\r\n        }\r\n        return this.__instance;\r\n    }\r\n}", "import { Node } from \"cc\";\r\nimport { Level } from \"./Level\";\r\nimport { LevelModeScript } from \"./LevelModeScript\";\r\nimport { Event, EventDispatcher, Res, ResRequest, ResURL } from \"dream-cc-core\";\r\nimport { ECSWorld } from \"../core/ECSWorld\";\r\n\r\n\r\n/**\r\n * \u5173\u5361\u6A21\u5F0F\u57FA\u7C7B\r\n */\r\nexport abstract class LevelMode extends EventDispatcher {\r\n\r\n    level: Level;\r\n\r\n    /**\r\n     * \u9700\u8981\u6CE8\u518C\u7684\u914D\u7F6E\u8868\u5B58\u53D6\u5668\r\n     */\r\n    configs: Array<string>;\r\n\r\n    reqeust: ResRequest | null = null;\r\n\r\n    /**\u811A\u672C */\r\n    private __scripts: Map<new () => LevelModeScript, LevelModeScript>;\r\n\r\n    /**\u6570\u636E */\r\n    protected $data: any;\r\n    /**\u521D\u59CB\u5316\u6570\u636E*/\r\n    protected $initData: any;\r\n    /**\u521D\u59CB\u5316\u5B8C\u6210 */\r\n    protected $inited: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.__scripts = new Map<new () => LevelModeScript, LevelModeScript>();\r\n    }\r\n\r\n    /**\r\n     * \u6570\u636E\r\n     */\r\n    get data(): any {\r\n        return this.$data;\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\u6570\u636E\r\n     */\r\n    get initData(): any {\r\n        return this.$initData;\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     */\r\n    init(...arg: any[]): void {\r\n        this.$initData = arg;\r\n        //\u914D\u7F6E\u8868\r\n        let urls: Array<ResURL> = [];\r\n        if (this.configs && this.configs.length > 0) {\r\n            for (let index = 0; index < this.configs.length; index++) {\r\n                const element = this.configs[index];\r\n                const url = Res.sheet2URL(element);\r\n                urls.push(url);\r\n            }\r\n        }\r\n        if (urls.length <= 0) {\r\n            this.$init();\r\n        } else {\r\n            //\u52A0\u8F7D\r\n            this.reqeust = Res.create(\r\n                urls,\r\n                \"LevelMode\",\r\n                (progress: number) => {\r\n                    this.emit(Event.PROGRESS, \"LevelMode\", undefined, progress * 0.7);\r\n                },\r\n                (err?: Error) => {\r\n                    if (err) {\r\n                        this.reqeust.dispose();\r\n                        this.reqeust = null;\r\n                        this.emit(Event.ERROR, \"LevelMode\", err);\r\n                        return;\r\n                    }\r\n                    this.$init();\r\n                }\r\n            );\r\n            this.reqeust.load();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316,\u5982\u679C\u4E0D\u8C03\u7528super.$init\u7684\u8BDD\uFF0C\u8BF7\u5728\u5B8C\u6210\u521D\u59CB\u5316\u540E\u8C03\u7528$initComplete()\u65B9\u6CD5\u3002\r\n     */\r\n    protected $init(): void {\r\n        this.$initComplete();\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\u5B8C\u6210\r\n     */\r\n    protected $initComplete(): void {\r\n        for (const element of this.__scripts.values()) {\r\n            element.init();\r\n        }\r\n        this.$inited = true;\r\n        this.emit(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * \u5FC3\u8DF3\r\n     * @param dt \r\n     */\r\n    tick(dt: number): void {\r\n        if (this.$inited) {\r\n            this.__scripts.forEach((value, key) => {\r\n                value.tick(dt);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6DFB\u52A0\u811A\u672C\r\n     * @param type \r\n     */\r\n    addScript<T extends LevelModeScript>(type: new () => T): T | null {\r\n        if (type == null) {\r\n            return null;\r\n        }\r\n        if (this.__scripts.has(type)) {\r\n            throw new Error(\"\u91CD\u590D\u6DFB\u52A0\u811A\u672C:\" + type);\r\n        }\r\n        let value = new type();\r\n        value.mode = this;\r\n        this.__scripts.set(type, value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u811A\u672C\r\n     * @param type \r\n     * @returns \r\n     */\r\n    removeScript<T extends LevelModeScript>(type: new () => T): T | null {\r\n        if (!this.__scripts.has(type)) {\r\n            throw new Error(\"\u811A\u672C\u4E0D\u5B58\u5728!\");\r\n        }\r\n        let result = this.__scripts.get(type);\r\n        result.mode = null;\r\n        this.__scripts.delete(type);\r\n        return result as T;\r\n    }\r\n\r\n    /**\r\n     * \u79FB\u9664\u6240\u6709\u811A\u672C\r\n     */\r\n    removeAllScript(): void {\r\n        this.__scripts.forEach((value) => {\r\n            value.destroy();\r\n        });\r\n        this.__scripts.clear();\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u811A\u672C\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getScript<T extends LevelModeScript>(type: new () => T): T | null {\r\n        if (!this.__scripts.has(type)) {\r\n            return null;\r\n        }\r\n        return this.__scripts.get(type) as T;\r\n    }\r\n\r\n    destroy(): boolean {\r\n        if (super.destroy()) {\r\n\r\n            if (this.configs) {\r\n                this.configs.splice(0, this.configs.length);\r\n                this.configs = null;\r\n            }\r\n\r\n            if (this.__scripts) {\r\n                this.__scripts.forEach((value) => {\r\n                    value.destroy();\r\n                });\r\n                this.__scripts = null;\r\n            }\r\n            if (this.reqeust) {\r\n                this.reqeust.dispose();\r\n                this.reqeust = null;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \u4E16\u754C\r\n     */\r\n    get world(): ECSWorld {\r\n        return this.level.world;\r\n    }\r\n\r\n    /**\r\n     * \u6839\u8282\u70B9\r\n     */\r\n    get root(): Node {\r\n        return this.level.root;\r\n    }\r\n}", "import { ECSWorld } from \"../core/ECSWorld\";\r\nimport { LevelMode } from \"./LevelMode\";\r\n\r\n/**\r\n * \u5173\u5361\u6A21\u5F0F\u811A\u672C(\u7528\u4E8E\u62C6\u5206\u548C\u91CD\u7528\u903B\u8F91)\r\n */\r\nexport abstract class LevelModeScript {\r\n    /**\r\n     * \u6A21\u5F0F\r\n     */\r\n    mode: LevelMode;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\r\n     */\r\n    abstract init(): void;\r\n    /**\r\n     * \u9500\u6BC1\r\n     */\r\n    abstract destroy(): void;\r\n\r\n    tick(dt: number): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * \u4E16\u754C\r\n     */\r\n    get world(): ECSWorld {\r\n        return this.mode.world;\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["Dictionary", "index", "Dictionary", "Node", "TickerManager", "Node", "Node", "Node", "Vec3", "Vec3", "TickerManager", "Event", "EventDispatcher"]
}
